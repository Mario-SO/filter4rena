[
    {
        "name": "2021-08-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-yield#h-02-erc20rewards-returns-wrong-rewards-if-no-tokens-initially-exist",
        "vulnerability": "`ERC20Rewards` returns wrong rewards if no tokens initially exist"
    },
    {
        "name": "2021-08-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-yield#m-03-rewards-squatting---setting-rewards-in-different-erc20-tokens-opens-various-economic-attacks",
        "vulnerability": "Rewards squatting - setting rewards in different ERC20 tokens opens various economic attacks."
    },
    {
        "name": "2021-08-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-yield#h-05-exchange-rates-from-compound-are-assumed-with-18-decimals",
        "vulnerability": "Exchange rates from Compound are assumed with 18 decimals"
    },
    {
        "name": "2021-08-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-yield#m-01-no-erc20-safe*-versions-called",
        "vulnerability": "No ERC20 safe* versions called"
    },
    {
        "name": "2021-08-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-yield#m-04-use-safetransfer-instead-of-transfer",
        "vulnerability": "Use `safeTransfer` instead of `transfer`"
    },
    {
        "name": "2021-08-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-yield#h-04-rewards-accumulated-can-stay-constant-and-often-not-increment",
        "vulnerability": "Rewards accumulated can stay constant and often not increment"
    },
    {
        "name": "2021-08-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-yield#h-01-compositemultioracle-returns-wrong-decimals-for-prices",
        "vulnerability": "`CompositeMultiOracle` returns wrong decimals for prices?"
    },
    {
        "name": "2021-08-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-yield#m-02-timelock-cannot-schedule-the-same-calls-multiple-times",
        "vulnerability": "`TimeLock` cannot schedule the same calls multiple times"
    },
    {
        "name": "2021-08-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-yield#h-03-erc20rewards-breaks-when-setting-a-different-token",
        "vulnerability": "`ERC20Rewards` breaks when setting a different token"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-01-tokenhandlersol--l174---transfer-is-bad-practice",
        "vulnerability": "TokenHandler.sol, L174 - `.transfer` is bad practice"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-05-ntokenerc20proxy-emits-events-even-when-not-success",
        "vulnerability": "`nTokenERC20Proxy` emits events even when not success"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-10-liquidity-token-value-can-be-manipulated",
        "vulnerability": "Liquidity token value can be manipulated"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-03-allowance-checks-not-correctly-implemented",
        "vulnerability": "Allowance checks not correctly implemented"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-02-latestrounddata-does-not-update-the-oracle---exchangeratesol",
        "vulnerability": "`.latestRoundData()` does not update the oracle - `ExchangeRate.sol`"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-06-tokenhandlersettoken-erc20-missing-return-value-check",
        "vulnerability": "`TokenHandler.setToken` ERC20 missing return value check"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-07-attackers-can-force-liquidations-by-borrowing-large-amounts-of-an-asset",
        "vulnerability": "Attackers can force liquidations by borrowing large amounts of an asset."
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-09-potential-dos-in-contracts-inheriting-uupsupgradeablesol",
        "vulnerability": "Potential DOS in Contracts Inheriting `UUPSUpgradeable.sol`"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-01-self-transfer-can-lead-to-unlimited-mint",
        "vulnerability": "Self transfer can lead to unlimited mint"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-02-dao-proposals-can-be-executed-by-anyone-due-to-vulnerable-timelockcontroller",
        "vulnerability": "DAO proposals can be executed by anyone due to vulnerable `TimelockController`"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-03-compoundtonotionalv2notionalcallback-erc20-return-values-not-checked",
        "vulnerability": "`CompoundToNotionalV2.notionalCallback` ERC20 return values not checked"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-05-access-restrictions-on-notionalv1tonotionalv2notionalcallback-can-be-bypassed",
        "vulnerability": "Access restrictions on `NotionalV1ToNotionalV2.notionalCallback` can be bypassed"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-06-tokenhandlersafetransferout-does-not-work-on-non-standard-compliant-tokens-like-usdt",
        "vulnerability": "`TokenHandler.safeTransferOut` does not work on non-standard compliant tokens like USDT"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-04-access-restrictions-on-compoundtonotionalv2notionalcallback-can-be-bypassed",
        "vulnerability": "Access restrictions on `CompoundToNotionalV2.notionalCallback` can be bypassed"
    },
    {
        "name": "2021-08-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-notional#m-04-compoundtonotionalv2enabletoken-erc20-missing-return-value-check",
        "vulnerability": "`CompoundToNotionalV2.enableToken` ERC20 missing return value check"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-08-dos-by-frontrunning-noteerc20-initialize-function",
        "vulnerability": "DOS by Frontrunning NoteERC20 `initialize()` Function"
    },
    {
        "name": "2021-08-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-notional#h-07-tokenhandlersafetransferin-does-not-work-on-non-standard-compliant-tokens-like-usdt",
        "vulnerability": "`TokenHandler.safeTransferIn` does not work on non-standard compliant tokens like USDT"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-09-addinvestor-does-not-check-availability-of-investorssupply",
        "vulnerability": "addInvestor() Does Not Check Availability of investors_supply"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-03-swaputilssol-wrong-implementation",
        "vulnerability": "`SwapUtils.sol` Wrong implementation"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-06-ideal-balance-is-not-calculated-correctly-when-providing-imbalanced-liquidity",
        "vulnerability": "Ideal balance is not calculated correctly when providing imbalanced liquidity"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-07-customprecisionmultipliers-would-be-rounded-to-zero-and-break-the-pool",
        "vulnerability": "`customPrecisionMultipliers` would be rounded to zero and break the pool"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-08-lptokensetminter-doesnt-check-that-minter-doesnt-equal-zero",
        "vulnerability": "`LPToken.set_minter()` doesn\u2019t check that `_minter` doesn\u2019t equal zero"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-08-unable-to-claim-vesting-due-to-unbounded-timelock-loop",
        "vulnerability": "Unable to claim vesting due to unbounded timelock loop"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-07-maintokensetmintmultisig-doesnt-check-that-mintingmultisig-doesnt-equal-zero",
        "vulnerability": "`MainToken.set_mint_multisig()` doesn\u2019t check that `_minting_multisig` doesn\u2019t equal zero"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-09-nft-flashloans-can-bypass-sale-constraints",
        "vulnerability": "NFT flashloans can bypass sale constraints"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-04-get-virtual-price-is-not-monotonically-increasing",
        "vulnerability": "Get virtual price is not monotonically increasing"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-05-stop-ramp-target-price-would-create-huge-arbitrage-space",
        "vulnerability": "Stop ramp target price would create huge arbitrage space."
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-04-swaps-are-not-split-when-trade-crosses-target-price",
        "vulnerability": "Swaps are not split when trade crosses target price"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-10-cant-claim-last-part-of-airdrop",
        "vulnerability": "Can\u2019t claim last part of airdrop"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-01-contract-basicsale-is-missing-an-approveaddressvestlock--2**256-1-call",
        "vulnerability": "Contract BasicSale is missing an approve(address(vestLock), 2**256-1) call"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-12-no-transfer-ownership-pattern",
        "vulnerability": "No Transfer Ownership Pattern"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-03-investor-cant-claim-the-last-tokens-via-claim-",
        "vulnerability": "Investor can\u2019t claim the last tokens (via claim() )"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-01-unchecked-transfers",
        "vulnerability": "Unchecked transfers"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-05-claim-airdrop-repeatedly",
        "vulnerability": "Claim airdrop repeatedly"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#h-02-can-not-update-target-price",
        "vulnerability": "Can not update target price"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-02-unchecked-low-level-calls",
        "vulnerability": "Unchecked low-level calls"
    },
    {
        "name": "2021-11-bootfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-bootfinance#m-11-overwrite-benrevocable",
        "vulnerability": "Overwrite benRevocable"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-06-file-fiattokenv2sol",
        "vulnerability": "File: FiatTokenV2.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-04-file-eip3009sol",
        "vulnerability": "File: EIP3009.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-05-file-fiattokenv1sol",
        "vulnerability": "File: FiatTokenV1.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-06-incorrect-versioning-of-fiattokenv2",
        "vulnerability": "Incorrect versioning of `FiatTokenV2`"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-02-use-oz-upgrades-hardhat-plugin-to-handle-proxy-deployments-and-upgrades",
        "vulnerability": "Use OZ upgrades (hardhat) plugin to handle proxy deployments and upgrades"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-jpyc#n-01-bump-oz-packages-to-450",
        "vulnerability": "Bump OZ packages to `^4.5.0`."
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-03-file-blocklistablesol",
        "vulnerability": "File: Blocklistable.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-01-file-erc1967proxysol",
        "vulnerability": "File: ERC1967Proxy.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-02-file-uupsupgradeablesol",
        "vulnerability": "File: UUPSUpgradeable.sol"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-jpyc#g-07-general-recommendations",
        "vulnerability": "General Recommendations"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-03-contracts-are-not-using-their-oz-upgradeable-counterparts",
        "vulnerability": "Contracts are not using their OZ upgradeable counterparts"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-04-fiattokenv1--v2-remove-whennotpaused-modifier-from-cancelauthorization-and-decreaseallowance-functions",
        "vulnerability": "FiatTokenV1 / V2: Remove `whenNotPaused` modifier from `cancelAuthorization()` and `decreaseAllowance()` functions"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-01-add-constructor-initializer-in-implementation-contracts",
        "vulnerability": "Add constructor initializer in implementation contracts"
    },
    {
        "name": "2022-02-jpyc",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-jpyc#l-05-fiattokenv2-whitelist-should-be-unusable-if-contract-is-paused",
        "vulnerability": "FiatTokenV2: `whitelist()` should be unusable if contract is paused"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-04-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once",
        "vulnerability": "Stack variable used as a cheaper cache for a state variable is only used once"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-15-mark-visibility-of-initialize\u2026-functions-as-external",
        "vulnerability": "Mark visibility of initialize(\u2026) functions as external"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-01-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use immutable rather than constant"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-05-missing-event-for-critical-parameters-init-and-change",
        "vulnerability": "Missing Event for critical parameters init and change"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-04-prepo-nft-holders-will-not-be-able-to-redeem-collateral",
        "vulnerability": "PrePO NFT holders will not be able to redeem collateral"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-09-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include return parameters in NatSpec comments"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-18-instead-of-calculating-a-statevar-with-keccak256-every-time-the-contract-is-made-pre-calculate-them-before-and-only-give-the-result-to-a-constant",
        "vulnerability": "Instead of calculating a statevar with `keccak256()` every time the contract is made pre calculate them before and only give the result to a constant"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-04-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-06-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-06-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-02-draft-openzeppelin-dependencies",
        "vulnerability": "Draft OpenZeppelin Dependencies"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-14-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "Public functions not called by the contract should be declared external instead"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-12-avoid-shadowing-inherited-state-variables",
        "vulnerability": "Avoid _shadowing_ inherited state variables"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-01-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-07-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-03-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-03-frontrunning-for-unallowed-minting-of-short-and-long-tokens",
        "vulnerability": "Frontrunning for unallowed minting of Short and Long tokens"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-10-require-or-revert-statements-should-be-used-sorted-from-cheapest-to-most-expensive",
        "vulnerability": "`require()` or `revert()` statements should be used sorted from cheapest to most expensive"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-03-there-is-a-risk-that-the-proxyfee-variable-is-accidentally-initialized-to-0-and-platform-loses-money",
        "vulnerability": "There is a risk that the `proxyFee` variable is accidentally initialized to 0 and platform loses money"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-07-using-vulnerable-dependency-of-openzeppelin",
        "vulnerability": "Using vulnerable dependency of OpenZeppelin"
    },
    {
        "name": "2022-12-prepo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-prepo#h-01-griefing--blocking--delaying-users-to-withdraw",
        "vulnerability": "griefing / blocking / delaying users to withdraw"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-05-add-unchecked-{}-for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement",
        "vulnerability": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require()` or `if` statement"
    },
    {
        "name": "2022-12-prepo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-prepo#h-02-a-whale-user-is-able-to-cause-freeze-of-funds-of-other-users-by-bypassing-withdraw-limit",
        "vulnerability": "A whale user is able to cause freeze of funds of other users by bypassing withdraw limit"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-04-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-16-use-assembly-to-check-for-address0",
        "vulnerability": "Use assembly to check for `address(0)`"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-08-can-make-the-variable-outside-the-loop-to-save-gas",
        "vulnerability": "Can make the variable outside the loop to save gas"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-11-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-12-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in external functions saves gas"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-15-should-use-arguments-instead-of-state-variable",
        "vulnerability": "Should use arguments instead of state variable"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-03-use-a-single-file-for-all-system-wide-constants",
        "vulnerability": "Use a single file for all system-wide constants"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-05-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "Function writing that does not comply with the Solidity Style Guide"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-14-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Constant values such as a call to `keccak256()`, should use immutable rather than constant"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-06-manager-can-get-around-min-reserves-check--draining-all-funds-from-collateralsol",
        "vulnerability": "Manager can get around min reserves check, draining all funds from Collateral.sol"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-01-bypass-userwithdrawlimitperperiod-check",
        "vulnerability": "Bypass `userWithdrawLimitPerPeriod` check"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-09-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-06-a-single-point-of-failure",
        "vulnerability": "A single point of failure"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-11-long-lines-are-not-suitable-for-the-solidity-style-guide",
        "vulnerability": "Long lines are not suitable for the Solidity Style Guide"
    },
    {
        "name": "2022-12-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-prepo#l-01-missing-calls-to-reentrancyguardinit-functions-of-inherited-contracts",
        "vulnerability": "Missing calls to `__ReentrancyGuard_init` functions of inherited contracts"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-13-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-17-before-some-functions--we-should-check-some-variables-for-possible-gas-save",
        "vulnerability": "Before some functions, we should check some variables for possible gas save"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-07-users-do-not-receive-owed-tokens-if-tokensender-contract-cannot-cover-their-owed-amount",
        "vulnerability": "Users do not receive owed tokens if `TokenSender` contract cannot cover their owed amount."
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-07-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-02-the-recipient-receives-free-collateral-token-if-an-erc20-token-that-deducts-a-fee-on-transfer-used-as-basetoken",
        "vulnerability": "The recipient receives free collateral token if an ERC20 token that deducts a fee on transfer used as baseToken"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-02-multiple-addressid-mappings-can-be-combined-into-a-single-mapping-of-an-addressid-to-a-struct--where-appropriate",
        "vulnerability": "Multiple address/ID mappings can be combined into a single mapping of an address/ID to a struct, where appropriate"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-09-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()/revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-12-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-prepo#m-05-prepomarketsetfinallongpayout-shouldnt-be-called-twice",
        "vulnerability": "`PrePOMarket.setFinalLongPayout()` shouldn\u2019t be called twice."
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-10-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-08-solidity-compiler-optimizations-can-be-problematic",
        "vulnerability": "Solidity compiler optimizations can be problematic"
    },
    {
        "name": "2022-12-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-prepo#g-13-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "Internal functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-12-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-prepo#n-02-initial-value-check-is-missing-in-set-functions",
        "vulnerability": "Initial value check is missing in Set Functions"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-01-the-function-collect-should-revert-incase-the-collateral-is-zero",
        "vulnerability": "The function `collect` should revert incase the collateral is zero"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-03-unnecessary-if-statement-applied-in-the-function-sweeptoken",
        "vulnerability": "Unnecessary if statement applied in the function sweepToken"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-05-constructor-lacks-address0-check",
        "vulnerability": "Constructor lacks address(0) check"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-06-confusing-revert-statement",
        "vulnerability": "Confusing revert statement"
    },
    {
        "name": "2023-01-numoen",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-numoen#l-03-the-function-collect-forgets-to-accrue-position-interest-before-the-user-collects-the-interest-of-his-position",
        "vulnerability": "The function `collect` forgets to accrue position interest before the user collects the interest of his position"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-06-division-before-multiplication-incurs-unnecessary-precision-loss",
        "vulnerability": "Division before multiplication incurs unnecessary precision loss"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-04-wrong-init-code-hash",
        "vulnerability": "Wrong init code hash"
    },
    {
        "name": "2023-01-numoen",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-numoen#l-02-refundeth-can-be-front-run-preventing-users-from-getting-their-eth-back",
        "vulnerability": "`refundETH` can be front-run preventing users from getting their eth back"
    },
    {
        "name": "2023-01-numoen",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-numoen#h-01-precision-loss-in-the-invariant-function-can-lead-to-loss-of-funds",
        "vulnerability": "Precision loss in the invariant function can lead to loss of funds"
    },
    {
        "name": "2023-01-numoen",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-numoen#l-01-dangerous-use-of-the-burn-function",
        "vulnerability": "Dangerous use of the `burn` function"
    },
    {
        "name": "2023-01-numoen",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-numoen#l-04-minting-tokens-to-the-zero-address-should-be-avoided",
        "vulnerability": "Minting tokens to the zero address should be avoided"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-02-the-check-for-liquidity-in-mint-is-unrealistic--as-it-can-never-happen",
        "vulnerability": "The check for liquidity in `mint` is unrealistic, as it can never happen"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-02-first-liquidity-provider-will-suffer-from-revert-or-fund-loss",
        "vulnerability": "First liquidity provider will suffer from revert or fund loss"
    },
    {
        "name": "2023-01-numoen",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-numoen#n-04-require-statements-missing-strings",
        "vulnerability": "Require statements missing strings"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-05-borrower-can-lose-partial-fund-during-minting-of-power-token-as-excess-eth-are-not-refunded-automatically",
        "vulnerability": "Borrower can lose partial fund during minting of Power Token as excess ETH are not refunded automatically"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-03-economical-games-that-can-be-played-to-gain-mev",
        "vulnerability": "Economical games that can be played to gain MEV"
    },
    {
        "name": "2023-01-numoen",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-numoen#m-01-fee-on-transfer-tokens-will-not-behave-as-expected",
        "vulnerability": "Fee on transfer tokens will not behave as expected"
    },
    {
        "name": "2022-07-yield",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-yield#l-04-incorrect-natspec-for-setlimit",
        "vulnerability": "Incorrect natspec for `setLimit()`"
    },
    {
        "name": "2022-07-yield",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-yield#l-01-vaults-that-are-over-collateralised-after-partial-liquidation-are-possibly-subject-to-further-liquidations",
        "vulnerability": "Vaults that are over-collateralised after partial liquidation are possibly subject to further liquidations"
    },
    {
        "name": "2022-07-yield",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-yield#n-01-modify-comment-to-soft-limit-check-for-clarity",
        "vulnerability": "Modify comment to soft limit check for clarity"
    },
    {
        "name": "2022-07-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-yield#h-01-someone-can-create-non-liquidatable-auction-if-the-collateral-asset-fails-on-transferring-to-address0",
        "vulnerability": "Someone can create non-liquidatable auction if the collateral asset fails on transferring to `address(0)`"
    },
    {
        "name": "2022-07-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-yield#h-02-incorrect-amount-of-collateral-moves-for-auction",
        "vulnerability": "Incorrect amount of Collateral moves for Auction"
    },
    {
        "name": "2022-07-yield",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-yield#l-03-incorrect-description-for-auctioneercut",
        "vulnerability": "Incorrect description for `auctioneerCut`"
    },
    {
        "name": "2022-07-yield",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-yield#n-02-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-07-yield",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-yield#l-02-comparison-in-calcpayout-should-include-equality",
        "vulnerability": "Comparison in `_calcPayout()` should include equality"
    },
    {
        "name": "2021-04-basedloans",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-basedloans#h-02-uint-1-index-for-not-found",
        "vulnerability": "uint(-1) index for not found"
    },
    {
        "name": "2021-04-basedloans",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-basedloans#h-01-uniswapconfig-getters-return-wrong-token-config-if-token-config-does-not-exist",
        "vulnerability": "UniswapConfig getters return wrong token config if token config does not exist"
    },
    {
        "name": "2021-04-basedloans",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-basedloans#m-01-reward-rates-can-be-changed-through-flash-borrows",
        "vulnerability": "Reward rates can be changed through flash borrows"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-05-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-08-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-06-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-04-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-axelar#l-03-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-03-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-07-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-05-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-11-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-06-variable-names-that-consist-of-all-capital-letters-should-be-reserved-for-constimmutable-variables",
        "vulnerability": "Variable names that consist of all capital letters should be reserved for `const`/`immutable` variables"
    },
    {
        "name": "2022-04-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-axelar#m-04-unsupported-fee-on-transfer-tokens",
        "vulnerability": "Unsupported fee-on-transfer tokens"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-03-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-axelar#l-04-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-14-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-10-consider-allowing-infinite-approval",
        "vulnerability": "Consider allowing infinite approval"
    },
    {
        "name": "2022-04-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-axelar#l-05-missing-contract-existence-checks-before-low-level-calls",
        "vulnerability": "Missing contract-existence checks before low-level calls"
    },
    {
        "name": "2022-04-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-axelar#m-03-execute-can-potentially-reorder-a-batch-of-commands-while-executing--breaking-any-assumptions-on-command-orders",
        "vulnerability": "`_execute` can potentially reorder a batch of commands while executing, breaking any assumptions on command orders."
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-04-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-04-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-axelar#l-02-incorrect-eip-2612-deadline-check",
        "vulnerability": "Incorrect EIP-2612 deadline check"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-11-consider-using-a-two-step-transfer-of-ownership",
        "vulnerability": "Consider using a two-step-transfer of ownership"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-02-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-01-using-1-and-2-rather-than-0-and-1-saves-gas",
        "vulnerability": "Using `1` and `2` rather than `0` and `1` saves gas"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-07-++ii++-should-be-unchecked{++i}unchecked{++i}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{++i}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-08-++i-costs-less-gas-than-++i--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `++i`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-04-axelar",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-axelar#h-01-cross-chain-smart-contract-calls-can-revert-but-source-chain-tokens-remain-burnt-and-are-not-refunded",
        "vulnerability": "Cross-chain smart contract calls can revert but source chain tokens remain burnt and are not refunded"
    },
    {
        "name": "2022-04-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-axelar#l-01-cross-chain-replay-attacks",
        "vulnerability": "Cross-chain replay attacks"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-12-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-10-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use `immutable` rather than `constant`"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-09-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-04-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-axelar#m-01-low-level-call-returns-true-if-the-address-doesnt-exist",
        "vulnerability": "Low level call returns true if the address doesn\u2019t exist"
    },
    {
        "name": "2022-04-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-axelar#m-02-users-funds-can-get-lost-when-transferring-to-other-chain",
        "vulnerability": "User\u2019s funds can get lost when transferring to other chain"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-12-consider-adding-a-comment-saying-that-eip-2098-short-signatures-are-not-supported",
        "vulnerability": "Consider adding a comment saying that EIP-2098 short signatures are not supported"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-02-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-04-axelar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-axelar#g-13-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-04-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-01-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-04-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-axelar#n-09-unsafe-early-return-from-a-modifier",
        "vulnerability": "Unsafe early return from a modifier"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-10-recovertokens-doesnt-work-when-issale-is-true",
        "vulnerability": "recoverTokens doesn\u2019t work when isSale is true"
    },
    {
        "name": "2021-11-streaming",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-streaming#m-02-any-arbitrarycall-gathered-airdrop-can-be-stolen-with-recovertokens",
        "vulnerability": "Any arbitraryCall gathered airdrop can be stolen with recoverTokens"
    },
    {
        "name": "2021-11-streaming",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-streaming#m-04-arbitrarycall-can-get-blocked-by-an-attacker",
        "vulnerability": "arbitraryCall() can get blocked by an attacker"
    },
    {
        "name": "2021-11-streaming",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-streaming#m-01-lockeerc20-is-vulnerable-to-frontrun-attack",
        "vulnerability": "LockeERC20 is vulnerable to frontrun attack"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-01-wrong-calculation-of-excess-deposittoken-allows-stream-creator-to-retrieve-deposittokenflashloanfeeamount--which-may-cause-fund-loss-to-users",
        "vulnerability": "Wrong calculation of excess depositToken allows stream creator to retrieve `depositTokenFlashloanFeeAmount`, which may cause fund loss to users"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-07-business-logic-bug-in-abdicate-function---2-bugs",
        "vulnerability": "Business logic bug in __abdicate() function - 2 Bugs"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-09-dos-while-dealing-with-erc20-when-valueie-amount*decimals-is-high-but-less-than-typeuint112max",
        "vulnerability": "DOS while dealing with erc20 when value(i.e amount*decimals) is high but less than type(uint112).max"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-05-possible-incentive-theft-through-the-arbitrarycall-function",
        "vulnerability": "Possible incentive theft through the arbitraryCall() function"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-02-tokens-can-be-stolen-when-deposittoken-==-rewardtoken",
        "vulnerability": "Tokens can be stolen when `depositToken == rewardToken`"
    },
    {
        "name": "2021-11-streaming",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-streaming#m-03-this-protocol-doesnt-support-all-fee-on-transfer-tokens",
        "vulnerability": "This protocol doesn\u2019t support all fee on transfer tokens"
    },
    {
        "name": "2021-11-streaming",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-streaming#m-05-storage-variable-unstreamed-can-be-artificially-inflated",
        "vulnerability": "Storage variable unstreamed can be artificially inflated"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-04-improper-implementation-of-arbitrarycall-allows-protocol-gov-to-steal-funds-from-users-wallets",
        "vulnerability": "Improper implementation of `arbitraryCall()` allows protocol gov to steal funds from users\u2019 wallets"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-06-creating-rewardtokens-without-streaming-deposittokens",
        "vulnerability": "Creating rewardTokens without streaming depositTokens"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-08-tstokens-sometimes-calculated-incorrectly",
        "vulnerability": "ts.tokens sometimes calculated incorrectly"
    },
    {
        "name": "2021-11-streaming",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-streaming#h-03-reward-token-not-correctly-recovered",
        "vulnerability": "Reward token not correctly recovered"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-08-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-01-save-gas-by-not-updating-seed",
        "vulnerability": "Save gas by not updating seed"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-06-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-11-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-03-avoid-contract-existence-checks-by-using-solidity-version-0810-or-later",
        "vulnerability": "Avoid contract existence checks by using solidity version 0.8.10 or later"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-12-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#m-01-possible-centralization-issue-around-randprovider",
        "vulnerability": "Possible centralization issue around RandProvider"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-15-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#m-03-wrong-balanceof-user-after-minting-legendary-gobbler",
        "vulnerability": "Wrong `balanceOf` user after minting legendary gobbler"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-07-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-02-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#h-01-can-recover-gobblers-burnt-in-legendary-mint",
        "vulnerability": "Can Recover Gobblers Burnt In Legendary Mint"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-13-division-by-two-should-use-bit-shifting",
        "vulnerability": "Division by two should use bit shifting"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-10-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-16-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-04-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#m-02-the-reveal-process-could-brick-if-randprovider-stops-working",
        "vulnerability": "The reveal process could brick if `randProvider` stops working"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-14-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once",
        "vulnerability": "Stack variable used as a cheaper cache for a state variable is only used once"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-09-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-09-artgobblers",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-artgobblers#g-05-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-09-tribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-tribe#m-01-a-malicious-user-can-send-tokens-to-the-triberedeemer-contract-to-make-the-redeem-function-work--and-other-users-may-lose-assets-as-a-result",
        "vulnerability": "A malicious user can send tokens to the `TribeRedeemer` contract to make the redeem function work, and other users may lose assets as a result"
    },
    {
        "name": "2022-09-tribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-tribe#m-02-triberedeemer-will-start-redeeming-incorrectly-if-someone-transfer-redeem-tokens-directly-to-it",
        "vulnerability": "`TribeRedeemer` will start redeeming incorrectly if someone transfer redeem tokens directly to it"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-09-missing-pause-modifier-on-the-insurancefunds-contract",
        "vulnerability": "Missing Pause Modifier On the InsuranceFunds contract"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-08-the-contract-should-approve0-first",
        "vulnerability": "The Contract Should Approve(0) first"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-05-oraclegetunderlyingprice-could-have-wrong-decimals",
        "vulnerability": "`Oracle.getUnderlyingPrice` could have wrong decimals"
    },
    {
        "name": "2022-02-hubble",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-hubble#n-01-use-of-blocktimestamp",
        "vulnerability": "Use of Block.timestamp"
    },
    {
        "name": "2022-02-hubble",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-hubble#n-02-missing-re-entrancy-guard",
        "vulnerability": "Missing Re-entrancy Guard"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-02-hidden-governance",
        "vulnerability": "Hidden governance"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-01-prevent-div-by-0",
        "vulnerability": "PREVENT DIV BY 0"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-08-all-amms-have-to-be-past-nextfundingtime-to-update",
        "vulnerability": "All AMMs have to be past nextFundingTime to update"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-01-liquidations-can-be-run-on-the-bogus-oracle-prices",
        "vulnerability": "Liquidations can be run on the bogus Oracle prices"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-05-missing-zero-address-check-in-constructors-and-the-setter-functions",
        "vulnerability": "Missing zero-address check in constructors and the setter functions"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-09-ownership-of-swapvy-cannot-be-transferred",
        "vulnerability": "Ownership of `Swap.vy` cannot be transferred"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-11-users-are-able-to-front-run-bad-debt-settlements-to-avoid-insurance-costs",
        "vulnerability": "Users are able to front-run bad debt settlements to avoid insurance costs"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-14-liquidation-is-vulnerable-to-sandwich-attacks",
        "vulnerability": "Liquidation is vulnerable to sandwich attacks"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-15-[wp-h7]-insurancefundsyncdeps-may-cause-users-fund-loss",
        "vulnerability": "[WP-H7] `InsuranceFund#syncDeps()` may cause users\u2019 fund loss"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-13-assets-sent-from-marginaccount-to-insurancefund-will-be-locked-forever",
        "vulnerability": "Assets sent from `MarginAccount` to `InsuranceFund` will be locked forever"
    },
    {
        "name": "2022-02-hubble",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-hubble#h-03-insurancefund-depositors-can-be-priced-out-&-deposits-can-be-stolen",
        "vulnerability": "InsuranceFund depositors can be priced out & deposits can be stolen"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-04-settlefunding-will-exceed-block-gas-with-more-markets-and-activity",
        "vulnerability": "`settleFunding` will exceed block gas with more markets and activity"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-12-amm-cannot-be-initialize-except-by-governance",
        "vulnerability": "AMM Cannot Be `initialize()` Except By Governance"
    },
    {
        "name": "2022-02-hubble",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-hubble#h-02-denial-of-service",
        "vulnerability": "denial of service"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-03-clearinghouse-may-whitelist-duplicate-amms",
        "vulnerability": "ClearingHouse May Whitelist Duplicate AMMs"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-07-clearinghouse-margin-calculations-will-break-up-if-an-amm-returning-non-6-decimals-positions-be-white-listed",
        "vulnerability": "ClearingHouse margin calculations will break up if an AMM returning non-6 decimals positions be white listed"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-17-usage-of-an-incorrect-version-of-ownable-library-can-potentially-malfunction-all-onlyowner-functions",
        "vulnerability": "Usage of an incorrect version of Ownable library can potentially malfunction all `onlyOwner` functions"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-03-front-runnable-initializers",
        "vulnerability": "Front-runnable Initializers"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-02-single-step-change-of-governance-address-is-extremely-risky",
        "vulnerability": "Single-step change of governance address is extremely risky"
    },
    {
        "name": "2022-02-hubble",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-hubble#h-01-update-initializer-modifier-to-prevent-reentrancy-during-initialization",
        "vulnerability": "Update initializer modifier to prevent reentrancy during initialization"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-10-blocking-of-the-vusd-withdrawals-is-possible-if-the-reserve-token-doesnt-support-zero-value-transfers",
        "vulnerability": "Blocking of the VUSD withdrawals is possible if the reserve token doesn\u2019t support zero value transfers"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-16-usdc-blacklisted-accounts-can-dos-the-withdrawal-system",
        "vulnerability": "USDC blacklisted accounts can DoS the withdrawal system"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-07-deprecated-safeapprove-function",
        "vulnerability": "Deprecated safeApprove() function"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-04-incompatibility-with-rebasingdeflationaryinflationary-tokens",
        "vulnerability": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"
    },
    {
        "name": "2022-02-hubble",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-hubble#l-06-missing-events-for-governor-only-functions-that-change-critical-parameters",
        "vulnerability": "Missing events for governor only functions that change critical parameters"
    },
    {
        "name": "2022-02-hubble",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-hubble#m-06-after-debt-seizure-from-insurancefund--user-can-dilute-all-past-participants",
        "vulnerability": "After debt seizure from `InsuranceFund`, user can dilute all past participants."
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-11-constantproductpoolburnsingle-swap-amount-computations-should-use-balance",
        "vulnerability": "`ConstantProductPool.burnSingle` swap amount computations should use balance"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-09-unsafe-cast-in-indexpool-mint-leads-to-attack",
        "vulnerability": "Unsafe cast in `IndexPool` mint leads to attack"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-15-incorrect-multiplication-in-computesingleoutgivenpoolin-of-indexpool",
        "vulnerability": "Incorrect multiplication in `_computeSingleOutGivenPoolIn` of `IndexPool`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-08-rounding-errors-will-occur-for-tokens-without-decimals",
        "vulnerability": "Rounding errors will occur for tokens without decimals"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-06-withdrawfromweth-always-reverts",
        "vulnerability": "`withdrawFromWETH` always reverts"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-09-approximations-may-finish-with-inaccurate-values",
        "vulnerability": "Approximations may finish with inaccurate values"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-05-hybrid-pool-uses-wrong-nonoptimalmintfee",
        "vulnerability": "hybrid pool uses wrong `non_optimal_mint_fee`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-01-no-bar-fees-for-indexpools",
        "vulnerability": "No bar fees for `IndexPools`?"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-07-indexpoolmint-the-first-liquidity-provider-is-forced-to-supply-assets-in-the-same-amount--which-may-cause-a-significant-amount-of-fund-loss",
        "vulnerability": "`IndexPool.mint` The first liquidity provider is forced to supply assets in the same amount, which may cause a significant amount of fund loss"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-02-index-pool-always-swap-to-zero",
        "vulnerability": "Index Pool always swap to Zero"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-03-indexpool-pow-overflows-when-weightratio->-10",
        "vulnerability": "`IndexPool` pow overflows when `weightRatio` > 10."
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-02-constantproductpool-&-hybridpool-adding-and-removing-unbalanced-liquidity-yields-slightly-more-tokens-than-swap",
        "vulnerability": "`ConstantProductPool` & `HybridPool`: Adding and removing unbalanced liquidity yields slightly more tokens than swap"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-10-indexpool-initial-lp-supply-computation-is-wrong",
        "vulnerability": "`IndexPool` initial LP supply computation is wrong"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-08-hybridpools-reserve-is-converted-to-\u201camount\u201d-twice",
        "vulnerability": "`HybridPool`\u2019s reserve is converted to \u201camount\u201d twice"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-05-deposittobentobox-sometimes-uses-both-eth-and-weth",
        "vulnerability": "`_depositToBentoBox` sometimes uses both ETH and WETH"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-10-users-are-susceptible-to-back-running-when-depositing-eth-to-tridenrouter",
        "vulnerability": "Users are susceptible to back-running when depositing ETH to `TridenRouter`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-07-hybridpools-flashswap-sends-entire-fee-to-barfeeto",
        "vulnerability": "`HybridPool`\u2019s `flashSwap` sends entire fee to `barFeeTo`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-16-funds-in-the-pool-could-be-stolen-by-exploiting-flashswap-in-hybridpool",
        "vulnerability": "Funds in the pool could be stolen by exploiting `flashSwap` in `HybridPool`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-06-indexpool-poor-conversion-from-balancer-v1s-corresponding-functions",
        "vulnerability": "`IndexPool`: Poor conversion from Balancer V1\u2019s corresponding functions"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-04-indexpools-initpoolsupply-is-not-fair",
        "vulnerability": "IndexPool\u2019s `INIT_POOL_SUPPLY` is not fair."
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-03-router-would-fail-when-adding-liquidity-to-index-pool",
        "vulnerability": "Router would fail when adding liquidity to index Pool"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-13-overflow-in-the-mint-function-of-indexpool-causes-lps-funds-to-be-stolen",
        "vulnerability": "Overflow in the `mint` function of `IndexPool` causes LPs\u2019 funds to be stolen"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-12-absolute-difference-is-not-calculated-properly-when-a->-b-in-mathutils",
        "vulnerability": "absolute difference is not calculated properly when a > b in MathUtils"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#m-04-routers-complexpath-percentagepaths-dont-work-as-expected",
        "vulnerability": "Router\u2019s `complexPath` percentagePaths don\u2019t work as expected"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-14-incorrect-usage-of-pow-in-computesingleoutgivenpoolin-of-indexpool",
        "vulnerability": "Incorrect usage of `_pow` in `_computeSingleOutGivenPoolIn` of `IndexPool`"
    },
    {
        "name": "2021-09-sushitrident",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident#h-01-flash-swap-call-back-prior-to-transferring-tokens-in-indexpool",
        "vulnerability": "Flash swap call back prior to transferring tokens in `indexPool`"
    },
    {
        "name": "2021-04-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-maple#m-01-loans-of-tokens-with->18-decimals-can-result-in-incorrect-collateral-calculation",
        "vulnerability": "Loans of tokens with >18 decimals can result in incorrect collateral calculation"
    },
    {
        "name": "2021-04-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-maple#m-03-bypass-or-reduction-on-the-lockup-period-of-pool-fdts",
        "vulnerability": "Bypass or reduction on the lockup period of Pool FDTs."
    },
    {
        "name": "2021-04-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-maple#m-02-potential-huge-arbitrage-opportunities--mpl-price-decrease",
        "vulnerability": "Potential huge arbitrage opportunities / MPL price decrease"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-04-returndust-function-create-dirty-bits",
        "vulnerability": "`_returnDust` function create dirty bits"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-14-should-use-arguments-instead-of-state-variable",
        "vulnerability": "Should use arguments instead of state variable"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-06-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-02-initialize-function-can-be-called-by-anybody",
        "vulnerability": "initialize() function can be called by anybody"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-07-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for-loop-and-while-loops",
        "vulnerability": "`++i/i++` should be `unchecked{++i}/unchecked{i++}` when it is not possible for them to overflow, as is the case when used in for-loop and while-loops"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-04-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-09-signature-malleability-of-evms-ecrecover",
        "vulnerability": "Signature Malleability of EVM\u2019s ecrecover()"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#m-01-yul-call-return-value-not-checked",
        "vulnerability": "Yul `call` return value not checked"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-13-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "Public functions not called by the contract should be declared external instead"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-06-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include `return parameters` in _NatSpec comments_"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-05-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#m-03-all-orders-which-use-expirationtime-==-0-to-support-oracle-cancellation-are-not-executable",
        "vulnerability": "All orders which use `expirationTime == 0` to support oracle cancellation are not executable"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-10-exchangesol-execute-buyorderside-not-validated",
        "vulnerability": "Exchange.sol `_execute` buy.order.side not validated"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-12-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "`Empty blocks` should be _removed_ or _Emit_ something"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-02-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-07-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-13-signature-scheme-does-not-support-smart-contracts",
        "vulnerability": "Signature scheme does not support smart contracts"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-10-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "Internal functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#m-04-pool-designed-to-be-upgradeable-but-does-not-set-owner--making-it-un-upgradeable",
        "vulnerability": "Pool designed to be upgradeable but does not set owner, making it un-upgradeable"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-05-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-08-natspec-is-missing",
        "vulnerability": "NatSpec is missing"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-03-add-unchecked-{}-for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement",
        "vulnerability": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require()` or `if` statement"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-04-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-10-lines-are-too-long",
        "vulnerability": "Lines are too long"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-11-usage-of-uintint-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of uint/int smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#m-02-hacked-owner-or-malicious-owner-can-immediately-steal-all-assets-on-the-platform",
        "vulnerability": "Hacked owner or malicious owner can immediately steal all assets on the platform"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#h-01-direct-theft-of-buyers-eth-funds",
        "vulnerability": "Direct theft of buyer\u2019s ETH funds"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-03-0-address-check",
        "vulnerability": "`0 address` check"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-01-potential-dos-in-contract-inheriting-uupsupgradeablesol",
        "vulnerability": "Potential DOS in Contract Inheriting `UUPSUpgradeable.sol`"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-12-bytes-constants-are-more-efficient-than-string-constants",
        "vulnerability": "Bytes constants are more efficient than string constants"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-01-not-using-the-latest-version-of-openzeppelin-from-dependencies",
        "vulnerability": "Not using the latest version of OpenZeppelin from dependencies"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-09-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-08-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-03-the-whenopen-modifier-just-pauses-the-execute-and-bulkexecute-function",
        "vulnerability": "The `whenOpen` modifier just pauses the `execute` and `bulkExecute` function"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-11-stop-using-v-!=-27-&&-v-!=-28-or-v-==-27-||-v-==-28",
        "vulnerability": "Stop using `v != 27 && v != 28 or v == 27 || v == 28`"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-09-fee-recipient-may-be-address0",
        "vulnerability": "Fee recipient may be address(0)"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#l-08-require-messages-are-too-short-and-unclear",
        "vulnerability": "Require messages are too short and unclear"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-06-can-make-the-variable-outside-the-loop-to-save-gas",
        "vulnerability": "Can make the variable outside the loop to save gas"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-07-solidity-compiler-optimizations-can-be-problematic",
        "vulnerability": "Solidity compiler optimizations can be problematic"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#g-01-multiple-addressid-mappings-can-be-combined-into-a-single-mapping-of-an-addressid-to-a-struct--where-appropriate",
        "vulnerability": "Multiple address/ID mappings can be combined into a single mapping of an address/ID to a struct, where appropriate"
    },
    {
        "name": "2022-11-non-fungible",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-non-fungible#n-02-no-same-value-input-control",
        "vulnerability": "No same value input control"
    },
    {
        "name": "2022-03-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-sublime#m-01-pool-credit-line-may-not-able-to-start-when-borrowasset-is-non-erc20-compliant-tokens",
        "vulnerability": "Pool Credit Line May Not Able to Start When _borrowAsset is Non ERC20 Compliant Tokens"
    },
    {
        "name": "2022-03-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-sublime#m-02-lack-of-access-control-allow-anyone-to-withdrawinterest-for-any-lender",
        "vulnerability": "Lack of access control allow anyone to `withdrawInterest()` for any lender"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-01-multiple-mappings-can-be-combined-into-a-single-mapping-of-a-value-to-a-struct",
        "vulnerability": "Multiple mappings can be combined into a single mapping of a value to a struct"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-04-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-02-++ii++-should-be-unchecked{++i}unchecked{++i}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{++i}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-08-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-11-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-12-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-03-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-03-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-sublime#m-04-interest-accrued-could-be-zero-for-small-decimal-tokens",
        "vulnerability": "Interest accrued could be zero for small decimal tokens"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-07-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-05-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-03-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-sublime#h-01-lenderpool-principal-withdrawable-is-incorrectly-calculated-if-start-is-invoked-with-non-zero-start-fee",
        "vulnerability": "`LenderPool`: Principal withdrawable is incorrectly calculated if start() is invoked with non-zero start fee"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-09-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-10-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-03-sublime",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-sublime#g-06-multiple-if-statements-with-mutually-exclusive-conditions-should-be-changed-to-if-else-statements",
        "vulnerability": "Multiple `if`-statements with mutually-exclusive conditions should be changed to `if`-`else` statements"
    },
    {
        "name": "2022-03-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-sublime#m-03-potentially-depositing-at-unfavorable-rate-since-anyone-can-deposit-the-entire-lenderpool-to-a-known-strategy-at-a-pre-fixed-time",
        "vulnerability": "Potentially depositing at unfavorable rate since anyone can deposit the entire lenderPool to a known strategy at a pre-fixed time"
    },
    {
        "name": "2022-03-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-sublime#h-02-pooledcreditline-termination-likely-fails-because-principlewithdrawable-is-treated-as-shares",
        "vulnerability": "`PooledCreditLine`: termination likely fails because `_principleWithdrawable` is treated as shares"
    },
    {
        "name": "2022-01-xdefi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-xdefi#m-01-safemint-will-fail-due-to-an-edge-case-in-calculating-tokenid-using-the-generatenewtokenid-function",
        "vulnerability": "`_safeMint` Will Fail Due To An Edge Case In Calculating `tokenId` Using The `_generateNewTokenId` Function"
    },
    {
        "name": "2022-01-xdefi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-xdefi#h-01-malicious-early-userattacker-can-malfunction-the-contract-and-even-freeze-users-funds-in-edge-cases",
        "vulnerability": "Malicious early user/attacker can malfunction the contract and even freeze users\u2019 funds in edge cases"
    },
    {
        "name": "2022-01-xdefi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-xdefi#h-02-the-reentrancy-vulnerability-in-safemint-can-allow-an-attacker-to-steal-all-rewards",
        "vulnerability": "The reentrancy vulnerability in _safeMint can allow an attacker to steal all rewards"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-13-leak-of-value-in-yield-function--slippage-check-is-not-effective",
        "vulnerability": "Leak of Value in `yield` function, slippage check is not effective"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-03-cheap-contract-deployment-through-clones",
        "vulnerability": "Cheap Contract Deployment Through Clones"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-01-sellprincipaltoken--buyprincipaltoken--sellunderlying--buyunderlying-uses-pool-funds-but-pays-msgsender",
        "vulnerability": "sellPrincipalToken, buyPrincipalToken, sellUnderlying, buyUnderlying uses pool funds but pays msg.sender"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-13-illuminate-pt-redeeming-allows-for-burning-from-other-accounts",
        "vulnerability": "Illuminate PT redeeming allows for burning from other accounts"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-06-principal-types-in-illuminate-and-yield-lending-are-mixed-up",
        "vulnerability": "Principal types in Illuminate and Yield lending are mixed up"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-04-allowance-check-always-true-in-erc5095-redeem",
        "vulnerability": "Allowance check always true in ERC5095 redeem"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-02-division-before-multiplication-can-lead-to-zero-rounding-of-return-amount",
        "vulnerability": "Division Before Multiplication Can Lead To Zero Rounding Of Return Amount"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-06-tempus-lend-method-wrongly-calculates-amount-of-ipt-tokens-to-mint",
        "vulnerability": "Tempus lend method wrongly calculates amount of iPT tokens to mint"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-01-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-05-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for-loop`"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-12-sandwich-attacks-are-possible-as-there-is-no-slippage-control-option-in-marketplace-and-in-lender-yield-swaps",
        "vulnerability": "Sandwich attacks are possible as there is no slippage control option in Marketplace and in Lender yield swaps"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-12-funds-may-be-stuck-when-redeeming-for-illuminate",
        "vulnerability": "Funds may be stuck when `redeeming` for Illuminate"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-02-marketplace-calls-unimplemented-function",
        "vulnerability": "Marketplace calls unimplemented function"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-07-it-costs-more-gas-to-initialize-variables-with-their-default-value-than-letting-the-default-value-be-applied",
        "vulnerability": "It costs more gas to initialize variables with their default value than letting the default value be applied"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-03-pendle-uses-wrong-return-value-for-swapexacttokensfortokens",
        "vulnerability": "Pendle Uses Wrong Return Value For `swapExactTokensForTokens()`"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-09-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-16-unable-to-redeem-from-notional",
        "vulnerability": "Unable to redeem from Notional"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-06-++i-costs-less-gas-compared-to-i++-or-i-+=-1-same-for---i-vs-i---or-i--=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1` (same for `--i` vs `i--` or `i -= 1`)"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-10-able-to-mint-any-amount-of-pt",
        "vulnerability": "Able to mint any amount of PT"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-08-erc5095-redeemwithdraw-does-not-update-allowances",
        "vulnerability": "ERC5095 redeem/withdraw does not update allowances"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-05-centralisation-risk-admin-can-change-important-variables-to-steal-funds",
        "vulnerability": "Centralisation Risk: Admin Can Change Important Variables To Steal Funds"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-11-withdraw-etoken-before-withdrawfee-of-etoken-could-render-withdrawfee-of-etoken-unfunctioning",
        "vulnerability": "`withdraw` eToken before `withdrawFee` of eToken could render `withdrawFee` of eToken unfunctioning"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-03-calls-to-swivelinitiate-do-not-verify-oexit-or-ovault-allowing-an-attacker-to-manipulate-accounting-in-their-favour",
        "vulnerability": "Calls To `Swivel.initiate()` Do Not Verify `o.exit` or `o.vault` Allowing An Attacker To Manipulate Accounting In Their Favour"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-04-checking-yieldbearingtoken-against-u-instead-of-backingtoken",
        "vulnerability": "Checking yieldBearingToken against u instead of backingToken"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-07-swivel-lend-method-doesnt-pull-protocol-fee-from-user",
        "vulnerability": "Swivel lend method doesn\u2019t pull protocol fee from user"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-10-easily-bypassing-admins-\u2018pause-for-swivel",
        "vulnerability": "Easily bypassing admins \u2018pause\u2019 for swivel"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-01-the-lend-function-for-tempus-uses-the-wrong-return-value-of-depositandfix",
        "vulnerability": "The lend function for tempus uses the wrong return value of depositAndFix"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-07-redeem-sense-can-be-bricked",
        "vulnerability": "Redeem Sense can be bricked"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-14-redeemersolredeem-can-be-called-by-anyone-before-maturity--which-may-lead-to-loss-of-user-funds",
        "vulnerability": "`Redeemer.sol#redeem()` can be called by anyone before maturity, which may lead to loss of user funds"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-08-lend-method-signature-for-illuminate-does-not-track-the-accumulated-fee",
        "vulnerability": "Lend method signature for illuminate does not track the accumulated fee"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-02-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-15-incorrect-implementation-of-apwine-and-tempus-redeem",
        "vulnerability": "Incorrect implementation of APWine and Tempus `redeem`"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-illuminate#m-09-lendermint-may-take-the-illuminate-pt-as-input-which-will-transfer-and-mint-more-illuminate-pt-cause-an-infinite-supply",
        "vulnerability": "`Lender.mint()` May Take The Illuminate PT As Input Which Will Transfer And Mint More Illuminate PT Cause an Infinite Supply"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-04-use-calldata-instead-of-memory",
        "vulnerability": "Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-05-redeemerredeem-for-element-withdraws-pt-to-wrong-address",
        "vulnerability": "Redeemer.redeem() for Element withdraws PT to wrong address."
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-09-lender-no-check-for-paused-market-on-mint",
        "vulnerability": "Lender: no check for paused market on mint"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-illuminate#g-08-some-variables-should-be-immutable",
        "vulnerability": "Some variables should be immutable"
    },
    {
        "name": "2022-06-illuminate",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-illuminate#h-11-not-minting-ipts-for-lenders-in-several-lend-functions",
        "vulnerability": "Not minting iPTs for lenders in several lend functions"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#m-02-when-a-smart-contract-calls-crosschainrelayerarbitrumprocesscalls--excess-submission-fees-may-be-lost",
        "vulnerability": "When a smart contract calls `CrossChainRelayerArbitrum.processCalls`, excess submission fees may be lost"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#g-01-use-bitmaps-to-save-gas",
        "vulnerability": "Use bitmaps to save gas"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#n-03-for-modern-and-more-readable-code;-update-import-usages",
        "vulnerability": "For modern and more readable code; update import usages"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#n-02-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#n-01-for-functions--follow-solidity-standard-naming-conventions",
        "vulnerability": "For functions, follow Solidity standard naming conventions"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#l-01-hard-coding-the-maxgaslimit-variable-may-cause-problems-in-the-future",
        "vulnerability": "Hard-coding the `maxGasLimit` variable may cause problems in the future"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#n-05-missing-event-for-critical-parameters-change",
        "vulnerability": "Missing Event for critical parameters change"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#m-03-crosschainexecutor-contracts-do-not-update-the-necessary-states-for-failing-transactions",
        "vulnerability": "`CrossChainExecutor` contracts do not update the necessary states for failing transactions"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#m-01-an-attacker-can-make-users-unable-to-cancel-their-l1-calls-on-ethereum-to-arbitrum",
        "vulnerability": "An attacker can make users unable to cancel their L1 calls on Ethereum To Arbitrum"
    },
    {
        "name": "2022-12-pooltogether",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-pooltogether#n-04-use-of-bytesconcat-instead-of-abiencodepacked-",
        "vulnerability": "Use of `bytes.concat()` instead of `abi.encodePacked(,)`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-13-escrowed-nft-can-be-stolen-by-anyone-if-no-active-buyprice-or-auction-exists-for-it",
        "vulnerability": "Escrowed NFT can be stolen by anyone if no active `buyPrice` or auction exists for it"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-01-signature-re-use",
        "vulnerability": "Signature Re-Use"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-12-private-sale-spoofing",
        "vulnerability": "Private sale spoofing"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-02-sendvaluewithfallbackwithdraw-withdrawfor-function-may-fail-to-withdraw-ether-recorded-in-pendingwithdrawals",
        "vulnerability": "`SendValueWithFallbackWithdraw`: `withdrawFor` function may fail to withdraw ether recorded in `pendingWithdrawals`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-16-inappropriate-support-of-eip-2981",
        "vulnerability": "Inappropriate support of EIP-2981"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-14-upgradable-escrow-contract",
        "vulnerability": "Upgradable escrow contract"
    },
    {
        "name": "2022-02-foundation",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-foundation#h-01-nft-owner-can-create-multiple-auctions",
        "vulnerability": "NFT owner can create multiple auctions"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-06-unclear-recipients-array-restriction",
        "vulnerability": "Unclear `_recipients` Array Restriction"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-07-inconsistent-use-of-sendvalue",
        "vulnerability": "Inconsistent Use of `sendValue()`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-10-lockedbalance-library-should-drop-parameters-to-9632-bits",
        "vulnerability": "`LockedBalance` library should drop parameters to 96/32 bits"
    },
    {
        "name": "2022-02-foundation",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-foundation#l-01-unhandled-marketlockupfor-edge-case",
        "vulnerability": "Unhandled `marketLockupFor()` Edge Case"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-04-adminaccountmigration-does-not-update-buypriceseller",
        "vulnerability": "`adminAccountMigration()` Does Not Update `buyPrice.seller`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-02-unclear-function-naming",
        "vulnerability": "Unclear Function Naming"
    },
    {
        "name": "2022-02-foundation",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-foundation#h-03-an-offer-made-after-auction-end-can-be-stolen-by-an-auction-winner",
        "vulnerability": "An offer made after auction end can be stolen by an auction winner"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-03-improper-basispoints-check-in-distributefunds",
        "vulnerability": "Improper `BASIS_POINTS` Check in `_distributeFunds()`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-17-there-is-no-support-for-the-trading-of-cryptopunks",
        "vulnerability": "There is no Support For The Trading of Cryptopunks"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-01-eip-712-signatures-can-be-re-used-in-private-sales",
        "vulnerability": "EIP-712 signatures can be re-used in private sales"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-07-getcreatorpaymentinfo-is-not-equipped-to-handle-reverts-on-an-unbounded-recipients-array",
        "vulnerability": "`_getCreatorPaymentInfo()` is Not Equipped to Handle Reverts on an Unbounded `_recipients` Array"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-11-maxroyaltyrecipientsindex-set-too-low",
        "vulnerability": "`MAX_ROYALTY_RECIPIENTS_INDEX` set too low"
    },
    {
        "name": "2022-02-foundation",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-foundation#h-02-creators-can-steal-sale-revenue-from-owners-sales",
        "vulnerability": "Creators can steal sale revenue from owners\u2019 sales"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-05-no-support-for-erc1155-tokens",
        "vulnerability": "No Support For `ERC1155` Tokens"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-09-missing-receiver-validation-in-withdrawfrom",
        "vulnerability": "Missing receiver validation in `withdrawFrom`"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-08-primary-seller-can-avoid-paying-the-primary-fee",
        "vulnerability": "Primary seller can avoid paying the primary fee"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-03-approve-race-condition-in-feth",
        "vulnerability": "Approve race condition in FETH"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-05-exchange-does-not-split-royalty-revenue-correctly",
        "vulnerability": "Exchange does not split royalty revenue correctly"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-15-royalties-can-be-distribution-unfairly-among-creatorrecipients-for-nft-contracts-with-non-standard-getroyalties-returns",
        "vulnerability": "Royalties can be distribution unfairly among `creatorRecipients` for NFT contracts with non-standard `getRoyalties()` returns"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-18-fees-are-incorrectly-charged-on-unfinalized-nft-sales",
        "vulnerability": "Fees Are Incorrectly Charged on Unfinalized NFT Sales"
    },
    {
        "name": "2022-02-foundation",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-foundation#n-04-improper-state-handling",
        "vulnerability": "Improper State Handling"
    },
    {
        "name": "2022-02-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-foundation#m-06-buyfromprivatesalefor-will-fail-if-the-buyer-has-insufficient-balance-due-to-an-open-offer-on-the-same-nft",
        "vulnerability": "`buyFromPrivateSaleFor()` Will Fail if The Buyer Has Insufficient Balance Due to an Open Offer on The Same NFT"
    },
    {
        "name": "2022-12-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-backed#l-02-latestauctionstarttime-can-be-wrongly-set-to-0-even-if-an-nft-is-still-selling-in-auction",
        "vulnerability": "`latestAuctionStartTime` can be wrongly set to 0 even if an NFT is still selling in auction"
    },
    {
        "name": "2022-12-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-backed#l-01-current-decay-percentage-could-be-too-high",
        "vulnerability": "Current decay percentage could be too high"
    },
    {
        "name": "2022-12-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-backed#h-04-users-may-be-liquidated-right-after-taking-maximal-debt",
        "vulnerability": "Users may be liquidated right after taking maximal debt"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-01-missing-deadline-checks-allow-pending-transactions-to-be-maliciously-executed",
        "vulnerability": "Missing deadline checks allow pending transactions to be maliciously executed"
    },
    {
        "name": "2022-12-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-backed#h-02-stealing-fund-by-applying-reentrancy-attack-on-removecollateral--startliquidationauction--and-purchaseliquidationauctionnft",
        "vulnerability": "Stealing fund by applying reentrancy attack on `removeCollateral`, `startLiquidationAuction`, and `purchaseLiquidationAuctionNFT`"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-05-paprcontrollerbuyandreducedebt-msgsender-can-lose-paper-by-paying-the-debt-twice",
        "vulnerability": "PaprController.buyAndReduceDebt: msg.sender can lose paper by paying the debt twice"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-06-paprcontroller-pays-swap-fee-in-buyandreducedebt--not-user",
        "vulnerability": "`PaprController` pays swap fee in `buyAndReduceDebt`, not user"
    },
    {
        "name": "2022-12-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-backed#h-03-collateral-nft-deposited-to-a-wrong-address--when-transferred-directly-to-paprcontroller",
        "vulnerability": "Collateral NFT deposited to a wrong address, when transferred directly to `PaprController`"
    },
    {
        "name": "2022-12-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-backed#l-04-signature-scheme-is-not-checking-that-signeraddress-is-not-0",
        "vulnerability": "Signature scheme is not checking that `signerAddress` is not 0"
    },
    {
        "name": "2022-12-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-backed#l-03-using-the-30-days-twap-floor-price-of-the-entire-collection-means-that-the-protocol-is-largely-restricted-to-using-the-nfts-that-are-close-to-the-floor-price",
        "vulnerability": "Using the 30 days TWAP floor price of the entire collection means that the protocol is largely restricted to using the NFTS that are close to the floor price."
    },
    {
        "name": "2022-12-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-backed#l-05-using-only-the-lowest-price-of-the-nft-of-the-entire-collection-can-be-dangerous",
        "vulnerability": "Using only the lowest price of the NFT of the entire collection can be dangerous"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-04-incorrect-usage-of-safetransferfrom-traps-fees-in-papr-controller",
        "vulnerability": "Incorrect usage of safeTransferFrom traps fees in Papr Controller"
    },
    {
        "name": "2022-12-backed",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-backed#n-01-more-accurate-to-use-<=-for-validity-of-oracle-timestamp",
        "vulnerability": "More accurate to use `<=` for validity of oracle timestamp"
    },
    {
        "name": "2022-12-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-backed#h-01-borrowers-may-earn-auction-proceeds-without-filling-the-debt-shortfall",
        "vulnerability": "Borrowers may earn auction proceeds without filling the debt shortfall"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-07-last-collateral-check-is-not-safe",
        "vulnerability": "Last collateral check is not safe"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-08-user-fund-loss-because-function-purchaseliquidationauctionnft-takes-extra-liquidation-penalty-when-users-last-collateral-is-liquidated--set-wrong-value-for-maxdebtcached-when-islastcollateral-is-true",
        "vulnerability": "User fund loss because function `purchaseLiquidationAuctionNFT()` takes extra liquidation penalty when user\u2019s last collateral is liquidated, (set wrong value for `maxDebtCached` when `isLastCollateral` is true)"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-03-grieving-attack-by-failing-users-transactions",
        "vulnerability": "Grieving attack by failing user\u2019s transactions"
    },
    {
        "name": "2022-12-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-backed#m-02-disabled-nft-collateral-should-not-be-used-to-mint-debt",
        "vulnerability": "Disabled NFT collateral should not be used to mint debt"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-07-no-minimum-rate-in-the-auction-may-break-the-protocol-under-network-failure",
        "vulnerability": "No minimum rate in the auction may break the protocol under network failure"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-05-bonding-mechanism-allows-malicious-user-to-dos-auctions",
        "vulnerability": "Bonding mechanism allows malicious user to DOS auctions"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-23-auction-settler-can-steal-user-funds-if-bond-timestamp-is-high-enough",
        "vulnerability": "Auction settler can steal user funds if bond timestamp is high enough"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-18-licensefee-can-be-greater-than-base",
        "vulnerability": "licenseFee can be greater than BASE"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-21-zero-weighted-baskets-are-allowed-to-steal-funds",
        "vulnerability": "Zero weighted baskets are allowed to steal funds"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-20-auction-multiplier-set-to-zero",
        "vulnerability": "Auction multiplier set to zero"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-06-basket-becomes-unusable-if-everybody-burns-their-shares",
        "vulnerability": "Basket becomes unusable if everybody burns their shares"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-17-unsafe-approve-would-halt-the-auction-and-burn-the-bond",
        "vulnerability": "Unsafe approve would halt the auction and burn the bond"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-22-incorrect-data-location-specifier-can-be-abused-to-cause-dos-and-fund-loss",
        "vulnerability": "Incorrect data location specifier can be abused to cause DoS and fund loss"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#h-03-reentrancy-in-settleauction-malicious-publisher-can-bypass-index-timelock-mechanism--inject-malicious-index--and-rug-the-basket",
        "vulnerability": "Reentrancy in settleAuction(): malicious publisher can bypass index timelock mechanism, inject malicious index, and rug the basket"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#h-02-basketsolauctionburn-a-failed-auction-will-freeze-part-of-the-funds",
        "vulnerability": "`Basket.sol#auctionBurn()` A failed auction will freeze part of the funds"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-13-lack-of-checks-in-factorysetbondpercentdiv-allow-owner-to-prevent-bonding-in-auctionbondforrebalance",
        "vulnerability": "lack of checks in `Factory::setBondPercentDiv` allow owner to prevent bonding in Auction::bondForRebalance()"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-01-use-safetransfer-instead-of-transfer",
        "vulnerability": "Use safeTransfer instead of transfer"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-02-fee-on-transfer-tokens-can-lead-to-incorrect-approval",
        "vulnerability": "Fee on transfer tokens can lead to incorrect approval"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#h-01-re-entrancy-in-settleauction-allow-stealing-all-funds",
        "vulnerability": "Re-entrancy in `settleAuction` allow stealing all funds"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-16-auctionsolsettleauction-mishandling-bounty-state-could-potentially-disrupt-settleauction",
        "vulnerability": "`Auction.sol#settleAuction()` Mishandling bounty state could potentially disrupt `settleAuction()`"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-08-settleauction-may-be-impossible-if-locked-at-a-wrong-time",
        "vulnerability": "settleAuction may be impossible if locked at a wrong time."
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-15-auctionsolsettleauction-late-auction-bond-could-potentially-not-being-able-to-be-settled--cause-funds-loss-to-bonder",
        "vulnerability": "`Auction.sol#settleAuction()` late auction bond could potentially not being able to be settled, cause funds loss to bonder"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-03-onlyowner-role-can-unintentionally-influence-settleauction",
        "vulnerability": "`onlyOwner` Role Can Unintentionally Influence `settleAuction()`"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-09-fee-calculation-is-potentially-incorrect",
        "vulnerability": "Fee calculation is potentially incorrect"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-14-basketsolhandlefees-could-potentially-cause-disruption-of-minting-and-burning",
        "vulnerability": "`Basket.sol#handleFees()` could potentially cause disruption of minting and burning"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-11-owner-can-steal-all-basket-funds-during-auction",
        "vulnerability": "Owner can steal all Basket funds during auction"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-10-burn-and-mintto-in-basketsol-vulnerable-to-reentrancy",
        "vulnerability": "`burn` and `mintTo` in `Basket.sol` vulnerable to reentrancy"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-19-scoop-erc20-tokens-from-basket-contract",
        "vulnerability": "Scoop ERC20 tokens from basket contract"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-04-user-can-mint-miniscule-amount-of-shares--later-withdraw-miniscule-more-than-deposited",
        "vulnerability": "User can mint miniscule amount of shares, later withdraw miniscule more than deposited"
    },
    {
        "name": "2021-09-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-defiprotocol#m-12-factorysol---lack-of-checks-in-setauctiondecrement-will-cause-reverts-in-auctionsettleauction",
        "vulnerability": "Factory.sol - lack of checks in `setAuctionDecrement` will cause reverts in Auction::settleAuction()"
    },
    {
        "name": "2021-09-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-swivel#m-03-previously-created-markets-can-be-overwritten",
        "vulnerability": "Previously created markets can be overwritten"
    },
    {
        "name": "2021-09-swivel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-swivel#h-02-swivel-taker-is-charged-fees-twice-in-exitvaultfillingvaultinitiate",
        "vulnerability": "Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate"
    },
    {
        "name": "2021-09-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-swivel#m-04-fee-on-transfer-underlying-can-cause-problems",
        "vulnerability": "fee-on-transfer underlying can cause problems"
    },
    {
        "name": "2021-09-swivel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-swivel#h-04-return-value-of-0-from-ecrecover-not-checked",
        "vulnerability": "return value of 0 from ecrecover not checked"
    },
    {
        "name": "2021-09-swivel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-swivel#h-03-transfernotionalfrom-doesnt-check-from-!=-to",
        "vulnerability": "`transferNotionalFrom` doesn\u2019t check `from != to`"
    },
    {
        "name": "2021-09-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-swivel#m-02-missing-event-&-timelock-for-critical-onlyadmin-functions",
        "vulnerability": "Missing event & timelock for critical `onlyAdmin` functions"
    },
    {
        "name": "2021-09-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-swivel#m-01-admin-is-a-single-point-of-failure-without-any-mitigations",
        "vulnerability": "Admin is a single-point of failure without any mitigations"
    },
    {
        "name": "2021-09-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-swivel#m-05-swivel-implementation-for-initiatezctokenfillingzctokenexit-is-incorrect",
        "vulnerability": "Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect"
    },
    {
        "name": "2021-09-swivel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-swivel#h-01-unsafe-handling-of-underlying-tokens",
        "vulnerability": "Unsafe handling of underlying tokens"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-15-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-03-use-existing-stack-cache-variable-rather-than-re-fetching-state-variable",
        "vulnerability": "Use existing stack cache variable rather than re-fetching state variable"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-01-full-vault-details-unnecessarily-fetched-twice-in-each-call-to-buyoption",
        "vulnerability": "Full vault details unnecessarily fetched twice in each call to `buyOption()`"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-02-function-vaults-can-return-misleading-information",
        "vulnerability": "Function vaults() can return misleading information"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-11-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-26-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-09-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-01-wrong-error-message-string-in-function-createvault",
        "vulnerability": "Wrong error message string in function createVault()"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-07-also-burn-the-vault-to-get-a-gas-refund",
        "vulnerability": "Also `_burn()` the vault to get a gas refund"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-02-it-shouldnt-be-possible-to-create-a-vault-with-cally-own-token",
        "vulnerability": "It shouldn\u2019t be possible to create a vault with Cally\u2019 own token"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-04-ambiguous-error-message-in-createvault-for-durationdays",
        "vulnerability": "Ambiguous error message in createVault() for durationDays"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-05-the-available-values-in-premiumoptions[]-&-strikeoptions[]-are-too-restrictive",
        "vulnerability": "The available values in premiumOptions[] & strikeOptions[] are too restrictive"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-04-cheaper-to-split-struct-if-only-part-of-it-is-updated-frequently",
        "vulnerability": "Cheaper to split struct if only part of it is updated frequently"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-07-no-event-is-raised-when-vault-beneficiary-is-changed",
        "vulnerability": "No event is raised when vault beneficiary is changed"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-02-re-creation-of-short-memory-arrays-is-cheaper-than-fetching-indecies-from-a-storage-array",
        "vulnerability": "Re-creation of short `memory` arrays is cheaper than fetching indecies from a storage array"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-18-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-09-use-safetransferfrom-instead-of-transferfrom-for-erc721-transfers",
        "vulnerability": "Use safeTransferFrom instead of transferFrom for ERC721 transfers"
    },
    {
        "name": "2022-05-cally",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-cally#h-03-[wp-h0]-fake-balances-can-be-created-for-not-yet-existing-erc20-tokens--which-allows-attackers-to-set-traps-to-steal-funds-from-future-users",
        "vulnerability": "[WP-H0] Fake balances can be created for not-yet-existing ERC20 tokens, which allows attackers to set traps to steal funds from future users"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-19-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-06-owner-can-set-the-feerate-to-be-greater-than-100%-and-cause-all-future-calls-to-exercise-to-revert",
        "vulnerability": "Owner can set the feeRate to be greater than 100% and cause all future calls to `exercise` to revert"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-13-access-mappings-directly-rather-than-using-accessor-functions",
        "vulnerability": "Access mappings directly rather than using accessor functions"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-01-owner-can-modify-the-feerate-on-existing-vaults-and-steal-the-strike-value-on-exercise",
        "vulnerability": "Owner can modify the feeRate on existing vaults and steal the strike value on exercise"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-04-vaults-steal-rebasing-tokens-rewards",
        "vulnerability": "Vaults steal rebasing tokens\u2019 rewards"
    },
    {
        "name": "2022-05-cally",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-cally#h-01-no-revert-on-transfer-erc20-tokens-can-be-drained",
        "vulnerability": "no-revert-on-transfer ERC20 tokens can be drained"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-05-expiration-calculation-overflows-if-call-option-duration-\u2265-195-days",
        "vulnerability": "Expiration calculation overflows if call option duration \u2265 195 days"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-12-offsets-should-only-be-calculated-once-per-loop",
        "vulnerability": "Offsets should only be calculated once per loop"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-16-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-03-users-may-accidentally-overpay-in-buyoption-and-the-excess-will-be-paid-to-the-vault-creator",
        "vulnerability": "User\u2019s may accidentally overpay in `buyOption()` and the excess will be paid to the vault creator"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-10-createvault-does-not-confirm-whether-tokentype-and-tokens-type-are-the-same",
        "vulnerability": "`createVault()` does not confirm whether `tokenType` and `token`\u2019s type are the same"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-06-use-unchecked-{}-for-calculations-that-cannot-overflow",
        "vulnerability": "Use `unchecked {}` for calculations that cannot overflow"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-cally",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-cally#h-02-inefficiency-in-the-dutch-auction-due-to-lower-duration",
        "vulnerability": "Inefficiency in the Dutch Auction due to lower duration"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-25-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-07-lack-of-0-amount-check-allows-malicious-user-to-create-infinite-vaults",
        "vulnerability": "Lack of 0 amount check allows malicious user to create infinite vaults"
    },
    {
        "name": "2022-05-cally",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-cally#n-02-valutindex-=-1-is-never-used",
        "vulnerability": "valutIndex = 1 is never used"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-24-multiplicationdivision-by-two-should-use-bit-shifting",
        "vulnerability": "Multiplication/division by two should use bit shifting"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-05-store-actual-beneficiary-rather-than-deciding-every-time",
        "vulnerability": "Store actual beneficiary rather than deciding every time"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-03-initiatewithdraw-should-not-be-callable---if-option-already-exercised",
        "vulnerability": "initiateWithdraw() should not be callable , if option already exercised"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-10-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-cally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cally#m-08-vault-is-not-compatible-with-fee-tokens-and-vaults-with-such-tokens-could-be-exploited",
        "vulnerability": "Vault is Not Compatible with Fee Tokens and Vaults with Such Tokens Could Be Exploited"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-14-cheaper-input-valdiations-should-come-before-expensive-operations",
        "vulnerability": "Cheaper input valdiations should come before expensive operations"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-17-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-23-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-20-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-05-cally",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-cally#g-22-dont-compare-boolean-expressions-to-boolean-literals",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals"
    },
    {
        "name": "2022-05-cally",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-cally#n-01-consistency-in-fetching-vault-values",
        "vulnerability": "Consistency in fetching vault values"
    },
    {
        "name": "2022-05-cally",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-cally#l-06-no-event-is-raised-when-feerate-is-changed",
        "vulnerability": "No event is raised when feeRate is changed"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#m-03-wethwithdrawto-is-vulnerable-re-entrancy",
        "vulnerability": "`_wethWithdrawTo` is vulnerable re-entrancy"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#h-01-reward-computation-is-wrong",
        "vulnerability": "Reward computation is wrong"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#m-04-total-lp-supply-&-total-debt-accrual-is-wrong",
        "vulnerability": "Total LP supply & total debt accrual is wrong"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#m-01-chainlink---use-latestrounddata-instead-of-latestanswer-to-run-more-validations",
        "vulnerability": "Chainlink - Use `latestRoundData` instead of `latestAnswer` to run more validations"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#m-02-safetransferfrom-in-transferhelper-is-not-safetransferfrom",
        "vulnerability": "`safeTransferFrom` in `TransferHelper` is not `safeTransferFrom`"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#h-03-lendingpairliquidateaccount-fails-if-tokens-are-lent-out",
        "vulnerability": "`LendingPair.liquidateAccount` fails if tokens are lent out"
    },
    {
        "name": "2021-07-wildcredit",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-wildcredit#h-02-lendingpairliquidateaccount-does-not-accrue-and-update-cumulativeinterestrate",
        "vulnerability": "`LendingPair.liquidateAccount` does not accrue and update `cumulativeInterestRate`"
    },
    {
        "name": "2022-01-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-yield#m-02-rewards-distribution-can-be-disrupted-by-a-early-user",
        "vulnerability": "Rewards distribution can be disrupted by a early user"
    },
    {
        "name": "2022-01-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-yield#h-02-malicious-users-can-transfer-vault-collateral-to-other-accounts-to-extract-additional-yield-from-the-protocol",
        "vulnerability": "Malicious Users Can Transfer Vault Collateral To Other Accounts To Extract Additional Yield From The Protocol"
    },
    {
        "name": "2022-01-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-yield#h-01-malicious-users-can-duplicate-protocol-earned-yield-by-transferring-wcvx-tokens-to-another-account",
        "vulnerability": "Malicious Users Can Duplicate Protocol Earned Yield By Transferring `wCVX` Tokens To Another Account"
    },
    {
        "name": "2022-01-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-yield#m-01-oracle-data-feed-is-insufficiently-validated",
        "vulnerability": "Oracle data feed is insufficiently validated"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-20-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-01-batch-related-functions-will-revert-if-removeaddress-is-called",
        "vulnerability": "Batch-related functions will revert if `removeAddress()` is called"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-21-use-1000-rather-than-exponentiation-10**3",
        "vulnerability": "Use `1000` rather than exponentiation `10**3`"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-25-cooldown-&-warmup-period-do-not-work-when-a-low-firstepochendtime-is-passed-to-initialize",
        "vulnerability": "coolDown & warmUp period do not work when a low _firstEpochEndTime is passed to initialize"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-18-removal-of-liquidity-from-the-reserve-can-be-griefed",
        "vulnerability": "Removal of liquidity from the reserve can be griefed"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-yieldy#h-01-no-withdrawal-possible-for-eth-toke-pool",
        "vulnerability": "No withdrawal possible for ETH TOKE pool"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-15-token-transfers-in-liquidityreserve-and-staking-contract-dont-support-deflationary-erc20-tokens--and-user-funds-can-be-lost-if-stacking-token-was-deflationary",
        "vulnerability": "token transfers in LiquidityReserve and Staking contract don\u2019t support deflationary ERC20 tokens, and user funds can be lost if stacking token was deflationary"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-10-pre-solidity-0813->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "Pre-Solidity `0.8.13`: `> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-22-minimumliquidity-checks-missing---bringing-liquidity-below-required-min",
        "vulnerability": "MINIMUM_LIQUIDITY checks missing - Bringing Liquidity below required min"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-yieldy#h-02-stakingsolstake-dos-by-staking-1-wei-for-the-recipient-when-warmupperiod->-0",
        "vulnerability": "`Staking.sol#stake()` DoS by staking 1 wei for the recipient when `warmUpPeriod > 0`"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-08-duplicated-conditions-should-be-refactored-to-a-modifier-or-function-to-save-deployment-costs",
        "vulnerability": "Duplicated conditions should be refactored to a modifier or function to save deployment costs"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-02-staking-contracts-token-not-verified-to-be-the-same-token-as-the-staking-token",
        "vulnerability": "Staking contract\u2019s token not verified to be the same token as the staking token"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-11->=-is-cheaper-than->-and-<=-cheaper-than-<",
        "vulnerability": "`>=` is cheaper than `>` (and `<=` cheaper than `<`)"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-12-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-05-possible-dos-out-of-gas-on-loops",
        "vulnerability": "Possible DOS (out-of-gas) on loops."
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-07-yieldystorage--tightly-pack-storage-variables",
        "vulnerability": "`YieldyStorage` : Tightly pack storage variables"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-04-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-06-front-runable-initializer",
        "vulnerability": "Front-runable initializer"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-20-user-fund-lose-in-addliquidity-of-liquidityreserve-by-increasing-totallockedvalue--totalsupply-to-very-large-number-by-attacker",
        "vulnerability": "User fund lose in addLiquidity() of LiquidityReserve by increasing (totalLockedValue / totalSupply()) to very large number by attacker"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-01-unsecure-transferfrom",
        "vulnerability": "Unsecure `transferFrom`"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-07-withdrawals-initiated-after-cycle-withdrawal-request-wont-be-withdrawn-in-the-correct-cycle",
        "vulnerability": "Withdrawals initiated after cycle withdrawal request won\u2019t be withdrawn in the correct cycle"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-17-it-costs-more-gas-to-initialize-variables-with-their-default-value-than-letting-the-default-value-be-applied",
        "vulnerability": "It costs more gas to initialize variables with their default value than letting the default value be applied"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-16-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-yieldy#h-04-yield-of-liquidityreserve-can-be-stolen",
        "vulnerability": "Yield of `LiquidityReserve` can be stolen"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-23-incorrect-withdrawal-requested",
        "vulnerability": "Incorrect withdrawal requested"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-05-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-03-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-06-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-18-upgrade-pragma",
        "vulnerability": "Upgrade pragma"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-08-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-15-++i-costs-less-gas-compared-to-i++-or-i-+=-1-same-for---i-vs-i---or-i--=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1` (same for `--i` vs `i--` or `i -= 1`)"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-06-liquidityreservestorage--tightly-pack-storage-variables",
        "vulnerability": "`LiquidityReserveStorage` : Tightly pack storage variables"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-24-staking-presign-could-use-some-basic-validations",
        "vulnerability": "Staking `preSign` could use some basic validations"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-13-sending-batch-withdrawal-requests-can-possibly-dos",
        "vulnerability": "Sending batch withdrawal requests can possibly DoS"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-04-missing-checks-that-the-end-time-matches-the-duration",
        "vulnerability": "Missing checks that the end time matches the duration"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-19-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-11-burn-access-control-can-be-bypassed",
        "vulnerability": "Burn access control can be bypassed"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-21-cannot-mint-to-exactly-max-supply-using-mint-function",
        "vulnerability": "Cannot mint to exactly max supply using `_mint` function"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-03-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-03-minter-burner-role-can-burn-any-amount-of-yieldy-from-an-arbitrary-address",
        "vulnerability": "MINTER _BURNER_ ROLE can burn any amount of Yieldy from an arbitrary address"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-04-arbitrage-on-stake",
        "vulnerability": "Arbitrage on `stake()`"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-14-amounts-should-be-checked-for-0-before-calling-a-transfer",
        "vulnerability": "Amounts should be checked for 0 before calling a transfer"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-13-using-private-rather-than-public-for-constants-saves-gas",
        "vulnerability": "Using private rather than public for constants saves gas"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-27-instantunstake-fee-can-be-avoided",
        "vulnerability": "instantUnstake fee can be avoided"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-02-its-possible-to-perform-dos-and-fund-lose-in-stacking-by-transferring-tokens-directly-to-contract",
        "vulnerability": "It\u2019s possible to perform DOS and fund lose in Stacking by transferring tokens directly to contract"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-10-no-way-to-set-curvepool-approval-after-setting-new-curve-pool-address",
        "vulnerability": "No way to set CURVE_POOL approval after setting new curve pool address"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-08-rebases-can-be-frontrun-with-very-little-token-downtime-even-when-warmupperiod->-0",
        "vulnerability": "Rebases can be frontrun with very little token downtime even when warmUpPeriod > 0"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-17-staking-rebase-does-not-rebase-according-to-the-status-of-the-current-epoch",
        "vulnerability": "Staking: rebase() does not rebase according to the status of the current epoch."
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-02-wrong-use-of-the-memory-keyword-for-a-struct",
        "vulnerability": "Wrong use of the `memory` keyword for a Struct"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-01-duplicated-external-function-call",
        "vulnerability": "Duplicated external function call"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-yieldy#h-03-denial-of-service-by-wrong-batchrequestsremoveaddress-logic",
        "vulnerability": "Denial of Service by wrong `BatchRequests.removeAddress` logic"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-09-users-of-migrationsol-may-forfeit-rebase-rewards",
        "vulnerability": "Users of Migration.sol may forfeit rebase rewards"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-04-avoid-emitting-a-storage-variable-when-a-memory-value-is-available",
        "vulnerability": "Avoid emitting a storage variable when a memory value is available"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-06-user-can-initiate-withdraw-for-previous-epoch-if-rebase-hasnt-been-called-since-end-of-epoch",
        "vulnerability": "User can initiate withdraw for previous epoch if rebase hasn\u2019t been called since end of epoch"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-03-missing-infinite-approval-functionality",
        "vulnerability": "Missing infinite approval functionality"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-14-incorrect-rebase-percentage-calculation",
        "vulnerability": "Incorrect rebase percentage calculation"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-07-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-26-instantunstake-function-can-be-frontrunned-with-fee-increase",
        "vulnerability": "instantUnstake function can be frontrunned with fee increase"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-02-misleading-variable-names",
        "vulnerability": "Misleading variable names"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-yieldy#g-09-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas",
        "vulnerability": "A modifier used only once and not being inherited should be inlined to save gas"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-yieldy#l-05-missing-input-validations-and-timelocks",
        "vulnerability": "Missing input validations and timelocks"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-16-storerebase-is-called-with-the-wrong-parameters",
        "vulnerability": "`_storeRebase()` is called with the wrong parameters"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-19-staking-the-rebase-function-needs-to-be-called-before-calling-the-function-in-the-yieldy-contract-that-uses-the-rebasingcreditspertoken-variable",
        "vulnerability": "Staking: the rebase function needs to be called before calling the function in the Yieldy contract that uses the rebasingCreditsPerToken variable"
    },
    {
        "name": "2022-06-yieldy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-yieldy#m-12-inconsistent-balance-when-fee-on-transfer-tokens",
        "vulnerability": "Inconsistent balance when fee-on transfer tokens."
    },
    {
        "name": "2022-06-yieldy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-yieldy#n-01-return-values-of-approve-not-checked",
        "vulnerability": "Return values of `approve()` not checked"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-08-vaultwithdraw-mixes-normalized-and-standard-amounts",
        "vulnerability": "`Vault.withdraw` mixes normalized and standard amounts"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-12-harvest-can-be-frontrun",
        "vulnerability": "Harvest can be frontrun"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-05-vault-swaps-at-parity-with-swap-fee-=-withdrawal-fee",
        "vulnerability": "Vault: Swaps at parity with swap fee = withdrawal fee"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-01-controllersetcap-sets-wrong-vault-balance",
        "vulnerability": "`Controller.setCap` sets wrong vault balance"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-05-vault-treats-all-tokens-exactly-the-same-that-creates-huge-arbitrage-opportunities",
        "vulnerability": "Vault treats all tokens exactly the same that creates (huge) arbitrage opportunities."
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-02-set-cap-breaks-vaults-balance",
        "vulnerability": "set cap breaks vault\u2019s Balance"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-09-token-->-vault-mapping-can-be-overwritten",
        "vulnerability": "token -> vault mapping can be overwritten"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-14-halting-the-protocol-should-be-onlygovernance-and-notonlystrategist",
        "vulnerability": "Halting the protocol should be `onlyGovernance` and not`onlyStrategist`"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-03-no-safety-check-in-addtoken",
        "vulnerability": "No safety check in `addToken`"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-04-controller-does-not-raise-an-error-when-theres-insufficient-liquidity",
        "vulnerability": "Controller does not raise an error when there\u2019s insufficient liquidity"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-11-wrong-yaxis-estimates",
        "vulnerability": "wrong YAXIS estimates"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-09-removetoken-would-break-the-vaultprotocol",
        "vulnerability": "`removeToken` would break the vault/protocol."
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-07-vault-withdrawals-can-be-frontrun-to-cause-users-to-burn-tokens-without-receiving-funds-in-return",
        "vulnerability": "Vault: Withdrawals can be frontrun to cause users to burn tokens without receiving funds in return"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-01-vaulthelper-deposits-dont-work-with-fee-on-transfer-tokens",
        "vulnerability": "`VaultHelper` deposits don\u2019t work with fee-on transfer tokens"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-10-an-attacker-can-steal-funds-from-multi-token-vaults",
        "vulnerability": "An attacker can steal funds from multi-token vaults"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-13-managerallowedvaults-check-missing-for-addremove-strategy",
        "vulnerability": "`manager.allowedVaults` check missing for add/remove strategy"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-06--controller-is-vulnerable-to-sandwich-attack",
        "vulnerability": "# Controller is vulnerable to sandwich attack"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-04-adding-asymmetric-liquidity-in-addliquidity-results-in-fewer-lp-tokens-minted-than-what-should-be-wanted",
        "vulnerability": "Adding asymmetric liquidity in `_addLiquidity` results in fewer LP tokens minted than what should be wanted"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-06-earn-results-in-decreasing-share-price",
        "vulnerability": "earn results in decreasing share price"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-08-controllerincasestrategygetstuck-does-not-update-balance",
        "vulnerability": "`Controller.inCaseStrategyGetStuck` does not update balance"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-02-erc20-return-values-not-checked",
        "vulnerability": "ERC20 return values not checked"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-yaxis#h-07-vaultbalance-mixes-normalized-and-standard-amounts",
        "vulnerability": "`Vault.balance()` mixes normalized and standard amounts"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-10-yaxisvotepowerbalanceof-can-be-manipulated",
        "vulnerability": "`YAxisVotePower.balanceOf` can be manipulated"
    },
    {
        "name": "2021-09-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-yaxis#m-03-vaultwithdraw-sometimes-burns-too-many-shares",
        "vulnerability": "`Vault.withdraw` sometimes burns too many shares"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-10-should-check-return-data-from-chainlink-aggregators",
        "vulnerability": "SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-20-early-user-can-break-addliquidity",
        "vulnerability": "Early user can break `addLiquidity`"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-29-vaderpoolv2mintfungible-exposes-users-to-unlimited-slippage",
        "vulnerability": "VaderPoolV2.mintFungible exposes users to unlimited slippage"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-18-twaporaclegetrate-does-not-scale-the-ratio",
        "vulnerability": "`TWAPOracle.getRate` does not scale the ratio"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-04-twaporacle-doesnt-calculate-vaderusdv-exchange-rate-correctly",
        "vulnerability": "TwapOracle doesn\u2019t calculate VADER:USDV exchange rate correctly"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-17-twaporacle-might-register-with-wrong-token-order",
        "vulnerability": "TWAPOracle might register with wrong token order"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-11-dex-v1-basepoolmint-function-can-be-frontrun",
        "vulnerability": "(dex-v1) BasePool.mint() function can be frontrun"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-25-wrong-design-of-swap-results-in-unexpected-and-unfavorable-outputs",
        "vulnerability": "Wrong design of `swap()` results in unexpected and unfavorable outputs"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-21-vaderpoolv2rescue-results-in-loss-of-funds-rather-than-recoverability",
        "vulnerability": "VaderPoolV2.rescue results in loss of funds rather than recoverability"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-01-unbounded-loop-in-twaporacleupdate-can-result-in-oracle-being-locked",
        "vulnerability": "Unbounded loop in TwapOracle.update can result in oracle being locked"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-08-usdv-and-vader-rate-can-be-wrong",
        "vulnerability": "USDV and VADER rate can be wrong"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-19-governance-veto-can-be-bypassed",
        "vulnerability": "Governance veto can be bypassed"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-03-permissioned-nature-of-twaporacle-allows-owner-to-manipulate-oracle",
        "vulnerability": "Permissioned nature of `TwapOracle` allows owner to manipulate oracle"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-06-add-liquidity-is-vulnerable-to-sandwich-attack",
        "vulnerability": "add liquidity is vulnerable to sandwich attack"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-33-mixing-different-types-of-lp-shares-can-lead-to-losses-for-synth-holders",
        "vulnerability": "Mixing different types of LP shares can lead to losses for Synth holders"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-21-lack-of-access-control-allow-attacker-to-mintfungible-and-mintsynth-with-other-users-wallet-balance",
        "vulnerability": "Lack of access control allow attacker to `mintFungible()` and `mintSynth()` with other user\u2019s wallet balance"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-23-synth-tokens-can-get-over-minted",
        "vulnerability": "`Synth` tokens can get over-minted"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-09-vaderpoolv2-incorrectly-calculates-the-amount-of-il-protection-to-send-to-lps",
        "vulnerability": "VaderPoolV2 incorrectly calculates the amount of IL protection to send to LPs"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-10-calculate-loss-is-vulnerable-to-flashloan-attack",
        "vulnerability": "calculate Loss is vulnerable to flashloan attack"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-18-attacker-can-claim-more-il-by-manipulating-pool-price-then-removeliquidity",
        "vulnerability": "Attacker can claim more IL by manipulating pool price then `removeLiquidity`"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-14-basepoolswap-is-callable-by-anyone",
        "vulnerability": "`BasePool.swap()` Is Callable By Anyone"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-05-linearvesting-does-not-calculate-vested-amount-linearly",
        "vulnerability": "LinearVesting does not calculate vested amount linearly"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-07-vaderreserve-does-not-support-paying-il-protection-out-to-more-than-one-address--resulting-in-locked-funds",
        "vulnerability": "VaderReserve does not support paying IL protection out to more than one address, resulting in locked funds"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-03-vader-contains-a-fee-on-transfer",
        "vulnerability": "VADER contains a Fee-On-Transfer"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-22-mintsynth-and-burnsynth-can-be-front-run",
        "vulnerability": "`mintSynth()` and `burnSynth()` can be front run"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-12-attacker-can-get-extremely-cheap-synth-by-front-running-create-pool",
        "vulnerability": "Attacker can get extremely cheap synth by front-running create Pool"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-32-covering-impermanent-loss-allows-profiting-off-asymmetric-liquidity-provision-at-expense-of-reserve-holdings",
        "vulnerability": "Covering impermanent loss allows profiting off asymmetric liquidity provision at expense of reserve holdings"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-04-inconsistent-balance-when-supplying-transfer-on-fee-or-deflationary-tokens",
        "vulnerability": "Inconsistent balance when supplying transfer-on-fee or deflationary tokens"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-27-unrestricted-vestfor",
        "vulnerability": "Unrestricted vestFor"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-13-basepoolmint-is-callable-by-anyone",
        "vulnerability": "`BasePool.mint()` Is Callable By Anyone"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-23-users-can-reset-bond-depositors-vesting-period",
        "vulnerability": "Users Can Reset Bond Depositor\u2019s Vesting Period"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-07-missing-hasstarted-modifier--can-lead-to-user-vesting-before-the-owner-begin-the-vesting",
        "vulnerability": "Missing hasStarted modifier, can lead to user vesting before the owner begin the vesting"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-11-twap-oracle-inflexible-updateperiod",
        "vulnerability": "TWAP Oracle inflexible `_updatePeriod`"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-34-incorrect-accrual-of-sumnative-and-sumusd-in-producing-consultation-results",
        "vulnerability": "Incorrect Accrual Of `sumNative` and `sumUSD` In Producing Consultation Results"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-19-unclear-twaporacleconsult-algorithm",
        "vulnerability": "Unclear `TwapOracle.consult` algorithm"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-13-anyone-can-arbitrarily-mint-synthetic-assets-in-vaderpoolv2mintsynth",
        "vulnerability": "Anyone Can Arbitrarily Mint Synthetic Assets In `VaderPoolV2.mintSynth()`"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-30-newly-registered-assets-skew-consultation-results",
        "vulnerability": "Newly Registered Assets Skew Consultation Results"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-15-lacking-validation-of-chainlink-oracle-queries",
        "vulnerability": "Lacking Validation Of Chainlink\u2019 Oracle Queries"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-28-incorrect-price-consultation-results",
        "vulnerability": "Incorrect Price Consultation Results"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-05-lps-of-vaderpoolv2-can-manipulate-pool-reserves-to-extract-funds-from-the-reserve",
        "vulnerability": "LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve."
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-02-should-a-chainlink-aggregator-become-stuck-in-a-stale-state-then-twaporacle-will-become-irrecoverably-broken",
        "vulnerability": "Should a Chainlink aggregator become stuck in a stale state then TwapOracle will become irrecoverably broken"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-20-tokens-with-fee-on-transfer-are-not-supported",
        "vulnerability": "Tokens with fee on transfer are not supported"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-31-unused-slippage-params",
        "vulnerability": "Unused slippage params"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-12-missing-duplicate-veto-check",
        "vulnerability": "Missing duplicate veto check"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-16-governors-veto-protection-can-be-exploited",
        "vulnerability": "Governor\u2019s veto protection can be exploited"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-16-vaderroutercalculateoutgivenin-calculates-wrong-swap",
        "vulnerability": "`VaderRouter.calculateOutGivenIn` calculates wrong swap"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-15-vaderrouterswap-performs-wrong-swap",
        "vulnerability": "`VaderRouter._swap` performs wrong swap"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-06-paying-il-protection-for-all-vaderpool-pairs-allows-the-reserve-to-be-drained",
        "vulnerability": "Paying IL protection for all VaderPool pairs allows the reserve to be drained."
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-24-wrong-designimplementation-of-addliquidity-allows-attacker-to-steal-funds-from-the-liquidity-pool",
        "vulnerability": "Wrong design/implementation of `addLiquidity()` allows attacker to steal funds from the liquidity pool"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-17-vests-can-be-denied",
        "vulnerability": "Vests can be denied"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-14-anyone-can-arbitrarily-mint-fungible-tokens-in-vaderpoolv2mintfungible",
        "vulnerability": "Anyone Can Arbitrarily Mint Fungible Tokens In `VaderPoolV2.mintFungible()`"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-22-no-way-to-remove-gasthrottle-after-deployment",
        "vulnerability": "No way to remove GasThrottle after deployment"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-08-user-may-not-receive-the-full-amount-of-il-compensation",
        "vulnerability": "User may not receive the full amount of IL compensation"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-01-minting-and-burning-synths-exposes-users-to-unlimited-slippage",
        "vulnerability": "Minting and burning synths exposes users to unlimited slippage"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-26-all-user-assets-which-are-approved-to-vaderpoolv2-may-be-stolen",
        "vulnerability": "All user assets which are approved to VaderPoolV2 may be stolen"
    },
    {
        "name": "2021-11-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-vader#m-09-the-first-lp-provider-can-destroy-the-pool",
        "vulnerability": "The first lp provider can destroy the pool"
    },
    {
        "name": "2021-11-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-vader#h-02-redemption-value-of-synths-can-be-manipulated-to-drain-vaderpool-of-all-native-assets",
        "vulnerability": "Redemption value of synths can be manipulated to drain `VaderPool` of all native assets"
    },
    {
        "name": "2022-10-blur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-blur#m-01-contract-owner-possesses-too-many-privileges",
        "vulnerability": "Contract Owner Possesses Too Many Privileges"
    },
    {
        "name": "2022-10-blur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-blur#h-01-standardpolicyerc1155sol-returns-amount-==-1-instead-of-amount-==-orderamount",
        "vulnerability": "`StandardPolicyERC1155.sol` returns `amount == 1` instead of `amount == order.amount`"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-03-fund-loss-when-insufficient-call-value-to-cover-fee",
        "vulnerability": "Fund loss when insufficient call value to cover fee"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-02-[wp-h3]-l1migratorsolmigrateeth-improper-implementation-of-l1migrator-causing-migrateeth-always-reverts--can-lead-to-eth-in-bridgeminter-getting-stuck-in-the-contract",
        "vulnerability": "[WP-H3] `L1Migrator.sol#migrateETH()` Improper implementation of `L1Migrator` causing `migrateETH()` always reverts, can lead to ETH in `BridgeMinter` getting stuck in the contract"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-07-[wp-m4]-unable-to-use-l2gatewayrouter-to-withdraw-lpt-from-l2-to-l1--as-l2lptgateway-does-not-implement-l2gatewayrouter-expected-method",
        "vulnerability": "[WP-M4] Unable to use `L2GatewayRouter` to withdraw LPT from L2 to L1, as `L2LPTGateway` does not implement `L2GatewayRouter` expected method"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-05-[wp-m1]-burnerrole-can-burn-any-amount-of-l2livepeertoken-from-an-arbitrary-address",
        "vulnerability": "[WP-M1] `BURNER_ROLE` can burn any amount of L2LivepeerToken from an arbitrary address"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-06-[wp-m2]-defaultadminrole-can-approve-arbitrary-address-to-spend-any-amount-from-the-l1escrow-contract",
        "vulnerability": "[WP-M2] `DEFAULT_ADMIN_ROLE` can approve arbitrary address to spend any amount from the `L1Escrow` contract"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-04-[wp-m0]-minterrole-can-be-granted-by-the-deployer-of-l2livepeertoken-and-mint-arbitrary-amount-of-tokens",
        "vulnerability": "[WP-M0] `MINTER_ROLE` can be granted by the deployer of L2LivepeerToken and mint arbitrary amount of tokens"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-01-l1migratormigratelpt-can-be-used-to-take-away-protocols-access-to-lpt-tokens-in-bridgeminter",
        "vulnerability": "L1Migrator.migrateLPT` can be used to take away protocol\u2019s access to LPT tokens in BridgeMinter"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-livepeer#h-01-[wp-h5]-l1migratorsolmigrateeth-does-not-send-bridgeminters-eth-to-l2-causing-eth-get-frozen-in-the-contract",
        "vulnerability": "[WP-H5] `L1Migrator.sol#migrateETH()` does not send `bridgeMinter`\u2019s ETH to L2 causing ETH get frozen in the contract"
    },
    {
        "name": "2022-01-livepeer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-livepeer#m-08-admin-can-rug-l2-escrow-tokens-leading-to-reputation-risk",
        "vulnerability": "Admin can rug L2 Escrow tokens leading to reputation risk"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-openleverage#m-03-eth-sent-to-timelock-will-be-locked-in-current-implementation",
        "vulnerability": "Eth sent to Timelock will be locked in current implementation"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-openleverage#m-04-openlevv1closetrade-with-v3-dex-doesnt-correctly-accounts-fee-on-transfer-tokens-for-repayments",
        "vulnerability": "OpenLevV1.closeTrade with V3 DEX doesn\u2019t correctly accounts fee on transfer tokens for repayments"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-openleverage#m-01-univ2classdexsoluniclasssell-tokens-with-fee-on-transfer-are-not-fully-supported",
        "vulnerability": "`UniV2ClassDex.sol#uniClassSell()` Tokens with fee on transfer are not fully supported"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-openleverage#m-02-missing-payable",
        "vulnerability": "Missing payable"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-openleverage#m-05-anti-flashloan-mechanism-may-lead-to-protocol-default",
        "vulnerability": "anti-flashloan mechanism may lead to protocol default"
    },
    {
        "name": "2022-01-openleverage",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-openleverage#h-01-openlevv1libs-and-lpools-dotransferout-functions-call-native-payabletransfer--which-can-be-unusable-for-smart-contract-calls",
        "vulnerability": "OpenLevV1Lib\u2019s and LPool\u2019s `doTransferOut` functions call native `payable.transfer`, which can be unusable for smart contract calls"
    },
    {
        "name": "2021-12-mellow",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-mellow#h-03-univ3vaultsolcollectearnings-can-be-front-run",
        "vulnerability": "`UniV3Vault.sol#collectEarnings()` can be front run"
    },
    {
        "name": "2021-12-mellow",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-mellow#h-02-wrong-implementation-of-performancefee-can-cause-users-to-lose-50%-to-100%-of-their-funds",
        "vulnerability": "Wrong implementation of `performanceFee` can cause users to lose 50% to 100% of their funds"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-01-user-deposits-dont-have-min-return-checks",
        "vulnerability": "User deposits don\u2019t have min. return checks"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-06-uniswapv3s-path-issue-for-swapexactoutput",
        "vulnerability": "UniswapV3\u2019s path issue for `swapExactOutput`"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-07-bad-redirects-can-make-it-impossible-to-deposit-&-withdraw",
        "vulnerability": "Bad redirects can make it impossible to deposit & withdraw"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-04-chieftradersol-wrong-implementation-of-swapexactinput-and-swapexactoutput",
        "vulnerability": "`ChiefTrader.sol` Wrong implementation of `swapExactInput()` and `swapExactOutput()`"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-03-users-can-avoid-paying-vault-fees",
        "vulnerability": "Users can avoid paying vault fees"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-02-withdraw-from-aavevault-will-receive-less-than-actual-share",
        "vulnerability": "Withdraw from `AaveVault` will receive less than actual share"
    },
    {
        "name": "2021-12-mellow",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-mellow#m-05-admin-can-break-numberofvalidtokens",
        "vulnerability": "Admin can break `_numberOfValidTokens`"
    },
    {
        "name": "2021-12-mellow",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-mellow#h-04-aavevault-does-not-update-tvl-on-depositwithdraw",
        "vulnerability": "AaveVault does not update TVL on deposit/withdraw"
    },
    {
        "name": "2021-12-mellow",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-mellow#h-01-yearnvaultsolpull-will-most-certainly-fail",
        "vulnerability": "`YearnVault.sol#pull()` will most certainly fail"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-08-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-01-require-should-be-used-instead-of-assert",
        "vulnerability": "`require()` should be used instead of `assert()`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-phuture#h-02-uniswapv2priceoraclesol-currentcumulativeprices-will-revert-when-pricecumulative-addition-overflow",
        "vulnerability": "`UniswapV2PriceOracle.sol` `currentCumulativePrices()` will revert when `priceCumulative` addition overflow"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-02-chainlinks-latestrounddata-might-return-stale-or-incorrect-results",
        "vulnerability": "Chainlink\u2019s `latestRoundData` might return stale or incorrect results"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-10-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-06-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-09-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-12-++i-costs-less-gas-than-++i--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `++i`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-04-insufficient-input-validation",
        "vulnerability": "Insufficient input validation"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-01-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-01-index-managers-can-rug-user-funds",
        "vulnerability": "Index managers can rug user funds"
    },
    {
        "name": "2022-04-phuture",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-phuture#h-01-indexlogic-an-attacker-can-mint-tokens-for-himself-using-assets-deposited-by-other-users",
        "vulnerability": "`IndexLogic`: An attacker can mint tokens for himself using assets deposited by other users"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-18-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-06-uniswap-dos",
        "vulnerability": "Uniswap DOS"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-02-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-03-unbounded-loops-with-external-calls",
        "vulnerability": "Unbounded loops with external calls"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-03-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-14-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-19-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-10-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-20-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-09-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-07-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-04-result-of-static-calls-should-be-cached-in-stack-variables-rather-than-re-calling-storage-touching-functions",
        "vulnerability": "Result of static calls should be cached in stack variables rather than re-calling storage-touching functions"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-06-duplicate-asset-can-be-added",
        "vulnerability": "Duplicate asset can be added"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-06-variable-names-that-consist-of-all-capital-letters-should-be-reserved-for-constimmutable-variables",
        "vulnerability": "Variable names that consist of all capital letters should be reserved for `const`/`immutable` variables"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-03-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-15-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use `immutable` rather than `constant`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-11-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-03-inactive-skipped-assets-can-be-drained-from-the-index",
        "vulnerability": "Inactive skipped assets can be drained from the index"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-05-asset-manager-can-update-existing-assetaggregator",
        "vulnerability": "Asset Manager can update existing `_assetAggregator`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-04-wrong-requirement-in-reweight-function-managedindexreweightinglogicsol",
        "vulnerability": "Wrong requirement in reweight function (`ManagedIndexReweightingLogic.sol`)"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-01-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-07-tokens-with-fee-on-transfer-are-not-supported",
        "vulnerability": "Tokens with fee on transfer are not supported"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-13-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-04-phuture",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-phuture#m-08-wrong-sharechange-function-vtokensol",
        "vulnerability": "Wrong `shareChange()` function (`vToken.sol`)"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-04-use-bit-shifts-in-an-imutable-variable-rather-than-long-bit-masks-of-a-single-bit--for-readability",
        "vulnerability": "Use bit shifts in an imutable variable rather than long bit masks of a single bit, for readability"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-05-x-=-x-+-y-is-cheaper-than-x-+=-y",
        "vulnerability": "`x = x + y` is cheaper than `x += y`"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-05-registries-should-have-ability-to-have-per-index-overrides",
        "vulnerability": "Registries should have ability to have per-index overrides"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-08-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-07-++ii++-should-be-unchecked{++i}unchecked{++i}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{++i}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-02-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-04-phuture",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-phuture#l-02-incorrect-comment",
        "vulnerability": "Incorrect comment"
    },
    {
        "name": "2022-04-phuture",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-phuture#n-11-use-of-sensitivenon-inclusive-terms",
        "vulnerability": "Use of sensitive/non-inclusive terms"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-17-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-04-phuture",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-phuture#g-16-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2021-05-88mph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-88mph#m-02-unchecking-the-ownership-of-mph-in-function-distributefundingrewards-could-cause-several-critical-functions-to-revert",
        "vulnerability": "Unchecking the ownership of `mph` in function `distributeFundingRewards` could cause several critical functions to revert"
    },
    {
        "name": "2021-05-88mph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-88mph#m-01-incompatability-with-deflationary--fee-on-transfer-tokens",
        "vulnerability": "Incompatability with deflationary / fee-on-transfer tokens"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-realitycards#h-02-can-access-cards-of-other-markets",
        "vulnerability": "Can access cards of other markets"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-realitycards#h-01-unchecked-erc20-transfers-can-cause-lock-up",
        "vulnerability": "Unchecked ERC20 transfers can cause lock up"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-10-missing-call-to-removeoldbids-may-affect-foreclosure",
        "vulnerability": "Missing call to `removeOldBids` may affect foreclosure"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-15-deposits-dont-work-with-fee-on-transfer-tokens",
        "vulnerability": "Deposits don\u2019t work with fee-on transfer tokens"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-08-flows-can-bypass-market-and-global-pause",
        "vulnerability": "Flows can bypass market and global pause"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-03-missing-balancedbooks-modifier-could-result-in-failed-system-insolvency-detection",
        "vulnerability": "Missing `balancedBooks` modifier could result in failed system insolvency detection"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-12-rcnfthubl2safetransferfrom-not-according-to-spec",
        "vulnerability": "`RCNftHubL2.safeTransferFrom` not according to spec"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-02-critical-uberowner-address-changes-should-be-a-two-step-process",
        "vulnerability": "Critical `uberOwner` address changes should be a two-step process"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-realitycards#h-04-anyone-can-affect-deposits-of-any-user-and-turn-the-owner-of-the-token",
        "vulnerability": "Anyone can affect deposits of any user and turn the owner of the token"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-09-deposit-whitelist-enforced-on-msgsender-instead-of-user",
        "vulnerability": "Deposit whitelist enforced on `msg.sender` instead of user"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-11-nft-hub-implementation-deviates-from-erc721-for-transfer-functions",
        "vulnerability": "NFT Hub implementation deviates from ERC721 for transfer functions"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-17-function-foreclosuretimeuser-returns-a-shorter-users-foreclosure-time-than-expected",
        "vulnerability": "Function `foreclosureTimeUser` returns a shorter user\u2019s foreclosure time than expected"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-16-deposits-can-be-denied-by-abusing-maxcontractbalance",
        "vulnerability": "Deposits can be denied by abusing `maxContractBalance`"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-04-minrentaldaydivisor-can-be-different-between-markets-and-treasury",
        "vulnerability": "`minRentalDayDivisor` can be different between markets and treasury"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-13-wrong-calculation-on-collectrentaction",
        "vulnerability": "Wrong calculation on `_collectRentAction`"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-14-market-specific-pause-is-not-checked-for-sponsor",
        "vulnerability": "Market-specific pause is not checked for sponsor"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-realitycards#h-03-anyone-can-call-function-sponsor",
        "vulnerability": "anyone can call function `sponsor`"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-06-possible-locked-ether-funds-issue-in-rcorderbooksol",
        "vulnerability": "Possible locked-ether (funds) Issue in `RCOrderbook.sol`"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-07-maxsumofprices-check-is-broken",
        "vulnerability": "`maxSumOfPrices` check is broken"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-05-rcfactorycreatemarket-does-not-enforce-timestamps-and-timestamps-being-larger-than-timestamps--even-though-proper-functioning-requires-them-to-be-so",
        "vulnerability": "`RCFactory.createMarket()` does not enforce `_timestamps` and `_timestamps` being larger than `_timestamps`, even though proper functioning requires them to be so"
    },
    {
        "name": "2021-06-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-realitycards#m-01-payout-doesnt-fix-isforeclosed-state",
        "vulnerability": "payout doesn\u2019t fix `isForeclosed` state"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-04-msgvalue-is-sent-multipletimes-when-performing-a-swap",
        "vulnerability": "`msg.value` is Sent Multipletimes When Performing a Swap"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-05-cbridge-integration-fails-to-send-native-tokens",
        "vulnerability": "cBridge integration fails to send native tokens"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-08-swap-functions-are-reenterable",
        "vulnerability": "Swap functions are Reenterable"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-13-errors-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Errors: Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-09-for-loops-increments-can-be-unchecked",
        "vulnerability": "For-Loops: Increments can be unchecked"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-03-variables-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "Variables: No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-01-initnxtp-and-inithop-emit-no-event",
        "vulnerability": "`initNXTP` and `initHop` emit no event."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-05-incosistent-return-type-within-diamondloupefacetsol-contract",
        "vulnerability": "Incosistent return type within `DiamondLoupeFacet.sol` contract."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-11-failed-transfer-with-low-level-call-wont-revert",
        "vulnerability": "Failed transfer with low level call won\u2019t revert"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-04-commented-code-in-diamondloupefacetsol",
        "vulnerability": "Commented code in `DiamondLoupeFacet.sol`."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-03-libswap-excess-funds-from-swaps-are-not-returned",
        "vulnerability": "LibSwap: Excess funds from swaps are not returned"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-07-for-loops-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "For-Loops: An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-06-no-events-when-approvingblocking-a-dex-contract",
        "vulnerability": "No events when approving/blocking a DEX contract."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-lifinance#h-01-reliance-on-lifidatareceivingassetid-can-cause-loss-of-funds",
        "vulnerability": "Reliance on `lifiData.receivingAssetId` can cause loss of funds"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-10-arithmetics-unchecked-blocks-for-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Arithmetics: `unchecked` blocks for arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-03-implementation-of-startbridgetokensviacbridge-has-same-functionality-but-deviates-from-conventions-set-in-startbridgetokensviahop-and-startbridgetokensvianxt",
        "vulnerability": "Implementation of `startBridgeTokensViaCBridge` has same functionality but deviates from conventions set in `startBridgeTokensViaHop` and `startBridgeTokensViaNXT`"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-lifinance#l-03-no-zero-address-check-for-adding-dex-contract-in-adddex--batchadddex--removedex-and-batchremovedex",
        "vulnerability": "No zero address check for adding DEX contract in `addDex`, `batchAddDex`, `removeDex` and `batchRemoveDex`."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-lifinance#l-04-unchecked-transfer-in-withdrawfacetsol",
        "vulnerability": "Unchecked `transfer` in `WithdrawFacet.sol`"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-lifinance#n-02-minor-typo-in-comment-in-line-31-conatains---contains",
        "vulnerability": "Minor typo in comment in line 31. Conatains - Contains."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-02-anyone-can-get-swaps-for-free-given-certain-conditions-in-swap",
        "vulnerability": "Anyone can get swaps for free given certain conditions in `swap`."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-lifinance#h-02-all-swapping-functions-lack-checks-for-returned-tokens",
        "vulnerability": "All swapping functions lack checks for returned tokens"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-05-comparisons-boolean-comparisons",
        "vulnerability": "Comparisons: Boolean comparisons"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-12-errors-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Errors: Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-lifinance#l-01-initnxtp-can-be-initialized-multiple-times",
        "vulnerability": "`initNXTP` can be initialized multiple times."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-07-erc20-bridging-functions-do-not-revert-on-non-zero-msgvalue",
        "vulnerability": "ERC20 bridging functions do not revert on non-zero msg.value"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-08-for-loops-++i-costs-less-gas-compared-to-i++",
        "vulnerability": "For-Loops: `++i` costs less gas compared to `i++`"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-01-storage-help-the-optimizer-by-declaring-a-storage-variable-instead-of-repeatedly-fetching-a-value-in-storage-for-reading-and-writing",
        "vulnerability": "Storage: Help the optimizer by declaring a storage variable instead of repeatedly fetching a value in storage (for reading and writing)"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-06-dexmanagerfacet-batchremovedex-removes-first-dex-only",
        "vulnerability": "DexManagerFacet: batchRemoveDex() removes first dex only"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-04-variables-\u201cconstants\u201d-expressions-are-expressions--not-constants",
        "vulnerability": "Variables: \u201cconstants\u201d expressions are expressions, not constants"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-01-anyswapfacet-can-be-exploited-to-approve-arbitrary-tokens",
        "vulnerability": "`AnyswapFacet` can be exploited to approve arbitrary tokens."
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-13-withdrawfacets-withdraw-calls-native-payabletransfer--which-can-be-unusable-for-diamondstorage-owner-contract",
        "vulnerability": "WithdrawFacet\u2019s `withdraw` calls native `payable.transfer`, which can be unusable for DiamondStorage owner contract"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-02-storage-emitting-storage-values",
        "vulnerability": "Storage: Emitting storage values"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-10-infinite-approval-to-an-arbitrary-address-can-be-used-to-steal-all-the-funds-from-the-contract",
        "vulnerability": "Infinite approval to an arbitrary address can be used to steal all the funds from the contract"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-06-comparisons->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "Comparisons: `> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-lifinance#g-11-visibility-public-functions-to-external",
        "vulnerability": "Visibility: Public functions to external"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-12-reputation-risks-with-contractowner",
        "vulnerability": "Reputation Risks with `contractOwner`"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-lifinance#m-09-should-prevent-users-from-sending-more-native-tokens-in-the-startbridgetokensviacbridge-function",
        "vulnerability": "Should prevent users from sending more native tokens in the `startBridgeTokensViaCBridge` function"
    },
    {
        "name": "2022-03-lifinance",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-lifinance#l-02-no-zero-value-checks-for-both-nxtpdataamount-and-msgvalue-in-startbridgetokensvianxtp",
        "vulnerability": "No zero value checks for both `_nxtpData.amount` and `msg.value` in `startBridgeTokensViaNXTP`."
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-09-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-10-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-06-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-04-move-eth-constant-to-child-contract",
        "vulnerability": "Move `ETH` constant to child contract"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-sturdy#h-02-the-check-for-value-transfer-success-is-made-after-the-return-statement-in-withdrawfromyieldpool-of-lidovault",
        "vulnerability": "The check for value transfer success is made after the return statement in `_withdrawFromYieldPool` of `LidoVault`"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-01-add-require-for-asset-address-checks-before-doing-the-exchange",
        "vulnerability": "Add `require()` for asset address checks before doing the exchange"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-13-consider-two-phase-ownership-transfer",
        "vulnerability": "Consider two-phase ownership transfer"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-07-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-01-mistaken-null-values-cause-distributeyield-to-revert",
        "vulnerability": "Mistaken null values cause `distributeYield()` to revert"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-01-possible-lost-msgvalue",
        "vulnerability": "Possible lost msg.value"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-07-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-03-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-02-cant-remove-old-assets",
        "vulnerability": "Can\u2019t remove old assets"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-02-add-an-unregisterasset-function",
        "vulnerability": "Add an `unregisterAsset()` function"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-14-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-07-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-sturdy#h-01-hard-coded-slippage-may-freeze-user-funds-during-market-turbulence",
        "vulnerability": "Hard-coded slippage may freeze user funds during market turbulence"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-05-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-12-remove-commented-out-code",
        "vulnerability": "Remove commented out code"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-09-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-08-variable-names-that-consist-of-all-capital-letters-should-be-reserved-for-constimmutable-variables",
        "vulnerability": "Variable names that consist of all capital letters should be reserved for `const`/`immutable` variables"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-03-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-06-yield-can-be-unfairly-divided-because-of-mevjust-in-time-stablecoin-deposits",
        "vulnerability": "Yield can be unfairly divided because of MEV/Just-in-time stablecoin deposits"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-01-override-function-arguments-that-are-unused-should-have-the-variable-name-removed-or-commented-out-to-avoid-compiler-warnings",
        "vulnerability": "`override` function arguments that are unused should have the variable name removed or commented out to avoid compiler warnings"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-10-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-11-internal-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "`internal` functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-03-processyield-and-distributeyield-may-run-out-of-gas-and-revert-due-to-long-list-of-extra-rewardsyields",
        "vulnerability": "`processYield()` and `distributeYield()` may run out of gas and revert due to long list of extra rewards/yields"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-05-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-13-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-15-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-06-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-03-missing-checks-for-approves-return-status",
        "vulnerability": "Missing checks for `approve()`\u2019s return status"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-17-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-02-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-08-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-16-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-04-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-05-unsafe-casts-and-usage-of-ierc20detailed",
        "vulnerability": "Unsafe casts and usage of `IERC20Detailed`"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-06-unused-receive-function-will-lock-ether-in-contract",
        "vulnerability": "Unused `receive()` function will lock Ether in contract"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-11-consider-allowing-the-passing-of-a-referral-code",
        "vulnerability": "Consider allowing the passing of a referral code"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-12-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-sturdy#n-04-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-04-convexcurvelpvaults-transferyield-can-become-stuck-with-zero-reward-transfer",
        "vulnerability": "ConvexCurveLPVault\u2019s `_transferYield` can become stuck with zero reward transfer"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-05-withdrawing-eth-collateral-with-max-uint256-amount-value-reverts-transaction",
        "vulnerability": "Withdrawing ETH collateral with max uint256 amount value reverts transaction"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-sturdy#g-08-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-sturdy#l-09-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-05-sturdy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-sturdy#m-02-uniswapfee-is-hardcoded-which-will-lead-to-significant-losses-compared-to-optimal-routing",
        "vulnerability": "`UNISWAP_FEE` is hardcoded which will lead to significant losses compared to optimal routing"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-10-rewards-arent-updated-before-users-balance-change-in-gauges-withdrawtoken",
        "vulnerability": "Rewards aren\u2019t updated before user\u2019s balance change in Gauge\u2019s `withdrawToken`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-09-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-02-votingescrows-merge-and-withdraw-arent-available-for-approved-users",
        "vulnerability": "`VotingEscrow`\u2019s merge and withdraw aren\u2019t available for approved users"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-06-multiple-accesses-of-a-mapping-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping should use a local variable cache"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-velodrome#l-03-require-should-be-used-instead-of-assert",
        "vulnerability": "`require()` should be used instead of `assert()`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-20-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-05-bribesol-is-not-meant-to-handle-fee-on-transfer-tokens",
        "vulnerability": "`Bribe.sol` is not meant to handle fee-on-transfer tokens"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-14-wrong-reward-distribution-in-bribe-because-deliverreward-wont-set-tokenrewardsperepoch[token][epochstart]-to-0",
        "vulnerability": "Wrong reward distribution in Bribe because `deliverReward()` won\u2019t set `tokenRewardsPerEpoch[token][epochStart]` to 0"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-velodrome#l-02-front-runable-initializer",
        "vulnerability": "Front-runable initializer"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-19-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "`abi.encode()` is less efficient than `abi.encodePacked()`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-06-attacker-can-block-layerzero-channel",
        "vulnerability": "Attacker can block LayerZero channel"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-03-alter-velo-receptions-computation",
        "vulnerability": "Alter velo receptions computation"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-03-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-14-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-17-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing",
        "vulnerability": "Not using the named return variables anywhere in the function is confusing"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-15-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-13-bribe-rewards-not-collected-in-current-period-will-be-lost-forever",
        "vulnerability": "Bribe Rewards Not Collected In Current Period Will Be Lost Forever"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-21-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-01-gauge-set-can-be-front-run-if-bribe-and-gauge-constructors-arent-run-atomically",
        "vulnerability": "Gauge set can be front run if bribe and gauge constructors aren\u2019t run atomically"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-09-owners-delegates-should-be-decreased-in-burn",
        "vulnerability": "Owner\u2019s delegates should be decreased in `_burn()`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-07-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-02-velogovernor-proposalnumerator-and-team-are-updated-by-team--not-governance",
        "vulnerability": "`VeloGovernor`: `proposalNumerator` and team are updated by team, not governance"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-15-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-13-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-06-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-13-variable-names-that-consist-of-all-capital-letters-should-be-reserved-for-constantimmutable-variables",
        "vulnerability": "Variable names that consist of all capital letters should be reserved for `constant`/`immutable` variables"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-10-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-03-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-05-voting-overwrites-checkpointvoted-in-last-checkpoint--so-users-can-just-vote-right-before-claiming-rewards",
        "vulnerability": "Voting overwrites `checkpoint.voted` in last checkpoint, so users can just vote right before claiming rewards"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-08-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-velodrome#l-01-mathmax<x>-0-used-with-int-cast-to-uint",
        "vulnerability": "`Math.max(<x>,0)` used with `int` cast to `uint`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-12-rewards-can-be-locked-in-bribe-contract-because-distributing-them-depends-on-base-token-reward-amount-and-gaugedeliverbribes-is-not-always-called-by-voterdistribute",
        "vulnerability": "Rewards can be locked in Bribe contract because distributing them depends on base token reward amount and `Gauge.deliverBribes()` is not always called by `Voter.distribute()`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-05-avoid-the-use-of-sensitive-terms",
        "vulnerability": "Avoid the use of sensitive terms"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-07-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-14-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-23-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once",
        "vulnerability": "Stack variable used as a cheaper cache for a state variable is only used once"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-24-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-01-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-16-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-01-users-can-get-unlimited-votes",
        "vulnerability": "Users can get unlimited votes"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-11-griefing-attack-by-extending-the-reward-duration",
        "vulnerability": "Griefing Attack By Extending The Reward Duration"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-15-wrong-calculation-for-the-new-rewardrate[token]-can-cause-some-of-the-late-users-can-not-get-their-rewards",
        "vulnerability": "Wrong calculation for the new `rewardRate[token]` can cause some of the late users can not get their rewards"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-04-malicious-user-can-populate-rewards-array-with-tokens-of-their-interest-reaching-limits-of-maxrewardtokens",
        "vulnerability": "Malicious user can populate `rewards` array with tokens of their interest reaching limits of `MAX_REWARD_TOKENS`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-01-approvemax-variable-causes-problems",
        "vulnerability": "`approveMax` variable causes problems"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-02-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-11-large-multiples-of-ten-should-use-scientific-notation-eg-1e6-rather-than-decimal-literals-eg-1000000--for-readability",
        "vulnerability": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-03-user-rewards-stop-accruing-after-any-writecheckpoint-calling-action",
        "vulnerability": "User rewards stop accruing after any `_writeCheckpoint` calling action"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-08-temporary-dos-by-calling-notifyrewardamount-in-bribegauge-with-malicious-tokens",
        "vulnerability": "Temporary DOS by calling `notifyRewardAmount()` in Bribe/Gauge with malicious tokens"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-06-voting-tokens-may-be-lost-when-given-to-non-eoa-accounts",
        "vulnerability": "Voting tokens may be lost when given to non-EOA accounts"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-10-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-velodrome#h-04-bribe-rewards-struck-in-contract-if-deposited-during-first-epoch",
        "vulnerability": "Bribe Rewards Struck In Contract If Deposited During First Epoch"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-09-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-12-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once",
        "vulnerability": "`keccak256()` should only need to be called on a specific string literal once"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-16-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-04-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-25-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-08-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-17-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-16-wrong-domaintypehash-definition",
        "vulnerability": "Wrong `DOMAIN_TYPEHASH` definition"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-18-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-velodrome#l-05-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-velodrome#l-04-safemint-should-be-used-rather-than-mint-wherever-possible",
        "vulnerability": "`_safeMint()` should be used rather than `_mint()` wherever possible"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-04-use-two-phase-ownership-transfers",
        "vulnerability": "Use two-phase ownership transfers"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-07-redemptionsender-should-estimate-fees-to-prevent-failed-transactions",
        "vulnerability": "`RedemptionSender` should estimate fees to prevent failed transactions"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-11-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-velodrome#m-17-weve-ftm-may-be-lost-forever-if-redemption-process-is-failed",
        "vulnerability": "WeVE (FTM) may be lost forever if redemption process is failed"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-02-only-a-billion-checkpoints-available",
        "vulnerability": "Only a billion checkpoints available"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-velodrome#n-12-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-velodrome",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-velodrome#g-22-division-by-two-should-use-bit-shifting",
        "vulnerability": "Division by two should use bit shifting"
    },
    {
        "name": "2021-07-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-connext#h-03-router-liquidity-on-receiving-chain-can-be-double-dipped-by-the-user",
        "vulnerability": "Router liquidity on receiving chain can be double-dipped by the user"
    },
    {
        "name": "2021-07-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-connext#h-01-anyone-can-arbitrarily-add-router-liquidity",
        "vulnerability": "Anyone can arbitrarily add router liquidity"
    },
    {
        "name": "2021-07-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-connext#h-05-approval-is-not-reset-if-the-call-to-ifulfillhelper-fails",
        "vulnerability": "`Approval` is not reset if the call to `IFulfillHelper` fails"
    },
    {
        "name": "2021-07-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-connext#m-02-malicious-router-can-block-cross-chain-transfers",
        "vulnerability": "Malicious router can block cross-chain-transfers"
    },
    {
        "name": "2021-07-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-connext#m-01-signatures-use-only-tx-id-instead-of-entire-digest",
        "vulnerability": "Signatures use only tx ID instead of entire digest"
    },
    {
        "name": "2021-07-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-connext#h-02-activetransactionblocks-are-vulnerable-to-ddos-attacks",
        "vulnerability": "`activeTransactionBlocks` are vulnerable to DDoS attacks"
    },
    {
        "name": "2021-07-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-connext#h-04-expired-transfers-will-lock-user-funds-on-the-sending-chain",
        "vulnerability": "Expired transfers will lock user funds on the sending chain"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-05-use-of-deprecated-chainlink-function-latestanswer",
        "vulnerability": "Use of deprecated Chainlink function `latestAnswer`"
    },
    {
        "name": "2021-06-gro",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-gro#h-02-buoy3poolsafetycheck-is-not-precise-and-has-some-assumptions",
        "vulnerability": "`Buoy3Pool.safetyCheck` is not precise and has some assumptions"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-01-usage-of-deprecated-chainlink-api-in-buoy3pool",
        "vulnerability": "Usage of deprecated ChainLink API in `Buoy3Pool`"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-02-safe-addresses-can-only-be-added-but-not-removed",
        "vulnerability": "Safe addresses can only be added but not removed"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-04-flash-loan-risk-mitigation-is-optional-and-not-robust-enough",
        "vulnerability": "Flash loan risk mitigation is optional and not robust enough"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-06-early-user-can-break-minting",
        "vulnerability": "Early user can break minting"
    },
    {
        "name": "2021-06-gro",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-gro#h-01-implicit-underflows",
        "vulnerability": "implicit underflows"
    },
    {
        "name": "2021-06-gro",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-gro#m-03-basevaultadaptor-assumes-shareprice-is-always-in-underlying-decimals",
        "vulnerability": "`BaseVaultAdaptor` assumes `sharePrice` is always in underlying decimals"
    },
    {
        "name": "2021-06-gro",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-gro#h-04-sortvaultsbydelta-doesnt-work-as-expected",
        "vulnerability": "`sortVaultsByDelta` doesn\u2019t work as expected"
    },
    {
        "name": "2021-06-gro",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-gro#h-03-incorrect-use-of-operator-leads-to-arbitrary-minting-of-gvt-tokens",
        "vulnerability": "Incorrect use of operator leads to arbitrary minting of GVT tokens"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-01-replace-\u201ceth\u201d-with-\u201cnative-token\u201d",
        "vulnerability": "Replace \u201cETH\u201d with \u201cNative token\u201d"
    },
    {
        "name": "2023-01-opensea",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-opensea#m-01-incorrect-encoding-of-order-hashes",
        "vulnerability": "Incorrect Encoding of Order Hashes"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-03-fragile-check-for-contract-order-type",
        "vulnerability": "Fragile check for contract order type"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-07-typos-in-comments",
        "vulnerability": "Typos in comments"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-08-duplicated-constants",
        "vulnerability": "Duplicated constants"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-01-using-xor--and-or-|-bitwise-equivalents",
        "vulnerability": "Using XOR (`^`) and OR (`|`) bitwise equivalents"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-02-extract-or-use-named-constants",
        "vulnerability": "Extract or use named constants"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-05-custom-comment-typos",
        "vulnerability": "Custom comment typos"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-04-inconsistent-use-of-hex-vs-decimal-values",
        "vulnerability": "Inconsistent use of hex vs. decimal values"
    },
    {
        "name": "2023-01-opensea",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-opensea#n-06-almostoneword-is-confusing",
        "vulnerability": "`AlmostOneWord` is confusing"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-05-optimized-operations",
        "vulnerability": "Optimized operations"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-04-swap-conditions-for-a-better-happy-path",
        "vulnerability": "Swap conditions for a better happy path"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-03-using-a-positive-conditional-flow-to-save-a-not-opcode",
        "vulnerability": "Using a positive conditional flow to save a NOT opcode"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-02-shift-left-by-5-instead-of-multiplying-by-32",
        "vulnerability": "Shift left by 5 instead of multiplying by 32"
    },
    {
        "name": "2023-01-opensea",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-opensea#g-06-pre-decrements-cost-less-than-post-decrements",
        "vulnerability": "Pre-decrements cost less than post-decrements"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-03-it-is-clearly-stated-that-timelock-is-used--but-this-does-not-happen-in-the-codes",
        "vulnerability": "It is clearly stated that timelock is used, but this does not happen in the codes"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-04-users-can-avoid-paying-any-fees-when-using-erc20enabledlooksrareaggregator-for-seaport",
        "vulnerability": "Users can avoid paying any fees when using ERC20EnabledLooksRareAggregator for Seaport"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-01-the-executenonatomicorders-function-in-seaportproxysol-may-fail-unexpectedly",
        "vulnerability": "The `_executeNonAtomicOrders` function in SeaportProxy.sol may fail unexpectedly"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-02-too-much-fee-charged-when-seaport-is-partially-filled",
        "vulnerability": "Too much fee charged when Seaport is partially filled"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-06-public-to-all-funds-escape",
        "vulnerability": "Public to all funds escape"
    },
    {
        "name": "2022-11-looksrare",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-looksrare#m-05-call-opcodes-return-value-not-checked",
        "vulnerability": "`call` opcode\u2019s return value not checked."
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-13-dishonest-stakers-can-siphon-rewards-from-xtoken-holders-through-the-deposit-function-in-nftxinventorystaking",
        "vulnerability": "Dishonest Stakers Can Siphon Rewards From `xToken` Holders Through The `deposit` Function In `NFTXInventoryStaking`"
    },
    {
        "name": "2021-12-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-nftx#h-02-the-return-value-of-the-sendforreceiver-function-is-not-set--causing-the-receiver-to-receive-more-fees",
        "vulnerability": "The return value of the _sendForReceiver function is not set, causing the receiver to receive more fees"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-04-nftxstakingzap-and-nftxmarketplacezaps-transferfromerc721-transfer-cryptokitties-to-the-wrong-address",
        "vulnerability": "NFTXStakingZap and NFTXMarketplaceZap\u2019s transferFromERC721 transfer Cryptokitties to the wrong address"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-11-nftxvaultfactoryupgradeable-implementation-can-be-replaced-in-production-breaking-the-system",
        "vulnerability": "NFTXVaultFactoryUpgradeable implementation can be replaced in production breaking the system"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-09-bypass-zap-timelock",
        "vulnerability": "Bypass zap timelock"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-16-malicious-receiver-can-make-distribute-function-denial-of-service",
        "vulnerability": "Malicious receiver can make distribute function denial of service"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-12-buyandswap1155weth-does-not-work-as-intended",
        "vulnerability": "`buyAndSwap1155WETH` Does Not Work As Intended"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-02-nftxsimplefeedistributoraddreceiver-failure-to-check-for-existing-receiver",
        "vulnerability": "NFTXSimpleFeeDistributor#addReceiver: Failure to check for existing receiver"
    },
    {
        "name": "2021-12-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-nftx#h-01-buyandswap1155weth-function-may-cause-loss-of-user-assets",
        "vulnerability": "buyAndSwap1155WETH() function may cause loss of user assets"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-06-xtoken-approvals-allow-spenders-to-spend-more-tokens",
        "vulnerability": "`xToken` Approvals Allow Spenders To Spend More Tokens"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-15-no-access-control-on-assignfees-function-in-nftxvaultfactoryupgradeable-contract",
        "vulnerability": "No access control on assignFees() function in NFTXVaultFactoryUpgradeable contract"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-14-return-variable-can-remain-unassigned-in-sendforreceiver",
        "vulnerability": "Return variable can remain unassigned in _sendForReceiver"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-17-transfer-return-value-is-ignored",
        "vulnerability": "transfer return value is ignored"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-05-pool-manager-can-frontrun-fees-to-100%-and-use-it-to-steal-the-value-from-users",
        "vulnerability": "Pool Manager can frontrun fees to 100% and use it to steal the value from users"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-01-missing-non-reentrancy-modifier",
        "vulnerability": "Missing non reentrancy modifier"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-03-nftxmarketplacezapsolbuyand***-should-return-unused-wetheth-back-to-msgsender-instead-of-to",
        "vulnerability": "`NFTXMarketplaceZap.sol#buyAnd***()` should return unused weth/eth back to `msg.sender` instead of `to`"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-10-nftxsimplefeedistributorsendforreceiver-doesnt-return-success-if-receiver-is-not-a-contract",
        "vulnerability": "NFTXSimpleFeeDistributor._sendForReceiver doesn\u2019t return success if receiver is not a contract"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-07-rewards-can-be-stolen",
        "vulnerability": "Rewards can be stolen"
    },
    {
        "name": "2021-12-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-nftx#m-08-low-level-call-return-value-not-checked",
        "vulnerability": "Low-level call return value not checked"
    },
    {
        "name": "2021-12-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-nftx#h-03-a-vault-can-be-locked-from-marketplacezap-and-stakingzap",
        "vulnerability": "A vault can be locked from MarketplaceZap and StakingZap"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-14-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-01-cheap-contract-deployment-through-clones",
        "vulnerability": "Cheap Contract Deployment Through Clones"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-07-ordercombinersol---maximumfulfilled-costs-less-gas-compared-to-maximumfulfilled--",
        "vulnerability": "`OrderCombiner.sol`: `--maximumFulfilled` costs less gas compared to `maximumFulfilled--`"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-13-increments-can-be-unchecked",
        "vulnerability": "Increments can be unchecked"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-05-ordervalidatorsolvalidatebasicorderandupdatestatus-avoid-an-unnecessary-sstore-by-not-writing-a-default-value",
        "vulnerability": "`OrderValidator.sol#_validateBasicOrderAndUpdateStatus()`: avoid an unnecessary SSTORE by not writing a default value"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-15-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "`abi.encode()` is less efficient than `abi.encodePacked()`"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-11-bytes-constants-are-more-efficient-than-string-constants",
        "vulnerability": "Bytes constants are more efficient than string constants"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-08-fulfillmentappliersolapplyfulfillment-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "`FulfillmentApplier.sol#_applyFulfillment()`: Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#h-02-aggregatevalidfulfillmentofferitems-can-be-tricked-to-accept-invalid-inputs",
        "vulnerability": "`_aggregateValidFulfillmentOfferItems()` can be tricked to accept invalid inputs"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-12-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-10-or-conditions-cost-less-than-their-equivalent-and-conditions-\u201cnotsomething-is-false\u201d-costs-less-than-\u201ceverything-is-true\u201d",
        "vulnerability": "`OR` conditions cost less than their equivalent `AND` conditions (\u201cNOT(something is false)\u201d costs less than \u201ceverything is true\u201d)"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-02-conduitcontrollersolcreateconduit-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "`ConduitController.sol#createConduit()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-09-reference-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "`/reference`: Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#m-02-wrong-items-length-assertion-in-basic-order",
        "vulnerability": "Wrong items length assertion in basic order"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-04-ordervalidatorsolvalidatebasicorderandupdatestatus-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "`OrderValidator.sol#_validateBasicOrderAndUpdateStatus()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#h-01-truncation-in-ordervalidator-can-lead-to-resetting-the-fill-and-selling-more-tokens",
        "vulnerability": "Truncation in `OrderValidator` can lead to resetting the fill and selling more tokens"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-06-ordercombinersol-++totalfilteredexecutions-costs-less-gas-compared-to-totalfilteredexecutions-+=-1",
        "vulnerability": "`OrderCombiner.sol`: `++totalFilteredExecutions` costs less gas compared to `totalFilteredExecutions += 1`"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#g-03-conduitcontrollersolacceptownership-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "`ConduitController.sol#acceptOwnership()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-05-opensea-seaport",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-opensea-seaport#m-01-merkle-tree-criteria-can-be-resolved-by-wrong-tokenids",
        "vulnerability": "Merkle Tree criteria can be resolved by wrong tokenIDs"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-02-emitting-storage-values-instead-of-the-memory-one",
        "vulnerability": "Emitting storage values instead of the memory one."
    },
    {
        "name": "2022-12-forgeries",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-forgeries#m-02-vrfnftrandomdraw-admin-can-prevent-created-or-started-raffle-from-taking-place",
        "vulnerability": "VRFNFTRandomDraw admin can prevent created or started raffle from taking place"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-10-drawingtokenendid-should-be-inclusive-or-altered-to-a-range",
        "vulnerability": "`drawingTokenEndId` should be inclusive or altered to a range"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-forgeries#l-03-nfts-are-not-guaranteed-to-have-sequential-ids",
        "vulnerability": "NFTs are not guaranteed to have sequential IDs"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-04-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function",
        "vulnerability": "The result of a function call should be cached rather than re-calling the function"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-04-uppercase-immutable-variables",
        "vulnerability": "Uppercase immutable variables"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-forgeries#h-02-draw-organizer-can-rig-the-draw-to-favor-certain-participants-such-as-their-own-account",
        "vulnerability": "Draw organizer can rig the draw to favor certain participants such as their own account."
    },
    {
        "name": "2022-12-forgeries",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-forgeries#l-01-redraw-should-be-called-by-anyone",
        "vulnerability": "`redraw()` should be called by anyone"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-06-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas",
        "vulnerability": "A modifier used only once and not being inherited should be inlined to save gas"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-01-pack-structs-by-putting-data-types-in-ascending-size-we-can-save-up-to-~6k-gas",
        "vulnerability": "Pack structs by putting data types in ascending size (We can save up to ~6k gas)"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-05-empty-blocks-should-be-avoided",
        "vulnerability": "Empty blocks should be avoided"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-01-getrequestdetails-should-include-the-tokenid",
        "vulnerability": "`getRequestDetails()` should include the tokenid"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-forgeries#h-01-admin-does-not-have-to-wait-to-call-lastresorttimelockownerclaimnft",
        "vulnerability": "Admin does not have to wait to call `lastResortTimelockOwnerClaimNFT()`"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-07-contracts-that-extend-interfaces-should-override-its-methods",
        "vulnerability": "Contracts that extend interfaces should override its methods"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-forgeries#m-03-protocol-safeguards-for-time-durations-are-skewed-by-a-factor-of-7-protocol-may-potentially-lock-nft-for-period-of-7-years",
        "vulnerability": "Protocol safeguards for time durations are skewed by a factor of 7. Protocol may potentially lock NFT for period of 7 years."
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-03-use-constants-instead-of-immutable-variables",
        "vulnerability": "Use constants instead of immutable variables"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-08-requestroll-after-confirming-that-the-raffle-is-viable",
        "vulnerability": "`_requestRoll()` after confirming that the raffle is viable"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-06-missing-natspec",
        "vulnerability": "Missing _NatSpec_"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-02-avoid-setting-time-variables-manually",
        "vulnerability": "Avoid setting time variables manually"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-11-fulfillrandomwords-must-not-revert",
        "vulnerability": "`fulfillRandomWords` must not revert"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-07-caching-global-variables-is-more-expensive-than-using-the-actual-variable-use-msgsender-instead-of-caching-it",
        "vulnerability": "Caching global variables is more expensive than using the actual variable (use msg.sender instead of caching it)"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-09-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-08-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-forgeries#m-01-raffle-creator-might-not-start-raffle-draw",
        "vulnerability": "Raffle creator might not start raffle draw"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-forgeries#n-09-ierc721enumerableupgradeable-may-lead-to-false-assumptions",
        "vulnerability": "`IERC721EnumerableUpgradeable` may lead to false assumptions"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-05-using-unchecked-blocks-to-save-gas",
        "vulnerability": "Using unchecked blocks to save gas"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-forgeries#l-02-an-owner-can-resign-and-lead-to-locked-nfts",
        "vulnerability": "An owner can resign and lead to locked NFTs"
    },
    {
        "name": "2022-12-forgeries",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-forgeries#g-03-cache-storage-values-in-memory-to-minimize-sloads",
        "vulnerability": "Cache storage values in memory to minimize SLOADs"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-10-vestingsetallocations-l50-and-l52-should-be-unchecked-due-to-l49",
        "vulnerability": "Vesting.setAllocations(): L50 AND L52 SHOULD BE UNCHECKED DUE TO L49"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-01-minisalespurchase-should-use-memory-instead-of-storage-variable",
        "vulnerability": "MiniSales.purchase(): SHOULD USE MEMORY INSTEAD OF STORAGE VARIABLE"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-12-vestingclaim->-0-is-less-efficient-than-!=-0-for-unsigned-integers",
        "vulnerability": "Vesting.claim(): > 0 IS LESS EFFICIENT THAN != 0 FOR UNSIGNED INTEGERS"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-09-withdrawerc20withdrawerc20--owner-should-get-cached",
        "vulnerability": "WithdrawERC20.WithdrawERC20 : owner() SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-13-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "AN ARRAY\u2019S LENGTH SHOULD BE CACHED TO SAVE GAS IN FOR-LOOPS"
    },
    {
        "name": "2022-08-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-prepo#m-04-fixed-in-[pr356]httpsgithubcomprepo-ioprepo-monorepopull356-adding-uint256[50]-private-gap-in-abstract-upgradeable-smart-contracts-to-ensure-no-storage-shifting-down-storage-in-the-inheritance-chain-of-the-inheriting-contracts",
        "vulnerability": "Fixed in [PR#356](https://github.com/prepo-io/prepo-monorepo/pull/356). Adding uint256[50] private __gap in abstract upgradeable smart contracts to ensure no storage shifting down storage in the inheritance chain of the inheriting contracts."
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-05-blocklisttransferhookhook-blocklist-should-get-cached",
        "vulnerability": "BlocklistTransferHook.hook(): _blocklist SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-02-minisalespurchase-purchasehook-should-get-cached",
        "vulnerability": "MiniSales.purchase(): _purchaseHook SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-07-purchasehookhookerc1155-tokenshop-should-get-cached",
        "vulnerability": "PurchaseHook.hookERC1155(): _tokenShop SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-03-tokenshoppurchase-purchasehook-should-get-cached",
        "vulnerability": "TokenShop.purchase(): _purchaseHook SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-08-vestingclaim-token-should-get-cached",
        "vulnerability": "Vesting.claim(): _token SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-prepo#m-01-acknowledged-only-security-compliant-tokens-such-as-usdc-and-ppo-are-currently-planned-to-be-used-in-the-contracts",
        "vulnerability": "Acknowledged. Only security-compliant tokens such as USDC and PPO are currently planned to be used in the contracts."
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-04-tokenshoppurchase-contracttoidtoprice-should-get-cached",
        "vulnerability": "TokenShop.purchase(): _contractToIdToPrice SHOULD GET CACHED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-prepo#m-03-fixed-in-[pr352]httpsgithubcomprepo-ioprepo-monorepopull352-removing-all-write-methods-from-safeownablecaller-and-safeaccesscontrolenumerablecaller-to-ensure-that-the-inheriting-contracts-need-to-override-all-write-methods-this-will-avoid-missing-out-of-access-control-on-some-critical-write-methods",
        "vulnerability": "Fixed in [PR#352](https://github.com/prepo-io/prepo-monorepo/pull/352). Removing all write methods from SafeOwnableCaller and SafeAccessControlEnumerableCaller to ensure that the inheriting contracts need to override all write methods. This will avoid missing out of access control on some critical write methods."
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-11-increments-can-be-unchecked",
        "vulnerability": "INCREMENTS CAN BE UNCHECKED"
    },
    {
        "name": "2022-08-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-prepo#m-02-fixed-in-[pr355]httpsgithubcomprepo-ioprepo-monorepopull355-adding-purchaseprices-parameter-in-purchase-to-avoid-race-condition-and-ensure-that-tokens-are-not-purchased-at-higher-prices-than-the-user-intended",
        "vulnerability": "Fixed in [PR#355](https://github.com/prepo-io/prepo-monorepo/pull/355). Adding purchasePrices parameter in purchase() to avoid race condition and ensure that tokens are not purchased at higher prices than the user intended."
    },
    {
        "name": "2022-08-prepo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-prepo#g-06-purchasehookhookerc721-tokenshop-should-get-cached",
        "vulnerability": "PurchaseHook.hookERC721(): _tokenShop SHOULD GET CACHED"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-08-auction-bonder-can-steal-user-funds-if-bond-block-is-high-enough",
        "vulnerability": "Auction bonder can steal user funds if bond block is high enough"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-03-setting-factorybondpercentdiv-to-zero-cause-denial-of-service-in-auctionbondforrebalance",
        "vulnerability": "Setting `Factory.bondPercentDiv` to zero cause Denial of Service in `Auction.bondForRebalance()`"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-01-basketsolmint-malfunction-due-to-extra-nonreentrant-modifier",
        "vulnerability": "`Basket.sol#mint()` Malfunction due to extra `nonReentrant` modifier"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#h-01-bonding-mechanism-allows-malicious-user-to-dos-auctions",
        "vulnerability": "Bonding mechanism allows malicious user to DOS auctions"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-04-fee-on-transfer-tokens-do-not-work-within-the-protocol",
        "vulnerability": "Fee on transfer tokens do not work within the protocol"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-07-basket-becomes-unusable-if-everybody-burns-their-shares",
        "vulnerability": "Basket becomes unusable if everybody burns their shares"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-02-setting-factoryauctiondecrement-to-zero-causes-denial-of-service-in-auctionsettleauction",
        "vulnerability": "Setting `Factory.auctionDecrement` to zero causes Denial of Service in `Auction.settleAuction()`"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-06-validations",
        "vulnerability": "Validations"
    },
    {
        "name": "2021-10-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-defiprotocol#m-05-createbasket-re-entrancy",
        "vulnerability": "createBasket re-entrancy"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-03-conviction-totals-not-updated-during-tokenization",
        "vulnerability": "Conviction totals not updated during tokenization"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-07-erc20convictionscoreupdateconvictionscore-uses-stale-credit-score-for-governancedelta",
        "vulnerability": "`ERC20ConvictionScore._updateConvictionScore` uses stale credit score for `governanceDelta`"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-08-erc20convictionscore-allows-transfers-to-special-totalgovernancescore-address",
        "vulnerability": "`ERC20ConvictionScore` allows transfers to special `TOTAL_GOVERNANCE_SCORE` address"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-12-erc20convictionscoreacquireconviction-implements-wrong-governance-checks",
        "vulnerability": "`ERC20ConvictionScore.acquireConviction` implements wrong governance checks"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-11-the-variable-fshareratio-is-vulnerable-to-manipulation-by-flash-minting-and-burning",
        "vulnerability": "The variable `fShareRatio` is vulnerable to manipulation by flash minting and burning"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-01-conviction-scoring-fails-to-initialize-and-bootstrap",
        "vulnerability": "Conviction scoring fails to initialize and bootstrap"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-06-incorrect-type-conversion-in-the-contract-abc-makes-users-unable-to-burn-fsd-tokens",
        "vulnerability": "Incorrect type conversion in the contract `ABC` makes users unable to burn FSD tokens"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-05-withdrawablewithdraw-does-not-decrease-pendingwithdrawals",
        "vulnerability": "`Withdrawable.withdraw` does not decrease `pendingWithdrawals`"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-04-erc20convictionscores-governancedelta-should-be-subtracted-when-user-is-not-a-governor-anymore",
        "vulnerability": "`ERC20ConvictionScore`\u2019s `governanceDelta` should be subtracted when user is not a governor anymore"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-01-incorrect-use-of-addtribute-instead-of-addgovernancetribute",
        "vulnerability": "Incorrect use of `_addTribute` instead of `_addGovernanceTribute`"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-08-incorrect-implementation-of-arctan-in-the-contract-fairsideformula",
        "vulnerability": "Incorrect implementation of arctan in the contract `FairSideFormula`"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-02-call-to-swapexacttokensforeth-in-liquidatedai-will-always-fail",
        "vulnerability": "Call to `swapExactTokensForETH` in `liquidateDai()` will always fail"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-10-graceperiod-not-increased-after-membership-extension",
        "vulnerability": "`gracePeriod` not increased after membership extension"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-05-bug-inside-abdkmathquad-library",
        "vulnerability": "Bug inside ABDKMathQuad library"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-03-locked-funds-from-tokenization-are-credited-twice-to-user-leading-to-protocol-fund-loss",
        "vulnerability": "Locked funds from tokenization are credited twice to user leading to protocol fund loss"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-09-should-check-return-data-from-chainlink-aggregators",
        "vulnerability": "Should check return data from Chainlink aggregators"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-07-nfts-can-never-be-redeemed-back-to-their-conviction-scores-leading-to-lockloss-of-funds",
        "vulnerability": "NFTs can never be redeemed back to their conviction scores leading to lock/loss of funds"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-06-pendingwithdrawals-just-increments",
        "vulnerability": "pendingWithdrawals just increments"
    },
    {
        "name": "2021-05-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-fairside#h-02-locked-funds-are-debited-twice-from-the-user-during-tokenization-leading-to-fund-loss",
        "vulnerability": "Locked funds are debited twice from the user during tokenization leading to fund loss"
    },
    {
        "name": "2021-05-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-fairside#m-04-eth-may-get-stuck-in-contract",
        "vulnerability": "Eth may get stuck in contract"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-03-changing-default-reserved-token-beneficiary-may-result-in-wrong-beneficiary-for-tier",
        "vulnerability": "Changing default reserved token beneficiary may result in wrong beneficiary for tier"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-08-the-tier-reserved-rate-is-not-validated-and-can-surpass-jbconstantsmaxreservedrate",
        "vulnerability": "The tier reserved rate is not validated and can surpass `JBConstants.MAX_RESERVED_RATE`"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-02-the-tier-setting-parameter-are-unsafely-downcasted-from-type-uint256-to-type-uint80--uint48--uint40--uint16",
        "vulnerability": "The tier setting parameter are unsafely downcasted from type uint256 to type uint80 / uint48 / uint40 / uint16"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-juicebox#h-02-minting-and-redeeming-will-break-for-fully-minted-tiers-with-reserverate-!=-0-and-reserveratemaxreserverate-tokens-burned",
        "vulnerability": "Minting and redeeming will break for fully minted tiers with `reserveRate != 0` and `reserveRate`/`MaxReserveRate` tokens burned"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-06-beneficiary-credit-balance-can-unwillingly-be-used-to-mint-low-tier-nft",
        "vulnerability": "Beneficiary credit balance can unwillingly be used to mint low tier NFT"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-juicebox#h-01-making-a-payment-to-the-protocol-with-dontmint-parameter-will-result-in-lost-fund-for-user",
        "vulnerability": "Making a payment to the protocol with `_dontMint` parameter will result in lost fund for user."
    },
    {
        "name": "2022-10-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-juicebox#h-03-outstanding-reserved-tokens-are-incorrectly-counted-in-total-redemption-weight",
        "vulnerability": "Outstanding reserved tokens are incorrectly counted in total redemption weight"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-04-iterations-over-all-tiers-in-recordmintbestavailabletier-can-render-system-unusable",
        "vulnerability": "Iterations over all tiers in recordMintBestAvailableTier can render system unusable"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-01-multiples-initializations-of-jbtiered721delegate",
        "vulnerability": "Multiples initializations of `JBTiered721Delegate`"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-juicebox#h-05-redemption-weight-of-tiered-nfts-miscalculates--making-users-redeem-incorrect-amounts---bug-1",
        "vulnerability": "Redemption weight of tiered NFTs miscalculates, making users redeem incorrect amounts - Bug #1"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-juicebox#h-04-reserved-token-rounding-can-be-abused-to-honeypot-and-steal-users-funds",
        "vulnerability": "Reserved token rounding can be abused to honeypot and steal user\u2019s funds"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-juicebox#g-01-optimize-nft-delegate-deployments-by-using-proxy",
        "vulnerability": "Optimize NFT delegate deployments by using proxy"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-05-nft-not-minted-when-contributed-via-a-supported-payment-terminal",
        "vulnerability": "NFT not minted when contributed via a supported payment terminal"
    },
    {
        "name": "2022-10-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-juicebox#m-07-deactivated-tiers-can-still-mint-reserve-tokens--even-if-no-non-reserve-tokens-were-minted",
        "vulnerability": "Deactivated tiers can still mint reserve tokens, even if no non-reserve tokens were minted."
    },
    {
        "name": "2022-11-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-foundation#g-01-nftmarketexhibitioncreateexhibition-unnecessary-storage-read",
        "vulnerability": "`NFTMarketExhibition.createExhibition`: Unnecessary storage read"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-01-unsafe-cast-in-concentratedliquiditypoolburn-leads-to-attack",
        "vulnerability": "Unsafe cast in `ConcentratedLiquidityPool.burn` leads to attack"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-01-incentive-should-check-that-it-hasnt-started-yet",
        "vulnerability": "Incentive should check that it hasn\u2019t started yet"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-16-possible-attacks-on-seconds-*-liquidity-calculation",
        "vulnerability": "Possible attacks on Seconds * Liquidity calculation"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-07-concentratedliquiditypositionsolburn-wrong-implementation-allows-attackers-to-steal-yield",
        "vulnerability": "`ConcentratedLiquidityPosition.sol#burn()` Wrong implementation allows attackers to steal yield"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-02-cannot-claim-reward",
        "vulnerability": "Cannot claim reward"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-04-overflow-in-the-mint-function-of-concentratedliquiditypool-causes-lps-funds-to-be-stolen",
        "vulnerability": "Overflow in the `mint` function of `ConcentratedLiquidityPool` causes LPs\u2019 funds to be stolen"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-15-concentratedliquiditypool-initialprice-should-be-checked-to-be-within-allowable-range",
        "vulnerability": "`ConcentratedLiquidityPool`: `initialPrice` should be checked to be within allowable range"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-06-concentratedliquiditypositionsolcollect-users-may-get-double-the-amount-of-yield-when-they-call-collect-before-burn",
        "vulnerability": "`ConcentratedLiquidityPosition.sol#collect()` Users may get double the amount of yield when they call `collect()` before `burn()`"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-06-concentratedliquiditypoolmanagersol-claimreward-and-reclaimincentive-will-fail-when-incentivetoken-is-token0-or-token1",
        "vulnerability": "ConcentratedLiquidityPoolManager.sol `claimReward()` and `reclaimIncentive()` will fail when `incentive.token` is `token0` or `token1`"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-05-incorrect-usage-of-typecasting-in-getamountsforliquidity-lets-an-attacker-steal-funds-from-the-pool",
        "vulnerability": "Incorrect usage of typecasting in `_getAmountsForLiquidity` lets an attacker steal funds from the pool"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-09-range-fee-growth-underflow",
        "vulnerability": "range fee growth underflow"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-10-concentratedliquiditypoolburn-wrong-implementation",
        "vulnerability": "`ConcentratedLiquidityPool.burn()` Wrong implementation"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-04-users-cannot-receive-rewards-from-concentratedliquiditypoolmanager-if-their-liquidity-is-too-large",
        "vulnerability": "Users cannot receive rewards from `ConcentratedLiquidityPoolManager` if their liquidity is too large"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-13-burning-does-not-update-reserves",
        "vulnerability": "Burning does not update reserves"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-11-concentratedliquiditypool-incorrect-feegrowthglobal-accounting-when-crossing-ticks",
        "vulnerability": "ConcentratedLiquidityPool: incorrect `feeGrowthGlobal` accounting when crossing ticks"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-08-wrong-inequality-when-addingremoving-liquidity-in-current-price-range",
        "vulnerability": "Wrong inequality when adding/removing liquidity in current price range"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-12-concentratedliquiditypool-secondsperliquidity-should-be-modified-whenever-pool-liquidity-changes",
        "vulnerability": "`ConcentratedLiquidityPool`: `secondsPerLiquidity` should be modified whenever pool liquidity changes"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-02-wrong-usage-of-positionid-in-concentratedliquiditypoolmanager",
        "vulnerability": "Wrong usage of `positionId` in `ConcentratedLiquidityPoolManager`"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-07-incentives-for-different-pools-should-differ-by-a-large-factor",
        "vulnerability": "Incentives for different pools should differ by a large factor"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-03-concentratedliquiditypoolhelper-gettickstate-might-run-out-of-gas",
        "vulnerability": "`ConcentratedLiquidityPoolHelper`: `getTickState()` might run out of gas"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-03-concentratedliquiditypoolmanagers-incentives-can-be-stolen",
        "vulnerability": "`ConcentratedLiquidityPoolManager`\u2019s incentives can be stolen"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#m-05-tridentnftpermit-should-always-check-recoveredaddress-!=-0",
        "vulnerability": "`TridentNFT.permit` should always check `recoveredAddress != 0`"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-14-concentratedliquiditypool-rangefeegrowth-and-secondsperliquidity-math-needs-to-be-unchecked",
        "vulnerability": "`ConcentratedLiquidityPool`: `rangeFeeGrowth` and `secondsPerLiquidity` math needs to be unchecked"
    },
    {
        "name": "2021-09-sushitrident-2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushitrident-2#h-17-understanding-the-fee-growth-mechanism-why-nearesttick-is-unsuitable",
        "vulnerability": "Understanding the fee growth mechanism (why `nearestTick` is unsuitable)"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-17-owner-of-a-pool-may-prevent-any-taxes-being-withdrawn",
        "vulnerability": "Owner of a pool may prevent any taxes being withdrawn"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-15-permissionlessbasicpoolfactorys-withdraw-can-become-frozen-on-zero-reward-token-transfers",
        "vulnerability": "PermissionlessBasicPoolFactory\u2019s withdraw can become frozen on zero reward token transfers"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-05-merkledropfactorydeposittokens-does-not-require-the-tree-to-exist",
        "vulnerability": "`MerkleDropFactory.depositTokens()` does not require the tree to exist"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-factorydao#n-01-prefer-two-step-ownership-transfers",
        "vulnerability": "Prefer two-step ownership transfers"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-12-pool-owners-can-prevent-withdrawals-of-specific-receipts",
        "vulnerability": "Pool owners can prevent withdrawals of specific receipts"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-02-malicious-token-reward-could-disable-withdrawals",
        "vulnerability": "Malicious token reward could disable withdrawals"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-14-merkle-tree-related-contracts-vulnerable-to-cross-chain-replay-attacks",
        "vulnerability": "Merkle-tree-related contracts vulnerable to cross-chain-replay attacks"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-06-voteridtransferfrom-does-not-distinguish-nonexistent-tokens-from-unapproved-transfers",
        "vulnerability": "`VoterID#transferFrom` does not distinguish nonexistent tokens from unapproved transfers"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-13-amount-requires-to-be-updated-to-contract-balance-increase-1",
        "vulnerability": "amount requires to be updated to contract balance increase (1)"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-16-erc20-tokens-with-different-decimals-than-18-leads-to-loss-of-funds",
        "vulnerability": "ERC20 tokens with different decimals than 18 leads to loss of funds"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-factorydao#h-03-merklevesting-withdrawal-does-not-verify-that-tokens-were-transferred-successfully",
        "vulnerability": "MerkleVesting withdrawal does not verify that tokens were transferred successfully"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-factorydao#n-02-balanceof-does-not-revert-on-zero-address-query",
        "vulnerability": "`balanceOf` does not revert on zero address query"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-factorydao#n-04-emit-events-from-privileged-operations",
        "vulnerability": "Emit events from privileged operations"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-factorydao#h-02-dos-blacklisted-user-may-prevent-withdrawexcessrewards",
        "vulnerability": "DoS: Blacklisted user may prevent `withdrawExcessRewards()`"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-01-missing-parameter-validations-in-speedbumppricegateaddgate",
        "vulnerability": "Missing parameter validations in `SpeedBumpPriceGate#addGate`"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-11-pool-owners-can-prevent-the-payment-of-taxes",
        "vulnerability": "Pool owners can prevent the payment of taxes"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-08-a-transfer-that-is-not-validated-its-result",
        "vulnerability": "A transfer that is not validated its result."
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-10-unbounded-loop-in-withdraw-may-cause-rewards-to-be-locked-in-the-contract",
        "vulnerability": "Unbounded loop in `withdraw()` may cause rewards to be locked in the contract"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-factorydao#n-05-incomplete-natspec-comment",
        "vulnerability": "Incomplete natspec comment"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-19-centralisation-risk-owner-may-abuse-the-tax-rate-to-claim-999%-of-pools",
        "vulnerability": "Centralisation Risk: Owner may abuse the tax rate to claim 99.9% of pools"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-18-dos-attacker-may-significantly-increase-the-cost-of-withdrawexcessrewards-by-creating-a-significant-number-of-excess-receipts",
        "vulnerability": "DoS: Attacker may significantly increase the cost of `withdrawExcessRewards()` by creating a significant number of excess receipts"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-factorydao#n-03-move-require-check-to-top-of-function",
        "vulnerability": "Move `require` check to top of function"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-01-speedbumppricegatesoladdgate-lack-of-input-validation-may-casue-div-by-0-error",
        "vulnerability": "`SpeedBumpPriceGate.sol#addGate()` Lack of input validation may casue div by 0 error"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-20-merkleresistor-zero-coinspersecond-will-brick-tranche-initialization-and-withdrawals",
        "vulnerability": "MerkleResistor: zero coinsPerSecond will brick tranche initialization and withdrawals"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-07-getrewards-in-permissionlessbasicpoolfactory-calculate-wrong-reward-amount-for-receiptid==0",
        "vulnerability": "getRewards() in PermissionlessBasicPoolFactory calculate wrong reward amount for receiptId==0"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-03-voterid-token-can-be-minted-to-non-erc721-receivers",
        "vulnerability": "`VoterID` token can be minted to non-ERC721 receivers"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-05-replace-inline-assembly-with-accountcodelength",
        "vulnerability": "Replace inline assembly with `account.code.length`"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-factorydao#h-01-speedbumppricegate-excess-ether-did-not-return-to-the-user",
        "vulnerability": "SpeedBumpPriceGate: Excess ether did not return to the user"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-03-safetransferfrom-is-recommended-instead-of-transfer-1",
        "vulnerability": "safeTransferFrom is recommended instead of transfer (1)"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-09-rebasing-tokens-go-to-the-pool-owner--or-remain-locked-in-the-various-contracts",
        "vulnerability": "Rebasing tokens go to the pool owner, or remain locked in the various contracts"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-02-voterid-token-can-be-minted-to-the-zero-address",
        "vulnerability": "`VoterID` token can be minted to the zero address"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-06-wrong-out-of-range-check",
        "vulnerability": "wrong out of range check"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-21-verification-should-be-leafed-based-and-not-address-based",
        "vulnerability": "Verification should be leafed based and not address based"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-factorydao#l-04-prefer-safetransfer-and-safetransferfrom-for-erc20-token-transfers",
        "vulnerability": "Prefer `safeTransfer` and `safeTransferFrom` for ERC20 token transfers"
    },
    {
        "name": "2022-05-factorydao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-factorydao#m-04-merkle-leaves-are-the-same-length-as-the-parents-that-are-hashed",
        "vulnerability": "Merkle leaves are the same length as the parents that are hashed"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-07-x-=-x-+-y-is-more-efficient--than-x-+=-y-4-instances",
        "vulnerability": "`x = x + y` is more efficient, than `x += y` (4 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-05-unchecking-arithmetics-operations-that-cant-underflowoverflow-7-instances",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow (7 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-08-withheld-eth-shoud-not-be-sent-back-to-the-frxethminter-contract-itself",
        "vulnerability": "Withheld ETH shoud not be sent back to the frxETHMinter contract itself"
    },
    {
        "name": "2022-09-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-frax#n-06-wrong-event-parameter-name",
        "vulnerability": "Wrong `event` parameter name"
    },
    {
        "name": "2022-09-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-09-frax#l-02-dont-use-owner-and-timelock",
        "vulnerability": "Don\u2019t use `owner` and `timelock`"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-01-centralization-risk-admin-have-privileges-admin-can-set-address-to-mint-any-amount-of-frxeth--can-set-any-address-as-validator--and-change-important-state-in-frxethminter-and-withdraw-fund-from-frcethminter",
        "vulnerability": "Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-08-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied-2-instances",
        "vulnerability": "It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied (2 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-frax#h-01-wrong-accounting-logic-when-syncrewards-is-called-within-beforewithdraw-makes-withdrawals-impossible",
        "vulnerability": "Wrong accounting logic when syncRewards() is called within beforeWithdraw makes withdrawals impossible"
    },
    {
        "name": "2022-09-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-frax#n-07-simplify-depositwithsignature-function",
        "vulnerability": "Simplify `depositWithSignature` function"
    },
    {
        "name": "2022-09-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-frax#n-01-unused-imports",
        "vulnerability": "Unused imports"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-10-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-1-instances",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage (1 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-06-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory--same-for-array-and-mapping-1-instance",
        "vulnerability": "`storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` (1 instance)"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-02-use-function-instead-of-modifiers-4-instances",
        "vulnerability": "Use function instead of modifiers (4 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-01-deleting-an-array-element-can-use-a-more-efficient-algorithm-1-instance",
        "vulnerability": "Deleting an array element can use a more efficient algorithm (1 instance)"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-10-sfrxeth-the-volatile-result-of-previewmint-may-prevent-mintwithsignature-from-working",
        "vulnerability": "sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-09-dont-compare-boolean-expressions-to-boolean-literals-3-instances",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals (3 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-frax#h-02-frontrunning-by-malicious-validator",
        "vulnerability": "Frontrunning by malicious validator"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-04-removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit",
        "vulnerability": "removeValidator() and removeMinter() may fail due to exceeding gas limit"
    },
    {
        "name": "2022-09-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-09-frax#l-01-draft-openzeppelin-dependencies",
        "vulnerability": "Draft OpenZeppelin Dependencies"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-03-use-custom-errors-rather-than-revertrequire-strings-to-save-gas-21-instances",
        "vulnerability": "Use custom errors rather than revert()/require() strings to save gas (21 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-09-recoverether-not-updating-currentwithheldeth-breaks-calculation-of-withheld-amount-for-further-deposits",
        "vulnerability": "`recoverEther` not updating `currentWithheldETH` breaks calculation of withheld amount for further deposits"
    },
    {
        "name": "2022-09-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-frax#n-05-functions--parameters-and-variables-in-snake-case",
        "vulnerability": "Functions, parameters and variables in snake case"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-06-frxethminter-non-conforming-erc20-tokens-not-recoverable",
        "vulnerability": "frxETHMinter: Non-conforming ERC20 tokens not recoverable"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-05-frxethminterdepositether-may-run-out-of-gas--leading-to-lost-eth",
        "vulnerability": "frxETHMinter.depositEther may run out of gas, leading to lost ETH"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-03-frxeth-can-be-depegged-due-to-eth-staking-balance-slashing",
        "vulnerability": "frxETH can be depegged due to ETH staking balance slashing"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-07-getnextvalidator-error-could-temporarily-make-depositether-inoperable",
        "vulnerability": "`getNextValidator()` error could temporarily make `depositEther()` inoperable"
    },
    {
        "name": "2022-09-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-frax#n-08-missing-zero-address-checks",
        "vulnerability": "Missing zero address checks"
    },
    {
        "name": "2022-09-frax",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-frax#g-04-using-bools-for-storage-incurs-overhead-3-instances",
        "vulnerability": "Using bools for storage incurs overhead (3 instances)"
    },
    {
        "name": "2022-09-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-frax#m-02-rewards-delay-release-could-cause-yields-steal-and-loss",
        "vulnerability": "Rewards delay release could cause yields steal and loss"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#h-03-users-could-shift-tokens-on-staker-with-more-than-he-has-staked",
        "vulnerability": "Users could shift tokens on `Staker` with more than he has staked"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-01-latestmarket-used-where-marketindex-should-have-been-used",
        "vulnerability": "`latestMarket` used where `marketIndex` should have been used"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-02-incorrect-balance-computed-in-getusersconfirmedbutnotsettledsynthbalance",
        "vulnerability": "Incorrect balance computed in `getUsersConfirmedButNotSettledSynthBalance()`"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-05-wrong-aave-usage-of-claimrewards",
        "vulnerability": "Wrong aave usage of `claimRewards`"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#h-01-copy-paste-error-in-batchconfirmoutstandingpendingactions",
        "vulnerability": "copy paste error in `_batchConfirmOutstandingPendingActions`"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-06-prevent-markets-getting-stuck-when-prices-dont-move",
        "vulnerability": "Prevent markets getting stuck when prices don\u2019t move"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#h-02-2-variables-not-indexed-by-marketindex",
        "vulnerability": "2 variables not indexed by `marketIndex`"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-03-missing-eventstimelocks-for-owneradmin-only-functions-that-change-critical-parameters",
        "vulnerability": "Missing events/timelocks for owner/admin only functions that change critical parameters"
    },
    {
        "name": "2021-08-floatcapital",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-floatcapital#m-04-stakersol-wrong-values-returned-in-edge-cases-of-calculatefloatpersecond",
        "vulnerability": "Staker.sol: Wrong values returned in edge cases of `_calculateFloatPerSecond()`"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-08-priceaware-uses-prices-from-getamountsout",
        "vulnerability": "PriceAware uses prices from getAmountsOut"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-02-missing-fromtoken-!=-totoken-check",
        "vulnerability": "Missing `fromToken != toToken` check"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-05-several-function-have-no-entry-check",
        "vulnerability": "Several function have no entry check"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-02-missing-checks-if-pairs-equal-tokens",
        "vulnerability": "Missing checks if pairs equal tokens"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-06-users-are-credited-more-tokens-when-paying-back-debt-with-registertradeandborrow",
        "vulnerability": "Users are credited more tokens when paying back debt with `registerTradeAndBorrow`"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-07-accountholdstoken-is-never-set",
        "vulnerability": "`account.holdsToken` is never set"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-09-isolated-margin-contracts-declare-but-do-not-set-the-value-of-liquidationthresholdpercent",
        "vulnerability": "Isolated margin contracts declare but do not set the value of liquidationThresholdPercent"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-01-no-default-liquidationthresholdpercent",
        "vulnerability": "No default `liquidationThresholdPercent`"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-04-maintainer-can-be-pushed-out",
        "vulnerability": "maintainer can be pushed out"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-08-rewards-cannot-be-withdrawn",
        "vulnerability": "Rewards cannot be withdrawn"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-04-inconsistent-usage-of-applyinterest",
        "vulnerability": "Inconsistent usage of `applyInterest`"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-03-no-entry-checks-in-crossswap[exact]tokensfor[exact]tokens",
        "vulnerability": "No entry checks in crossSwap[Exact]TokensFor[Exact]Tokens"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-10-add-a-timelock-to-functions-that-set-key-variables",
        "vulnerability": "Add a timelock to functions that set key variables"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-11-impossible-to-call-withdrawreward-fails-due-to-run-out-of-gas",
        "vulnerability": "Impossible to call withdrawReward fails due to run out of gas"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-06-users-can-drain-funds-from-marginswap-by-making-undercollateralized-borrows-if-the-price-of-a-token-has-moved-more-than-10%-since-the-last-marginswap-borrowliquidation-involving-accounts-holding-that-token",
        "vulnerability": "Users Can Drain Funds From MarginSwap By Making Undercollateralized Borrows If The Price Of A Token Has Moved More Than 10% Since The Last MarginSwap Borrow/Liquidation Involving Accounts Holding That Token."
    },
    {
        "name": "2021-04-marginswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-marginswap#m-07-diffmaxminruntime-gets-default-value-of-0",
        "vulnerability": "diffMaxMinRuntime gets default value of 0"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-01-re-entrancy-bug-allows-inflating-balance",
        "vulnerability": "Re-entrancy bug allows inflating balance"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-05-wrong-liquidation-logic",
        "vulnerability": "Wrong liquidation logic"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-03-price-feed-can-be-manipulated",
        "vulnerability": "Price feed can be manipulated"
    },
    {
        "name": "2021-04-marginswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-marginswap#h-09-lastupdatedday-not-initialized",
        "vulnerability": "lastUpdatedDay not initialized"
    },
    {
        "name": "2021-10-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-pooltogether#m-01-deposits-dont-work-with-fee-on-transfer-tokens",
        "vulnerability": "Deposits don\u2019t work with fee-on transfer tokens"
    },
    {
        "name": "2021-10-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-pooltogether#m-02-prizepoolawardexternalerc721-erroneously-emits-events",
        "vulnerability": "`PrizePool.awardExternalERC721()` Erroneously Emits Events"
    },
    {
        "name": "2021-10-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-pooltogether#h-01-the-formula-of-number-of-prizes-for-a-degree-is-wrong",
        "vulnerability": "The formula of number of prizes for a degree is wrong"
    },
    {
        "name": "2021-10-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-pooltogether#h-02-miners-can-re-roll-the-vrf-output-to-game-the-protocol",
        "vulnerability": "Miners Can Re-Roll the VRF Output to Game the Protocol"
    },
    {
        "name": "2021-10-covalent",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-covalent#m-01-reward-tokens-could-get-lost-due-to-rounding-down",
        "vulnerability": "reward tokens could get lost due to rounding down"
    },
    {
        "name": "2021-10-covalent",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-covalent#h-01-usage-of-an-incorrect-version-of-ownbale-library-can-potentially-malfunction-all-onlyowner-functions",
        "vulnerability": "Usage of an incorrect version of `Ownbale` library can potentially malfunction all `onlyOwner` functions"
    },
    {
        "name": "2021-10-covalent",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-covalent#m-02-incorrect-updateglobalexchangerate-implementation",
        "vulnerability": "Incorrect `updateGlobalExchangeRate` implementation"
    },
    {
        "name": "2021-10-covalent",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-covalent#m-03-validator-can-fail-to-receive-commission-reward-in-redeemallrewards",
        "vulnerability": "Validator can fail to receive commission reward in `redeemAllRewards`"
    },
    {
        "name": "2021-10-covalent",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-covalent#h-02-unstake-should-update-exchange-rates-first",
        "vulnerability": "`unstake` should update exchange rates first"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-07-anyone-can-create-proposal-unigov-proposal-storesol",
        "vulnerability": "Anyone can create Proposal Unigov `Proposal-Store.sol`"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-07-cnote-updates-the-accounts-after-sending-the-funds--allowing-for-reentrancy",
        "vulnerability": "CNote updates the accounts after sending the funds, allowing for reentrancy"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-05-local-variable-shadowing",
        "vulnerability": "Local variable shadowing"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-13-scientific-notation",
        "vulnerability": "Scientific notation"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-12-in-erc20--totalsupply-is-broken",
        "vulnerability": "In `ERC20`, `TotalSupply` is broken"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-05-minimising-sloads",
        "vulnerability": "Minimising SLOAD\u2019s"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-02-stealing-wrapped-manifest-in-wethsol",
        "vulnerability": "Stealing Wrapped Manifest in WETH.sol"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-04-for-loop-optimisations",
        "vulnerability": "For Loop Optimisations"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-05-incorrect-amount-taken",
        "vulnerability": "Incorrect amount taken"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-11-lending-marketnotesol-wrong-implementation-of-access-control",
        "vulnerability": "`lending-market/Note.sol` Wrong implementation of access control"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-08-long-revert-strings",
        "vulnerability": "Long Revert Strings"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-02-comment-missing-function-parameter",
        "vulnerability": "Comment Missing function parameter"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-01-assert-statement-should-not-be-used",
        "vulnerability": "assert statement should not be used"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-03-unable-to-check-state-if-proposalid-==-0",
        "vulnerability": "Unable to check `state()` if `proposalId == 0`"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-08-transferring-any-amount-of-the-underlying-token-to-the-cnote-contract-will-make-the-contract-functions-unusable",
        "vulnerability": "Transferring any amount of the underlying token to the CNote contract will make the contract functions unusable"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-08-function-order",
        "vulnerability": "Function order"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-03-immutable-addresses-lack-zero-address-check",
        "vulnerability": "Immutable addresses lack zero-address check"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-09-non-library-files-should-use-fixed-compiler-versions",
        "vulnerability": "Non-library files should use fixed compiler versions"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-05-events-indexing",
        "vulnerability": "Events indexing"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-02-only-the-state-of-the-latest-proposal-can-be-checked",
        "vulnerability": "Only the `state()` of the latest proposal can be checked"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-04-receive-function",
        "vulnerability": "Receive function"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-01-missing-zero-address-check-can-set-treasury-to-zero-address",
        "vulnerability": "Missing zero address check can set treasury to zero address"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-06-avoid-using-transfer-to-transfer-native-tokens",
        "vulnerability": "Avoid Using `.Transfer` to Transfer Native Tokens"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-03-accountantdelegate-sweepinterest-function-will-destroy-the-cnote-in-the-contract",
        "vulnerability": "`AccountantDelegate`: `sweepInterest` function will destroy the cnote in the contract."
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-12-note-when-initialsupply-!-=-0--the-minttoaccountant-function-will-fail",
        "vulnerability": "Note: When `_initialSupply ! = 0`, the `_mint_to_Accountant` function will fail"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-01-underflow-desired-but-not-possible",
        "vulnerability": "Underflow desired but not possible"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-07-function-missing-comments",
        "vulnerability": "Function missing comments"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-15-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-01-initialising-to-default-values",
        "vulnerability": "Initialising to Default Values"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-07-custom-errors",
        "vulnerability": "Custom Errors"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-06-accountant-cant-be-initialized",
        "vulnerability": "Accountant can\u2019t be initialized"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-04-lending-marketnoteinterestsol-wrong-implementation-of-getborrowrate",
        "vulnerability": "`lending-market/NoteInterest.sol` Wrong implementation of `getBorrowRate()`"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-04-accountant-address-can-be-set-to-zero-by-anyone-leading-to-loss-of-fundstokens",
        "vulnerability": "accountant address can be set to zero by anyone leading to loss of funds/tokens"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-09-uint->-0-checks-in-require-functions",
        "vulnerability": "Uint > 0 Checks in Require Functions"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-11-in-cnotesol--anyone-can-initially-become-both-accountant-and-admin",
        "vulnerability": "In `Cnote.sol`, anyone can initially become both accountant and admin"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-12-require-statements-should-have-descriptive-strings",
        "vulnerability": "Require statements should have descriptive strings"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-11-public-functions-can-be-external",
        "vulnerability": "Public functions can be external"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-06-event-should-be-emitted-in-setters",
        "vulnerability": "Event should be emitted in setters"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-02-emitting-storage-variables",
        "vulnerability": "Emitting Storage Variables"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-08-zeroswapuniswapv2pairsol-token-reserves-per-lp-token-can-be-manipulated-due-to-lack-of-minimumliquidity-when-minting-the-first-liquidity-with-migrator",
        "vulnerability": "`zeroswap/UniswapV2Pair.sol` Token reserves per lp token can be manipulated due to lack of `MINIMUM_LIQUIDITY` when minting the first liquidity with `migrator`"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-09-wethsol-computes-the-wrong-totalsupply",
        "vulnerability": "WETH.sol computes the wrong `totalSupply()`"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-09-incorrect-condition-always-bound-to-fail",
        "vulnerability": "Incorrect condition always bound to fail"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-10-oracle-may-be-attacked-if-an-attacker-can-pump-the-tokens-for-the-entire-block",
        "vulnerability": "Oracle may be attacked if an attacker can pump the tokens for the entire block"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-14-styling",
        "vulnerability": "Styling"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-03-variables-can-be-immutableconstant",
        "vulnerability": "Variables Can be Immutable/Constant"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-10-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-06-no-need-to-check-==-true-in-conditional-statements",
        "vulnerability": "No Need to check == True in Conditional Statements"
    },
    {
        "name": "2022-06-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto#g-10-&&-in-require-functions",
        "vulnerability": "&& in Require Functions"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-14-wethallowance-returns-wrong-result",
        "vulnerability": "`WETH.allowance()` returns wrong result"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-13-its-not-possible-to-execute-governance-proposals-through-the-governorbravodelegate-contract",
        "vulnerability": "It\u2019s not possible to execute governance proposals through the `GovernorBravoDelegate` contract"
    },
    {
        "name": "2022-06-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto#l-02-closefactor-unbounded",
        "vulnerability": "CloseFactor unbounded"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-05-zeroswapuniswapv2librarysol-wrong-init-code-hash-in-uniswapv2librarypairfor-will-break-uniswapv2oracle--uniswapv2router02--sushiroll",
        "vulnerability": "`zeroswap/UniswapV2Library.sol` Wrong init code hash in `UniswapV2Library.pairFor()` will break `UniswapV2Oracle`, `UniswapV2Router02`, `SushiRoll`"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-03-constants-instead-of-magic-numbers",
        "vulnerability": "Constants instead of magic numbers"
    },
    {
        "name": "2022-06-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto#n-04-constructor-visibility",
        "vulnerability": "Constructor visibility"
    },
    {
        "name": "2022-06-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto#m-06-overprivileged-admin-can-grant-unlimited-weth",
        "vulnerability": "Overprivileged admin can grant unlimited WETH"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-01-anyone-can-set-the-baserateperyear-after-the-updatefrequency-has-passed",
        "vulnerability": "Anyone can set the `baseRatePerYear` after the `updateFrequency` has passed"
    },
    {
        "name": "2022-06-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto#h-10-comptroller-uses-the-wrong-address-for-the-weth-contract",
        "vulnerability": "Comptroller uses the wrong address for the WETH contract"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-01-wrong-implementation-of-creditlimitbymediansolgetlockedamount-will-lock-a-much-bigger-total-amount-of-staked-tokens-than-expected",
        "vulnerability": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` will lock a much bigger total amount of staked tokens than expected"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-03-uniontoken-should-check-whitelist-on-from",
        "vulnerability": "`UnionToken` should check whitelist on `from`?"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-09-duplicate-utoken-and-usermanager-can-be-added-which-cannot-be-deleted",
        "vulnerability": "Duplicate `utoken` and `usermanager` can be added which cannot be deleted"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-06-debtwriteoff-updates-totalfrozen-immaturely--thereby-losing-staker-rewards",
        "vulnerability": "debtWriteOff updates `totalFrozen` immaturely, thereby losing staker rewards"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-11-rebalance-will-fail-if-a-market-has-high-utilization",
        "vulnerability": "Rebalance will fail if a market has high utilization"
    },
    {
        "name": "2021-10-union",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-union#h-01-borrow-must-accrueinterest-first",
        "vulnerability": "`borrow` must `accrueInterest` first"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-02-rebalance-will-fail-due-to-low-precision-of-percentages",
        "vulnerability": "Rebalance will fail due to low precision of percentages"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-05-comptroller-rewards-can-be-artificially-inflated-and-drained-by-manipulating-[totalstaked---totalfrozen]-or-wrong-rewards-calculation",
        "vulnerability": "Comptroller rewards can be artificially inflated and drained by manipulating [totalStaked - totalFrozen] (or: wrong rewards calculation)"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-10-user-fund-loss-in-case-of-unsupported-market-token-deposit",
        "vulnerability": "User Fund loss in case of Unsupported Market token deposit"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-07-usermanager-totalstaked-\u2265-totalfrozen-should-be-checked-before-and-after-totalfrozen-is-updated",
        "vulnerability": "`UserManager`: `totalStaked` \u2265 totalFrozen should be checked before and after totalFrozen is updated"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-04-change-in-interest-rate-can-disable-repay-of-loan",
        "vulnerability": "Change in interest rate can disable repay of loan"
    },
    {
        "name": "2021-10-union",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-union#h-02-wrong-implementation-of-creditlimitbymediansolgetlockedamount-makes-it-unable-to-unlock-lockedamount-in-creditlimitbymedian-model",
        "vulnerability": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` makes it unable to unlock `lockedAmount` in `CreditLimitByMedian` model"
    },
    {
        "name": "2021-10-union",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-union#m-08-maxtrustlimit-might-be-too-high",
        "vulnerability": "`MAX_TRUST_LIMIT` might be too high"
    },
    {
        "name": "2023-01-drips",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-drips#m-02-unauthorize-can-be-front-run-so-that-the-malicious-authorized-user-would-get-their-authority-back",
        "vulnerability": "`unauthorize()` can be front-run so that the malicious authorized user would get their authority back"
    },
    {
        "name": "2023-01-drips",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-drips#h-01-drips-that-end-after-the-current-cycle-but-before-its-creation-can-allow-users-to-profit-from-squeezing",
        "vulnerability": "Drips that end after the current cycle but before its creation can allow users to profit from squeezing"
    },
    {
        "name": "2023-01-drips",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-drips#l-01-an-authorized-user-can-unauthorize-other-authorized-users-of-the-same-sender",
        "vulnerability": "An authorized user can unauthorize other authorized users of the same sender"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-04-call-blocktimestamp-direclty-instead-of-function",
        "vulnerability": "Call block.timestamp direclty instead of function"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-07-transfer-erc20-immediately-to-the-user",
        "vulnerability": "Transfer ERC20 immediately to the user"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-02-use-an-unchecked-block-when-operands-cant-underflowoverflow",
        "vulnerability": "Use an unchecked block when operands can\u2019t underflow/overflow"
    },
    {
        "name": "2023-01-drips",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-drips#n-01-the-natspec-comment-of-the-dripsconfigimpllt-function-neglects-to-sorting-of-dripid",
        "vulnerability": "The NatSpec comment of the `DripsConfigImpl.lt` function neglects to sorting of `dripId`"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-01-make-for-loop-unchecked",
        "vulnerability": "Make for loop unchecked"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-05-make-3-event-parameters-indexed-when-possible",
        "vulnerability": "Make 3 event parameters indexed when possible"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-09-miscellaneous",
        "vulnerability": "Miscellaneous"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-08-use-double-if-statements-instead-of-&&",
        "vulnerability": "Use double if statements instead of &&"
    },
    {
        "name": "2023-01-drips",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-drips#g-03-write-element-of-storage-struct-to-memory-when-used-more-than-once",
        "vulnerability": "Write element of storage struct to memory when used more than once"
    },
    {
        "name": "2023-01-drips",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-drips#m-01-squeezing-drips-from-a-sender-can-be-front-run-and-prevented-by-the-sender",
        "vulnerability": "Squeezing drips from a sender can be front-run and prevented by the sender"
    },
    {
        "name": "2023-01-drips",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-drips#l-02-lack-of-reasonable-boundaries-for-cycle-secs",
        "vulnerability": "Lack of reasonable boundaries for cycle secs"
    },
    {
        "name": "2023-01-drips",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-drips#l-05-an-immutable-split-is-unable-to-collect-funds-if-it-has-itself-set-as-a-split-receiver",
        "vulnerability": "An immutable split is unable to collect funds if it has itself set as a split receiver"
    },
    {
        "name": "2023-01-drips",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-drips#l-04-collecting-funds-should-be-usable-while-the-dripshub-contract-is-paused",
        "vulnerability": "Collecting funds should be usable while the `DripsHub` contract is paused"
    },
    {
        "name": "2023-01-drips",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-drips#l-03-unused-dripid-of-receiver-config-is-used-considered-while-sorting-receivers",
        "vulnerability": "Unused `dripId` of receiver config is used considered while sorting receivers"
    },
    {
        "name": "2022-07-ens",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-ens#h-01-it-is-possible-to-create-fake-erc1155-namewrapper-token-for-subdomain--which-is-not-owned-by-namewrapper",
        "vulnerability": "It is possible to create fake ERC1155 `NameWrapper` token for subdomain, which is not owned by `NameWrapper`"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-05-dnssecimplverifysignature-compares-strings-incorrectly--allowing-malicious-zones-to-forge-dnssec-trust-chain",
        "vulnerability": "`DNSSECImpl.verifySignature` compares strings incorrectly, allowing malicious zones to forge DNSSEC trust chain"
    },
    {
        "name": "2022-07-ens",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-ens#l-04-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-07-ens",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-ens#l-05-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-07-ens",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-ens#h-02-the-expiry-of-the-parent-node-can-be-smaller-than-the-one-of-a-child-node--violating-the-guarantee-policy",
        "vulnerability": "The expiry of the parent node can be smaller than the one of a child node, violating the guarantee policy"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-01-use-assembly-to-hash-instead-of-solidity",
        "vulnerability": "Use assembly to hash instead of Solidity"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-04-use-calldata-instead-of-memory-for-function-arguments-that-do-not-get-mutated",
        "vulnerability": "Use `calldata` instead of `memory` for function arguments that do not get mutated."
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-09-the-unwrapeth2ld-use-transferfrom-instead-of-safetransferfrom-to-transfer-erc721-token",
        "vulnerability": "The `unwrapETH2LD` use `transferFrom` instead of `safeTransferFrom` to transfer ERC721 token"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-10-incorrect-implementation-of-rrutilsserialnumbergte",
        "vulnerability": "Incorrect implementation of `RRUtils.serialNumberGte`"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-11-use-custom-errors-instead-of-string-error-messages",
        "vulnerability": "Use custom errors instead of string error messages"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-06-bytesutils-compare-will-not-revert-when-the-offset-and-len-exceeds-the-bytes-lengths",
        "vulnerability": "`BytesUtils`: compare will not revert when the `offset` and `len` exceeds the bytes lengths"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-10-consider-marking-functions-as-payable",
        "vulnerability": "Consider marking functions as payable"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-08-wrong-equals-logic",
        "vulnerability": "Wrong Equals Logic"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-11-the-preimage-db-ie--namewrappernames-can-be-maliciously-manipulatedcorrupted",
        "vulnerability": "The preimage DB (i.e., `NameWrapper.names`) can be maliciously manipulated/corrupted"
    },
    {
        "name": "2022-07-ens",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-ens#h-03-parentcannotcontrol-can-be-bypassed-by-maliciously-unwrapping-parent-node",
        "vulnerability": "`PARENT_CANNOT_CONTROL` can be bypassed by maliciously unwrapping parent node"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-04-bytesutilcompare-returns-wrong-result-on-some-strings-longer-than-32-characters",
        "vulnerability": "`BytesUtil.compare` returns wrong result on some strings longer than 32 characters"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-02-renew-of-2nd-level-domain-is-not-done-properly",
        "vulnerability": "Renew of 2nd level domain is not done properly"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-09-cache-array-length-during-for-loop-definition",
        "vulnerability": "Cache array length during for loop definition."
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-01-wrapeth2ld-permissioning-is-over-extended",
        "vulnerability": "`wrapETH2LD` permissioning is over-extended"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-06-use-assembly-to-write-storage-values",
        "vulnerability": "Use assembly to write storage values"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-13-users-can-create-extra-ens-records-at-no-cost",
        "vulnerability": "Users can create extra ENS records at no cost"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-07-use-assembly-to-check-for-address0",
        "vulnerability": "Use assembly to check for address(0)"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-12-erc1155fuse-transfer-does-not-revert-when-sent-to-the-old-owner",
        "vulnerability": "`ERC1155Fuse`: `_transfer` does not revert when sent to the old owner"
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-07-if-parentcannotcontrol-is-set-on-subdomain--it-can-be-unwrapped-then-wrapped-by-its-owner-and-then-parent-can-control-it-again-before-the-expiry",
        "vulnerability": "If `PARENT_CANNOT_CONTROL` is set on subdomain, it can be unwrapped then wrapped by its owner and then parent can control it again before the expiry"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-05-use-multiple-require-statements-instead-of-requireexpression-&&-expression-&&-\u2026",
        "vulnerability": "Use multiple require() statements instead of require(expression && expression && \u2026)"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-08-use-assembly-when-getting-a-contracts-balance-of-eth",
        "vulnerability": "Use assembly when getting a contract\u2019s balance of ETH."
    },
    {
        "name": "2022-07-ens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-ens#m-03-transfer-depends-on-gas-consts",
        "vulnerability": "`transfer()` depends on gas consts"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-02-unchecked{++i}-instead-of-i++-or-use-assembly-when-applicable",
        "vulnerability": "`unchecked{++i}` instead of `i++` (or use assembly when applicable)"
    },
    {
        "name": "2022-07-ens",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-ens#g-03-use-assembly-for-math-add--sub--mul--div",
        "vulnerability": "Use assembly for math (add, sub, mul, div)"
    },
    {
        "name": "2021-10-tempus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tempus#m-02-depositandfix-can-be-made-to-fail",
        "vulnerability": "`depositAndFix` can be made to fail"
    },
    {
        "name": "2021-10-tempus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tempus#m-01-exittempusamm-can-be-made-to-fail",
        "vulnerability": "`exitTempusAMM` can be made to fail"
    },
    {
        "name": "2021-10-tempus",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-tempus#h-01-steal-tokens-from-tempuscontroller",
        "vulnerability": "Steal tokens from TempusController"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#h-05-attacker-can-steal-entire-reserves-by-abusing-fee-calculation",
        "vulnerability": "Attacker can steal entire reserves by abusing fee calculation"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-01-owner-token-enumeration-is-an-extremely-expensive-operation-but-it-is-not-essential-to-the-protocol",
        "vulnerability": "Owner token enumeration is an extremely expensive operation but it is not essential to the protocol"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-06-calling-swapavaxforexacttokens-function-while-sending-excess-amount-cannot-refund-such-excess-amount",
        "vulnerability": "Calling `swapAVAXForExactTokens` function while sending excess amount cannot refund such excess amount"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-03-flashloan-fee-collection-mechanism-can-be-easily-manipulated",
        "vulnerability": "Flashloan fee collection mechanism can be easily manipulated"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-05-an-element-is-cached-to-memory-after-it-is-used",
        "vulnerability": "An element is cached to memory after it is used"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-07-runtime-cost-can-be-optimized-in-detriment-of-the-deploy-cost",
        "vulnerability": "Runtime cost can be optimized in detriment of the deploy cost"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#h-03-wrong-implementation-of-function-lbpairsetfeeparameter-can-break-the-funcionality-of-lbpair-and-make-users-tokens-locked",
        "vulnerability": "Wrong implementation of function `LBPair.setFeeParameter` can break the funcionality of LBPair and make user\u2019s tokens locked"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-01-lbrouterremoveliquidity-returning-wrong-values",
        "vulnerability": "`LBRouter.removeLiquidity` returning wrong values"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#h-04-wrong-calculation-in-function-lbroutergetamountsin-make-user-lose-a-lot-of-tokens-when-swap-through-joepair-most-of-them-will-gifted-to-joepair-freely",
        "vulnerability": "Wrong calculation in function `LBRouter._getAmountsIn` make user lose a lot of tokens when swap through JoePair (most of them will gifted to JoePair freely)"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-04-checking-msgsender-to-not-be-zero-address-is-redundant",
        "vulnerability": "Checking `msg.sender` to not be zero address is redundant"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#h-02-incorrect-output-amount-calculation-for-trader-joe-v1-pools",
        "vulnerability": "Incorrect output amount calculation for Trader Joe V1 pools"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#h-01-transfering-funds-to-yourself-increases-your-balance",
        "vulnerability": "Transfering funds to yourself increases your balance"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#l-03-in-tokenhelpersol-the-safetransfer-function-does-not-check-for-potentially-self-destroyed-tokens",
        "vulnerability": "In `TokenHelper.sol` the `safeTransfer` function does not check for potentially self-destroyed tokens."
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-07-incorrect-fee-calculation-on-lbpair-fees-collected-on-swaps-are-less-than-what-they-\u201cshould\u201d-be",
        "vulnerability": "Incorrect fee calculation on LBPair (fees collected on swaps are less than what they \u201cshould\u201d be)"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-04-very-critical-owner-privileges-can-cause-complete-destruction-of-the-project-in-a-possible-privatekey-exploit",
        "vulnerability": "Very critical `Owner` privileges can cause complete destruction of the project in a possible privateKey exploit"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#l-02-potential-loss-of-funds-on-tokens-with-big-supplies",
        "vulnerability": "Potential loss of funds on tokens with big supplies"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-06-divisions-by-2**n-can-be-replaced-by-right-shift-by-n",
        "vulnerability": "Divisions by `2**n` can be replaced by right shift by `n`"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-03-ternary-operation-is-cheaper-than-if-else-statement",
        "vulnerability": "Ternary operation is cheaper than if-else statement"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-05-attacker-can-keep-fees-max-at-no-cost",
        "vulnerability": "Attacker can keep fees max at no cost"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#l-01-missing-sanity-checks-on-to-addresses-in-lbroutersol",
        "vulnerability": "Missing sanity checks on `to` addresses in `LBRouter.sol`"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#m-02-beforetokentransfer-called-with-wrong-parameters-in-lbtokenburn",
        "vulnerability": "`beforeTokenTransfer` called with wrong parameters in `LBToken._burn`"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-09-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-02-using-solidity-version-0817-will-provide-an-overall-gas-optimization",
        "vulnerability": "Using Solidity version 0.8.17 will provide an overall gas optimization"
    },
    {
        "name": "2022-10-traderjoe",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-traderjoe#g-08-making-constant-variables-private-will-save-gas-during-deployment",
        "vulnerability": "Making constant variables private will save gas during deployment"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-24-do-not-calculate-constants",
        "vulnerability": "Do not calculate constants"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-14-voteescrowdelegationtransferfrom-can-only-be-executed-by-the-token-owner",
        "vulnerability": "`VoteEscrowDelegation._transferFrom` can only be executed by the token owner"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-27-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-18-fillask-allows-for-msgvalue-to-be-larger-than-require-locking-the-excess-in-the-contract",
        "vulnerability": "`fillAsk()` Allows for `msg.value` to be larger than require locking the excess in the contract"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-01-owner-can-not-set-the-ve-address-via-rewarddistributoraddvoteescrow",
        "vulnerability": "Owner can not set the `ve` address via `RewardDistributor.addVoteEscrow`"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-30-state-variables-with-values-known-at-compile-time-should-be-constants",
        "vulnerability": "State variables with values known at compile time should be constants"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-32-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-04-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-10-delegated-nfts-that-are-withdrawn-while-still-delegated-will-remain-delegated-even-after-burn",
        "vulnerability": "Delegated NFTs that are withdrawn while still delegated will remain delegated even after burn"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-16-golomtrader-validateorder-function-does-not-check-if-ecrecover-return-value-is-0",
        "vulnerability": "`GolomTrader`: `validateOrder` function does not check if ecrecover return value is 0"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-10-multiplicationdivision-by-2-should-use-bit-shifting",
        "vulnerability": "Multiplication/division by 2 should use bit shifting"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-12-some-setters-timelock-can-be-bypassed",
        "vulnerability": "Some setters\u2019 timelock can be bypassed"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-29-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-05-the-result-of-external-function-calls-should-be-cached-rather-than-re-calling-the-function",
        "vulnerability": "The result of external function calls should be cached rather than re-calling the function"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-21-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-02-access-mappings-directly-rather-than-using-accessor-functions",
        "vulnerability": "Access mappings directly rather than using accessor functions"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-38-remove-duplicate-code",
        "vulnerability": "Remove duplicate code"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-26-copying-struct-to-memory-can-be-more-expensive-than-just-reading-from-storage",
        "vulnerability": "Copying struct to memory can be more expensive than just reading from storage"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-01-++variable-costs-less-gas-than-variable++--especially-when-its-used-in-for-loops-\u2014variablevariable\u2014-too",
        "vulnerability": "++variable costs less gas than variable++, especially when it\u2019s used in for-loops (\u2014variable/variable\u2014 too)"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-07-writecheckpoint-does-not-write-to-storage-on-same-block",
        "vulnerability": "`_writeCheckpoint` does not write to storage on same block"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-08-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-02-voteescrowdelegationwritecheckpoint-fails-when-ncheckpoints-is-0",
        "vulnerability": "`VoteEscrowDelegation._writeCheckpoint` fails when `nCheckpoints` is 0"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-12-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "`abi.encode()` is less efficient than `abi.encodePacked()`"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-35-no-need-to-read-tokenid-second-time",
        "vulnerability": "No need to read `tokenId` second time"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-15-x-+=-y-costs-more-gas-than-x-=-x-+-y-for-state-variables",
        "vulnerability": "`x += y` costs more gas than `x = x + y` for state variables"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-06-orders-with-tokenamt-of-typeuint256max-cannot-be-cancelled-by-golomtradersolcancelorder",
        "vulnerability": "Orders with `tokenAmt` of `type(uint256).max` cannot be cancelled by `GolomTrader.sol#cancelOrder`"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-06-nft-transferring-wont-work-because-of-the-external-call-to-removedelegation",
        "vulnerability": "NFT transferring won\u2019t work because of the external call to `removeDelegation`."
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-03-cheaper-input-valdiations-should-come-before-expensive-operations",
        "vulnerability": "Cheaper input valdiations should come before expensive operations"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-19-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-and-assert-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` and `assert` statement"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-09-default-value-initialization",
        "vulnerability": "Default value initialization"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-23-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-11-cannot-remove-delegation-from-a-token-to-another-token",
        "vulnerability": "Cannot remove delegation from a token to another token"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-04-voteescrowcoresafetransferfrom-does-not-check-correct-magic-bytes-returned-from-receiver-contracts-onerc721received-function",
        "vulnerability": "`VoteEscrowCore.safeTransferFrom` does not check correct magic bytes returned from receiver contract\u2019s `onERC721Received` function"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-25-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a for-loop"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-34-no-need-to-evaluate-all-expressions-to-know-if-one-of-them-is-true",
        "vulnerability": "No need to evaluate all expressions to know if one of them is true"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-41-obsolete-constants",
        "vulnerability": "Obsolete constants"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-16-internal-and-private-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` and `private` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-39-no-need-for-mapping-supportedinterfaces-to-exist",
        "vulnerability": "No need for mapping `supportedInterfaces` to exist"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-07-public-functions-to-external",
        "vulnerability": "`public` functions to `external`"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-40-same-calculation-twice",
        "vulnerability": "Same calculation twice"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-08-users-can-avoid-paying-fees-while-trading-trustlessly-&-using-goloms-network-effects",
        "vulnerability": "Users can avoid paying fees while trading trustlessly & using Golom\u2019s network effects"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-08-pre-check-is-not-correct",
        "vulnerability": "Pre-check is not correct"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-17-unchecked-arithmetic",
        "vulnerability": "Unchecked arithmetic"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-02-use-safetransferfrom-instead-of-transferfrom-for-erc721",
        "vulnerability": "Use `safeTransferFrom` Instead of `transferFrom` for ERC721"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-28-remove-or-replace-unused-variables",
        "vulnerability": "Remove or replace unused variables"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-13-rewards-owed-burned-nft-in-rewarddistributorsol-become-irretrievable",
        "vulnerability": "Rewards owed burned NFT in `RewardDistributor.sol` become irretrievable"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-05-replay-attack-in-case-of-hard-fork",
        "vulnerability": "Replay attack in case of hard fork"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-01-use-call-rather-than-transfer-on-address-payable",
        "vulnerability": "Use `call()` rather than `transfer()` on address payable"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-31-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-07-venft-withdraw-and-merge-fail-for-approved-callers",
        "vulnerability": "veNFT withdraw and merge fail for approved callers"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-03-voter-in-voteescrowcore-can-permanently-lock-user-tokens",
        "vulnerability": "Voter in `VoteEscrowCore` can permanently lock user tokens"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-04-old-delegatee-not-deleted-when-delegating-to-new-tokenid",
        "vulnerability": "Old delegatee not deleted when delegating to new tokenId"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-33-remove-unreachable-code",
        "vulnerability": "Remove unreachable code"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-03-golomtraders-settlebalances-double-counts-protocol-fee--reducing-takers-payout-for-a-nft-sold",
        "vulnerability": "GolomTrader\u2019s `_settleBalances` double counts protocol fee, reducing taker\u2019s payout for a NFT sold"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-13-struct-order-can-be-more-tighly-packed",
        "vulnerability": "`struct Order`: can be more tighly packed"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-11-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-06-amounts-should-be-checked-for-0-before-calling-a-transfer",
        "vulnerability": "Amounts should be checked for `0` before calling a transfer"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-37-wasted-gas-on-copying-a-struct",
        "vulnerability": "Wasted gas on copying a struct"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-14-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-09-repeated-calls-to-multistakerclaim-in-the-same-block-leads-to-loss-of-funds",
        "vulnerability": "Repeated calls to `multiStakerClaim` in the same block leads to loss of funds"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-09-golomtokensol-doesnt-contain-a-function-to-mint-treasury-tokens",
        "vulnerability": "`GolomToken.sol` doesn\u2019t contain a function to mint treasury tokens"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-17-nfts-that-dont-have-a-checkpoint-cant-be-transferred",
        "vulnerability": "NFTs that don\u2019t have a checkpoint can\u2019t be transferred"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-42-variable-end-can-be-of-type-uint128",
        "vulnerability": "Variable `end` can be of type `uint128`"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-11-when-minvotingpowerrequired-is-changed--previous-votes-are-not-affected",
        "vulnerability": "When `MIN_VOTING_POWER_REQUIRED` is changed, previous votes are not affected"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-22-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-18-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-05-addfee-will-stop-accumulating-fee-once-rewardtoken-has-reached-max-supply",
        "vulnerability": "`addFee` will stop accumulating fee once `rewardToken` has reached max supply"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-20-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-07-golom",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-golom#m-15-griefer-can-minimize-delegatees-voting-power",
        "vulnerability": "Griefer can minimize delegatee\u2019s voting power"
    },
    {
        "name": "2022-07-golom",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-golom#h-10-upon-changing-of-delegate--votedelegation-updates-both-the-previous-and-the-current-checkpoint",
        "vulnerability": "Upon changing of delegate, `VoteDelegation` updates both the previous and the current checkpoint"
    },
    {
        "name": "2022-07-golom",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-golom#g-36-lastpoint-value-rewritten-right-after-initialization",
        "vulnerability": "`last_point` value rewritten right after initialization"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-02-when-transferring-tokens-native-on-skale-to-ethereum-with-tokenmanagererc20exittomainerc20--the-tokens-on-the-schain-will-be-frozen-on-tokenmanagererc20--but-they-will-not-receive-tokens-on-ethereum",
        "vulnerability": "When transferring tokens native on SKALE to Ethereum with `TokenManagerERC20.exitToMainERC20()`, the tokens on the schain will be frozen on `TokenManagerERC20`, but they will not receive tokens on Ethereum"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-06-centralisation-risk-admin-role-of-tokenmanagereth-can-rug-pull-all-eth-from-the-bridge",
        "vulnerability": "Centralisation risk: admin role of `TokenManagerEth` can rug pull all Eth from the bridge"
    },
    {
        "name": "2022-02-skale",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-skale#g-01-refundgasbyuser-function-can-use-unchecked-directory-and-slight-refactor-may-reduce-gas-fee",
        "vulnerability": "`refundGasByUser` function can use unchecked directory and slight refactor may reduce gas fee."
    },
    {
        "name": "2022-02-skale",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-skale#g-02-withdrawfunds-function-can-reduce-the-gas-cost-by-reordering-the-condition-of-if-statement",
        "vulnerability": "`withdrawFunds` function can reduce the gas cost by reordering the condition of if statement."
    },
    {
        "name": "2022-02-skale",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-skale#g-03-withdrawfunds-function-can-reduce-gas-cost-by-using-unchecked",
        "vulnerability": "`withdrawFunds` function can reduce gas cost by using unchecked"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-10-nft-owner-can-change-token-uri",
        "vulnerability": "NFT owner can change token URI"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-07-transferredamount-on-mainnet-can-be-drained-if-a-malicious-account-can-mint-more-tokens-on-schain",
        "vulnerability": "`transferredAmount` on mainnet can be drained if a malicious account can mint more tokens on Schain"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-11-loss-of-pending-messages-if-any-in-case-removeconnectedchain-is-called",
        "vulnerability": "Loss of pending messages (if any) in case removeConnectedChain is called"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-04-tokenmanagererc20sol-uses-transferfrom-instead-of-safetransferfrom",
        "vulnerability": "TokenManagerERC20.sol uses transferFrom() instead of safeTransferFrom()"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-01-transactions-can-be-replayed-when-a-connectedchain-is-removed-and-then-reconnected",
        "vulnerability": "Transactions can be replayed when a connectedChain is removed and then reconnected"
    },
    {
        "name": "2022-02-skale",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-skale#h-02-gas-pricing-can-be-used-to-extort-funds-from-users-of-schain-owner",
        "vulnerability": "Gas pricing can be used to extort funds from users of SChain owner"
    },
    {
        "name": "2022-02-skale",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-skale#l-03-erc1155supply-vulnerability-in-openzeppelin-contracts",
        "vulnerability": "ERC1155Supply vulnerability in OpenZeppelin Contracts"
    },
    {
        "name": "2022-02-skale",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-skale#g-04-i++-can-be-wrapped-by-unchecked-directory",
        "vulnerability": "`i++` can be wrapped by `unchecked` directory."
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-03-s2s-transfer-from-the-origin-schain-to-another-schain-with-automatic-deploy-disabled-can-cause-funds-to-be-frozen",
        "vulnerability": "S2S Transfer from the origin schain to another schain with automatic deploy disabled can cause funds to be frozen"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-08-burnerrole-can-burn-any-amount-of-etherc20-from-an-arbitrary-address",
        "vulnerability": "`BURNER_ROLE` can burn any amount of EthErc20 from an arbitrary address"
    },
    {
        "name": "2022-02-skale",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-skale#l-04-missing-zero-address-check-in-the-setter-functions-and-initialize-functions",
        "vulnerability": "Missing zero-address check in the setter functions and initialize functions"
    },
    {
        "name": "2022-02-skale",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-skale#l-01-front-runnable-initializers",
        "vulnerability": "Front-runnable Initializers"
    },
    {
        "name": "2022-02-skale",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-skale#l-02-initializer-reentrancy-may-lead-to-double-initialization",
        "vulnerability": "Initializer reentrancy may lead to double initialization"
    },
    {
        "name": "2022-02-skale",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-skale#h-01-reentrancy-in-messageproxyforschain-leads-to-replay-attacks",
        "vulnerability": "Reentrancy in `MessageProxyForSchain` leads to replay attacks"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-09-not-compatible-with-rebasingdeflationaryinflationary-tokens",
        "vulnerability": "Not compatible with Rebasing/Deflationary/Inflationary tokens"
    },
    {
        "name": "2022-02-skale",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-skale#m-05-schain-owners-can-rug-pull-users-funds",
        "vulnerability": "Schain owners can rug pull users\u2019 funds"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-juicebox#l-02-calls-may-run-out-of-gas-until-arrays-are-reduced-in-size",
        "vulnerability": "Calls may run out of gas until arrays are reduced in size"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-juicebox#g-02-store-elements-that-are-used-multiple-times",
        "vulnerability": "Store elements that are used multiple times"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-juicebox#h-02-token-change-can-be-frontrun--blocking-token",
        "vulnerability": "Token Change Can Be Frontrun, Blocking Token"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-15-locked-splits-can-be-updated",
        "vulnerability": "Locked splits can be updated"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-13-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-02-return-values-of-approve-not-checked",
        "vulnerability": "Return values of `approve()` not checked"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-04-juicebox-project-owner-can-create-a-honeypot-to-cause-grief",
        "vulnerability": "Juicebox project owner can create a honeypot to cause grief"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-juicebox#l-03-dust-amounts-not-compensated--even-if-not-using-price-oracle",
        "vulnerability": "Dust amounts not compensated, even if not using price oracle"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-07-processfees-may-fail-due-to-exceed-gas-limit",
        "vulnerability": "processFees() may fail due to exceed gas limit"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-06-code-credits-fee-on-transfer-tokens-for-amount-stated--not-amount-transferred",
        "vulnerability": "Code credits fee-on-transfer tokens for amount stated, not amount transferred"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-14-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-14-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-09-unhandled-chainlink-revert-would-lock-all-price-oracle-access",
        "vulnerability": "Unhandled chainlink revert would lock all price oracle access"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-10-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-10-grieffer-beneficiary-can-cause-dos",
        "vulnerability": "Grieffer beneficiary can cause DOS"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-12-resolved-once-a-token-is-set-for-a-project--it-can-not-be-changed-anymore",
        "vulnerability": "Resolved. Once a token is set for a project, it can not be changed anymore."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-07-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-11-addfeedfor-should-check-if-inverse-feed-already-exists",
        "vulnerability": "addFeedFor should check if inverse feed already exists"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-juicebox#h-01-resolved-appropriate-validations-to-prevent-price-staleness--round-incompleteness-and-a-negative-price-is-put-in-place-now",
        "vulnerability": "Resolved. Appropriate validations to prevent price staleness, round incompleteness and a negative price is put in place now."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-08-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-10**18",
        "vulnerability": "Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-10-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-13-jbtoken-mint-function-could-mint-arbitrary-amount-of-tokens",
        "vulnerability": "JBToken: mint function could mint arbitrary amount of tokens"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-juicebox#g-03-make-loop-increment-unchecked",
        "vulnerability": "Make loop increment unchecked"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-14-more-outstanding-reserved-tokens-are-distributed-than-anticipated-leading-to-less-redeemable-assets-and-therefore-loss-of-user-funds",
        "vulnerability": "More outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-12-changetokenof-makes-it-impossible-for-holders-of-oldtoken-to-redeem-the-overflowed-assets",
        "vulnerability": "changeTokenOf makes it impossible for holders of oldToken to redeem the overflowed assets."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-01-confusing-variable-names",
        "vulnerability": "Confusing variable names"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-juicebox#h-01-oracle-data-feed-can-be-outdated-yet-used-anyways-which-will-impact-payment-logic",
        "vulnerability": "Oracle data feed can be outdated yet used anyways which will impact payment logic"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-11-lines-are-too-long",
        "vulnerability": "Lines are too long"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-12-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-02-lack-of-check-on-muststartatorafter",
        "vulnerability": "Lack of check on `mustStartAtOrAfter`"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-juicebox#h-02-resolved-changing-an-already-set-project-token-is-not-possible-anymore",
        "vulnerability": "Resolved. Changing an already set project token is not possible anymore."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-02-resolved-muststartatorafter-and-the-start-date-of-an-upcoming-funding-cycle-are-now-validated-to-fit-in-uint56",
        "vulnerability": "Resolved. `mustStartAtOrAfter` and the start date of an upcoming funding cycle are now validated to fit in `uint56`."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-11-resolved-an-additional-check-has-been-added-to-prevent-adding-a-price-feed-for-the-inverse-pair",
        "vulnerability": "Resolved. An additional check has been added to prevent adding a price feed for the inverse pair."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-15-resolved-two-additional-sameness-checks-for-the-split-properties-preferclaimed-and-preferaddtobalance-have-been-added",
        "vulnerability": "Resolved. Two additional sameness checks for the split properties `preferClaimed` and `preferAddToBalance` have been added."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-16-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing",
        "vulnerability": "Not using the named return variables anywhere in the function is confusing"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-03-use-a-safe-transfer-helper-library-for-erc20-transfers",
        "vulnerability": "Use a safe transfer helper library for ERC20 transfers"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-07-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-04-non-assembly-method-available",
        "vulnerability": "Non-assembly method available"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-06-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-juicebox#l-05-unsafe-use-of-transfertransferfrom-with-ierc20",
        "vulnerability": "Unsafe use of `transfer()`/`transferFrom()` with `IERC20`"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-05-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-01-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-03-resolved-openzeppelins-safeerc20-library-is-now-used-to-ensure-consistent-handling-of-erc20-token-transfers",
        "vulnerability": "Resolved. OpenZeppelins\u2019 `SafeERC20` library is now used to ensure consistent handling of ERC20 token transfers."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-08-reentrancy-issues-on-function-distributepayoutsof",
        "vulnerability": "Reentrancy issues on function `distributePayoutsOf`"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-08-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-04-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-15-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-05-discounted-fee-calculation-is-imprecise-and-calculates-less-fees-than-anticipated",
        "vulnerability": "Discounted fee calculation is imprecise and calculates less fees than anticipated"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-juicebox#l-04-splits-cant-be-locked-once-the-timestamp-passes-typeuint48max",
        "vulnerability": "Splits can\u2019t be locked once the timestamp passes `type(uint48).max`"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-05-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-06-resolved-the-delta-of-the-token-balance-before-and-after-a-transfer-is-used-instead-of-the-amount-stated-to-handle-fee-on-transfer-tokens-appropriately",
        "vulnerability": "Resolved. The delta of the token balance before and after a transfer is used instead of the amount stated to handle fee-on-transfer tokens appropriately."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-13-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-01-duplicated-locked-splits-can-be-discarded",
        "vulnerability": "Duplicated locked splits can be discarded"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-juicebox#g-01-run-checks-first",
        "vulnerability": "Run checks first"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-juicebox#m-09-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-09-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-juicebox#n-03-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-07-juicebox",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-juicebox#l-01-weight-of-one-being-used-as-zero-not-documented",
        "vulnerability": "Weight of one being used as zero not documented"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-03-inconsistent-logic-of-increase-unlock-time-to-the-expired-locks",
        "vulnerability": "Inconsistent logic of increase unlock time to the expired locks"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-04-error-in-updating-checkpoint-in-the-increaseunlocktime-function",
        "vulnerability": "Error in Updating `_checkpoint` in the `increaseUnlockTime` Function"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-06-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "Constants should be defined rather than using magic numbers"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#l-01-upgrade-open-zeppelin-contract-dependency",
        "vulnerability": "Upgrade Open Zeppelin contract dependency"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#l-03-unspecific-compiler-version-pragma",
        "vulnerability": "Unspecific Compiler Version Pragma"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-08-attackers-can-abuse-the-quitlock-function-to-get-a-very-large-amount-of-votes",
        "vulnerability": "Attackers can abuse the `quitLock` function to get a very large amount of votes"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-06-increaseunlocktime-missing-checkpoint-for-delegated-values",
        "vulnerability": "`increaseUnlockTime` missing `_checkpoint` for delegated values"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#h-01-unsafe-usage-of-erc20-transfer-and-transferfrom",
        "vulnerability": "Unsafe usage of ERC20 transfer and transferFrom"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-02-attacker-contract-can-avoid-being-blocked-by-blocklistsol",
        "vulnerability": "Attacker contract can avoid being blocked by BlockList.sol"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-04-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing indexed fields"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-01-the-current-implementation-of-the-votingescrow-contract-doesnt-support-fee-on-transfer-tokens",
        "vulnerability": "The current implementation of the VotingEscrow contract doesn\u2019t support fee on transfer tokens"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-02-large-multiples-of-ten-should-use-scientific-notation",
        "vulnerability": "Large multiples of ten should use scientific notation"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-01-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#l-02-no-transfer-ownership-pattern",
        "vulnerability": "No Transfer Ownership Pattern"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-07-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "Public functions not called by the contract should be declared external instead"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-03-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-10**18",
        "vulnerability": "Use scientific notation (e.g. 1e18) rather than exponentiation (e.g. 10**18)"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-05-unsafe-casting-from-int128-can-cause-wrong-accounting-of-locked-amounts",
        "vulnerability": "Unsafe casting from int128 can cause wrong accounting of locked amounts"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#h-02-delegators-can-avoid-lock-commitments-if-they-can-reliably-get-themselves-blocked-when-needed",
        "vulnerability": "Delegators can Avoid Lock Commitments if they can Reliably get Themselves Blocked when Needed"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#m-07-blocking-through-change-of-blocklist-could-trap-tokens",
        "vulnerability": "Blocking Through Change of Blocklist Could Trap Tokens"
    },
    {
        "name": "2022-08-fiatdao",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-fiatdao#n-05-missing-natspec",
        "vulnerability": "Missing NatSpec"
    },
    {
        "name": "2022-03-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-timeswap#h-01-wrong-timing-of-check-allows-users-to-withdraw-collateral-without-paying-for-the-debt",
        "vulnerability": "Wrong timing of check allows users to withdraw collateral without paying for the debt"
    },
    {
        "name": "2022-03-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-timeswap#m-02-the-pay-function-can-still-be-dosed",
        "vulnerability": "The `pay()` function can still be DOSed"
    },
    {
        "name": "2022-03-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-timeswap#m-01-underflown-variable-in-borrowgivendebtethcollateral-function",
        "vulnerability": "Underflown variable in `borrowGivenDebtETHCollateral` function"
    },
    {
        "name": "2022-03-timeswap",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-timeswap#l-01-collateralizeddebttokenuri-fails-when-pairs-asset-or-collateral-token-have-low-decimals",
        "vulnerability": "CollateralizedDebt.tokenURI fails when pair\u2019s asset or collateral token have low decimals"
    },
    {
        "name": "2022-03-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-timeswap#m-03-npm-dependency-confusion-unclaimed-npm-package-and-scopeorg",
        "vulnerability": "NPM Dependency confusion. Unclaimed NPM Package and Scope/Org"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-14-pa1dbidsharesfortoken-returns-incorrect-bidsharescreatorvalue",
        "vulnerability": "PA1D#bidSharesForToken returns incorrect `bidShares.creator.value`"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-11-source-contract-can-steal-nfts-from-users",
        "vulnerability": "Source contract can steal NFTs from users"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-19-holographerc721approve-not-eip-721-compliant",
        "vulnerability": "`HolographERC721.approve` not EIP-721 compliant"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-06-bad-source-of-randomness",
        "vulnerability": "Bad source of randomness"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-18-leak-of-value-when-interacting-with-an-erc721-enforcer-contract",
        "vulnerability": "Leak of value when interacting with an ERC721 enforcer contract"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-09-holographerc20-breaks-composability-by-forcing-usage-of-draft-proposal-eip-4524",
        "vulnerability": "`HolographERC20` breaks composability by forcing usage of draft proposal EIP-4524"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-20-use-assembly-to-check-for-address0",
        "vulnerability": "Use assembly to check for address(0)"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-08-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of uints/ints smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-04-an-attacker-can-manipulate-each-pod-and-gain-an-advantage-over-the-remainder-operators",
        "vulnerability": "An attacker can manipulate each pod and gain an advantage over the remainder Operators"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-17-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "Public functions not called by the contract should be declared external instead"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-14-prefix-increments-cheaper-than-postfix-increments",
        "vulnerability": "Prefix increments cheaper than Postfix increments"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-03-beaming-job-might-freeze-on-dest-chain-under-some-conditions--leading-to-owner-losing-temporarily-access-to-token",
        "vulnerability": "Beaming job might freeze on dest chain under some conditions, leading to owner losing (temporarily) access to token"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-12-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "abi.encode() is less efficient than abi.encodePacked()"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-01-dont-initialize-variables-with-default-value",
        "vulnerability": "Don\u2019t Initialize Variables with Default Value"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-03-layerzeromodule-miscalculates-gas--risking-loss-of-assets",
        "vulnerability": "LayerZeroModule miscalculates gas, risking loss of assets"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-05-use-calldata-instead-of-memory",
        "vulnerability": "Use calldata instead of memory"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-11-+=-costs-more-gas-than-=-+-for-state-variables",
        "vulnerability": "+= costs more gas than = + for state variables"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-05-mev-operator-can-bribe-miner-and-steal-honest-operators-bond-amount-if-gas-price-went-high",
        "vulnerability": "MEV: Operator can bribe miner and steal honest operator\u2019s bond amount if gas price went high"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-12-bond-tokens-hlg-can-get-permanently-stuck-in-operator",
        "vulnerability": "Bond tokens (HLG) can get permanently stuck in operator"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-16-approvalall-event-is-missing-parameters",
        "vulnerability": "`ApprovalAll` event is missing parameters"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-01-isowner--onlyowner-checks-can-be-bypassed-by-attacker-in-erc721erc20-implementations",
        "vulnerability": "`isOwner` / `onlyOwner` checks can be bypassed by attacker in ERC721/ERC20 implementations"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-16-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting require() statements that use && saves gas"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-04-incorrect-implementation-of-erc721-may-have-bad-consequences-for-receiver",
        "vulnerability": "Incorrect implementation of ERC721 may have bad consequences for receiver"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-17-wrong-slashing-calculation-rewards-for-operator-that-did-not-do-his-job",
        "vulnerability": "Wrong slashing calculation rewards for operator that did not do his job"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-25-internal-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "internal functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-01-an-attacker-can-lock-operator-out-of-the-pod-by-setting-gas-limit-thats-higher-than-the-block-gas-limit-of-dest-chain",
        "vulnerability": "An attacker can lock operator out of the pod by setting gas limit that\u2019s higher than the block gas limit of dest chain"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-22-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using storage instead of memory for structs/arrays saves gas"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-07-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-10-holographable-tokens-can-be-reinitialized",
        "vulnerability": "Holographable tokens can be reinitialized"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-13-implementation-code-does-not-align-with-the-business-requirement-users-are-not-charged-with-withdrawn-fee-when-user-unbound-token-in-holographoperatorsol",
        "vulnerability": "Implementation code does not align with the business requirement: Users are not charged with withdrawn fee when user unbound token in `HolographOperator.sol`"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-02-payouttoken[s]-is-not-compatible-with-tokens-with-missing-return-value",
        "vulnerability": "`_payoutToken[s]()` is not compatible with tokens with missing return value"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-07-attacker-can-force-chaotic-operator-behavior",
        "vulnerability": "Attacker can force chaotic operator behavior"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-18-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-07-failed-job-cant-be-recovered-nft-may-be-lost",
        "vulnerability": "Failed job can\u2019t be recovered. NFT may be lost."
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-08-payouteth-calculates-balance-with-an-offset--always-leaving-dust-eth-in-the-contract",
        "vulnerability": "`_payoutEth()` calculates `balance` with an offset, always leaving dust `ETH` in the contract"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-02-cache-array-length-outside-of-loop",
        "vulnerability": "Cache Array Length Outside of Loop"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-06-gas-price-spikes-cause-the-selected-operator-to-be-vulnerable-to-frontrunning-and-be-slashed",
        "vulnerability": "Gas price spikes cause the selected operator to be vulnerable to frontrunning and be slashed"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-21-use-selfbalance",
        "vulnerability": "Use selfbalance()"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-19-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-08-gas-limit-check-is-inaccurate--leading-to-an-operator-being-able-to-fail-a-job-intentionally",
        "vulnerability": "Gas limit check is inaccurate, leading to an operator being able to fail a job intentionally"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-09-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using bools for storage incurs overhead"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-05-it-is-possible-that-operator-loses-sent-eth-after-calling-holographoperator-contracts-executejob-function",
        "vulnerability": "It is possible that operator loses sent ETH after calling `HolographOperator` contract\u2019s `executeJob` function"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-15-use-bytes32-instead-of-string",
        "vulnerability": "Use bytes32 instead of string"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-03-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using > 0 costs more gas than != 0 when used on a uint in a require() statement"
    },
    {
        "name": "2022-10-holograph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-holograph#m-15-holographerc721safetransferfrom-not-compliant-with-eip-721",
        "vulnerability": "`HolographERC721.safeTransferFrom` not compliant with EIP-721"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-13-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than revert()/require() strings to save gas"
    },
    {
        "name": "2022-10-holograph",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-10-holograph#h-02-if-user-sets-a-low-gasprice-the-operator-would-have-to-choose-between-being-locked-out-of-the-pod-or-executing-the-job-anyway",
        "vulnerability": "If user sets a low `gasPrice` the operator would have to choose between being locked out of the pod or executing the job anyway"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-04-long-revert-strings",
        "vulnerability": "Long Revert Strings"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-10-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--for-example-when-used-in-for--and-while-loops",
        "vulnerability": "++i/i++ should be unchecked{++i}/unchecked{i++} when it is not possible for them to overflow, for example when used in for- and while-loops"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-06-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked payable"
    },
    {
        "name": "2022-10-holograph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-holograph#g-23-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "internal functions only called once can be inlined to save gas"
    },
    {
        "name": "2021-10-tally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tally#m-02-unused-erc20-tokens-are-not-refunded",
        "vulnerability": "Unused ERC20 tokens are not refunded"
    },
    {
        "name": "2021-10-tally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tally#m-01-swapsol-implements-potentially-dangerous-transfer",
        "vulnerability": "Swap.sol implements potentially dangerous transfer"
    },
    {
        "name": "2021-10-tally",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-tally#h-02-wrong-calculation-of-erc20delta-and-ethdelta",
        "vulnerability": "Wrong calculation of `erc20Delta` and `ethDelta`"
    },
    {
        "name": "2021-10-tally",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-tally#h-01-arbitrary-contract-call-allows-attackers-to-steal-erc20-from-users-wallets",
        "vulnerability": "Arbitrary contract call allows attackers to steal ERC20 from users\u2019 wallets"
    },
    {
        "name": "2021-10-tally",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tally#m-03-users-can-avoid-paying-fees-for-eth-swaps",
        "vulnerability": "Users can avoid paying fees for ETH swaps"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-10-previousprices-is-never-updated-upon-syncing-token-price",
        "vulnerability": "`previousPrices` Is Never Updated Upon Syncing Token Price"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-04-vaderreservereimburseimpermanentloss-improperly-converts-usdv-to-vader",
        "vulnerability": "`VaderReserve.reimburseImpermanentLoss` improperly converts USDV to VADER"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-12-using-single-total-native-reserve-variable-for-synth-and-non-synth-reserves-of-vaderpoolv2-can-lead-to-losses-for-synth-holders",
        "vulnerability": "Using single total native reserve variable for synth and non-synth reserves of `VaderPoolV2` can lead to losses for synth holders"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-08-reserve-does-not-properly-apply-prices-of-vader-and-usdv-tokens",
        "vulnerability": "Reserve does not properly apply prices of VADER and USDV tokens"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-06-oracle-can-be-manipulted-to-consider-only-a-single-pair-for-pricing",
        "vulnerability": "Oracle can be manipulted to consider only a single pair for pricing"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-02-vaderpoolv2-owner-can-steal-all-user-assets-which-are-approved-vaderpoolv2",
        "vulnerability": "`VaderPoolV2` owner can steal all user assets which are approved `VaderPoolV2`"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-06-lps-of-vaderpoolv2-can-manipulate-pool-reserves-to-extract-funds-from-the-reserve",
        "vulnerability": "LPs of `VaderPoolV2` can manipulate pool reserves to extract funds from the reserve."
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-03-oracle-doesnt-calculate-usdvvader-price-correctly",
        "vulnerability": "Oracle doesn\u2019t calculate USDV/VADER price correctly"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-07-redemption-value-of-synths-can-be-manipulated-to-drain-vaderpoolv2-of-all-native-assets-in-the-associated-pair",
        "vulnerability": "Redemption value of synths can be manipulated to drain `VaderPoolV2` of all native assets in the associated pair"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-03-no-way-to-remove-gasthrottle-from-vaderpool-after-deployment",
        "vulnerability": "No way to remove `GasThrottle` from `VaderPool` after deployment"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-13-council-veto-protection-does-not-work",
        "vulnerability": "Council veto protection does not work"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-01-vaderpoolv2mintfungible-exposes-users-to-unlimited-slippage",
        "vulnerability": "`VaderPoolV2.mintFungible` exposes users to unlimited slippage"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-14-denial-of-service",
        "vulnerability": "Denial of service"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-02-adding-pair-of-the-same-foreignasset-would-replace-oracle-of-earlier-entry",
        "vulnerability": "Adding pair of the same `foreignAsset` would replace oracle of earlier entry"
    },
    {
        "name": "2021-12-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-vader#m-05-users-can-lock-themselves-out-of-being-able-to-convert-veth--becoming-stuck-with-the-deprecated-asset",
        "vulnerability": "Users can lock themselves out of being able to convert VETH, becoming stuck with the deprecated asset"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-01-vaderpoolv2-minting-synths-&-fungibles-can-be-frontrun",
        "vulnerability": "`VaderPoolV2` minting synths & fungibles can be frontrun"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-11-totalliquidityweight-is-updated-when-adding-new-token-pairs-which-skews-price-data-for-getvaderprice-and-getusdvprice",
        "vulnerability": "`totalLiquidityWeight` Is Updated When Adding New Token Pairs Which Skews Price Data For `getVaderPrice` and `getUSDVPrice`"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-05-oracle-returns-an-improperly-scaled-usdvvader-price",
        "vulnerability": "Oracle returns an improperly scaled USDV/VADER price"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-09-usdvsol-mint-and-burn-amounts-are-incorrect",
        "vulnerability": "`USDV.sol` Mint and Burn Amounts Are Incorrect"
    },
    {
        "name": "2021-12-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-vader#h-04-vader-twap-averages-wrong",
        "vulnerability": "Vader TWAP averages wrong"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-12-excess-eth-is-not-refunded",
        "vulnerability": "Excess eth is not refunded"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-01-attacker-can-list-an-nft-they-own-and-inflate-to-zero-all-users-contributions--keeping-the-nft-and-all-the-money",
        "vulnerability": "Attacker can list an NFT they own and inflate to zero all users\u2019 contributions, keeping the NFT and all the money"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-02-possibility-to-burn-all-eth-in-crowdfund-under-some-circumstances",
        "vulnerability": "Possibility to burn all ETH in Crowdfund under some circumstances"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-07-attacker-can-dos-private-party-by-donating-eth-then-calling-buy",
        "vulnerability": "Attacker can DOS private party by donating ETH then calling buy"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-04-tokendistributor-erc777-tokenstosend-hook-can-be-exploited-to-drain-contract",
        "vulnerability": "TokenDistributor: ERC777 tokensToSend hook can be exploited to drain contract"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-06-auctioncrowdfund-if-the-contract-was-bid-on-before-the-nft-was-gifted-to-the-contract--lastbid-will-not-be-totalcontributions",
        "vulnerability": "AuctionCrowdfund: If the contract was bid on before the NFT was gifted to the contract, lastBid will not be totalContributions"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-03-only-part-of-keccak256-is-used-as-hash--making-it-susceptible-to-collision-attacks",
        "vulnerability": "Only part of `keccak256()` is used as hash, making it susceptible to collision attacks"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-11-maximum-bid-will-always-be-used-in-auction",
        "vulnerability": "Maximum bid will always be used in Auction"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-02-previously-nominated-delegate-can-reset-the-delegation",
        "vulnerability": "Previously nominated delegate can reset the delegation"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-05-the-settledprice-maybe-exceed-maximumprice",
        "vulnerability": "The settledPrice maybe exceed maximumPrice"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-03-a-majority-attack-can-easily-bypass-zora-auction-stage-in-openseaproposal-and-steal-the-nft-from-the-party",
        "vulnerability": "A majority attack can easily bypass Zora auction stage in OpenseaProposal and steal the NFT from the party."
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-10-possible-that-unanimous-votes-is-unachievable",
        "vulnerability": "Possible that unanimous votes is unachievable"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-05-arbitrarycallsproposalsol-and-listonopenseaproposalsol-safeguards-can-be-bypassed-by-cancelling-in-progress-proposal-allowing-the-majority-to-steal-nft",
        "vulnerability": "ArbitraryCallsProposal.sol and ListOnOpenseaProposal.sol safeguards can be bypassed by cancelling in-progress proposal allowing the majority to steal NFT"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-01-partygovernance-can-vote-multiple-times-by-transferring-nft-in-same-block-as-proposal",
        "vulnerability": "PartyGovernance: Can vote multiple times by transferring NFT in same block as proposal"
    },
    {
        "name": "2022-09-party",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-party#h-06-a-majority-attack-can-steal-precious-nft-from-the-party-by-crafting-and-chaining-two-proposals",
        "vulnerability": "A majority attack can steal precious NFT from the party by crafting and chaining two proposals"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-09-calling-transfereth-function-can-revert-if-receiver-input-corresponds-to-a-contract-that-is-unable-to-receive-eth-through-its-receive-or-fallback-function",
        "vulnerability": "Calling `transferEth` function can revert if `receiver` input corresponds to a contract that is unable to receive ETH through its `receive` or `fallback` function"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-04-nft-owner-can-stuck-crowdfund-user-funds",
        "vulnerability": "NFT Owner can stuck Crowdfund user funds"
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-08-early-contributor-can-always-become-majority-of-crowdfund-leading-to-rugging-risks",
        "vulnerability": "Early contributor can always become majority of crowdfund leading to rugging risks."
    },
    {
        "name": "2022-09-party",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-party#m-07-attacker-can-force-auctioncrowdfunds-to-bid-their-entire-contribution-up-to-maxbid",
        "vulnerability": "Attacker can force AuctionCrowdfunds to bid their entire contribution up to maxBid"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-02-mutual-consent-cannot-be-revoked-and-stays-valid-forever",
        "vulnerability": "Mutual consent cannot be revoked and stays valid forever"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-09-variable-balance-erc20-support",
        "vulnerability": "Variable balance ERC20 support"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-06-the-lender-can-draw-out-extra-credit-token-from-borrowers-account",
        "vulnerability": "The lender can draw out extra credit token from borrower\u2019s account"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-04-borrower-can-close-a-credit-without-repaying-debt",
        "vulnerability": "Borrower can close a credit without repaying debt"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-03-addcredit--increasecredit-cannot-be-called-by-lender-first-when-token-is-eth",
        "vulnerability": "addCredit / increaseCredit cannot be called by lender first when token is ETH"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-01-call-to-declareinsolvent-would-revert-when-contract-status-reaches-liquidation-point-after-repayment-of-credit-position-1",
        "vulnerability": "Call to `declareInsolvent()` would revert when contract status reaches liquidation point after repayment of credit position 1"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-10-addresscall{valuex}-should-be-used-instead-of-payabletransfer",
        "vulnerability": "`address.call{value:x}()` should be used instead of `payable.transfer()`"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-01-borrower-can-by-mistake-add-own-money-to-credit-if-credit-is-in-eth",
        "vulnerability": "Borrower can by mistake add own money to credit if credit is in ETH"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-05-reentrancy-bug-allows-lender-to-steal-other-lenders-funds",
        "vulnerability": "Reentrancy bug allows lender to steal other lenders funds"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-07-whitelisted-functions-arent-scoped-to-revenue-contracts-and-may-lead-to-unnoticed-calls-due-to-selector-clashing",
        "vulnerability": "Whitelisted functions aren\u2019t scoped to revenue contracts and may lead to unnoticed calls due to selector clashing"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-11-lender-can-reject-closing-a-position",
        "vulnerability": "Lender can reject closing a position"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-05-borrower-can-craft-a-borrow-that-cannot-be-liquidated--even-by-arbiter",
        "vulnerability": "Borrower can craft a borrow that cannot be liquidated, even by arbiter."
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-03-borrowerlender-excessive-eth-not-refunded-and-permanently-locked-in-protocol",
        "vulnerability": "Borrower/Lender excessive ETH not refunded and permanently locked in protocol"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-06-repaying-a-line-of-credit-with-a-higher-than-necessary-claimed-revenue-amount-will-force-the-borrower-into-liquidation",
        "vulnerability": "Repaying a line of credit with a higher than necessary claimed revenue amount will force the borrower into liquidation"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-08-mistakenly-sent-eth-could-be-locked",
        "vulnerability": "Mistakenly sent eth could be locked"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-debtdao#h-02-non-existing-revenue-contract-can-be-passed-to-claimrevenue-to-send-all-tokens-to-treasury",
        "vulnerability": "Non-existing revenue contract can be passed to claimRevenue to send all tokens to treasury"
    },
    {
        "name": "2022-11-debtdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-debtdao#m-04-lender-can-trade-claimtoken-in-a-malicious-way-to-steal-the-borrowers-money-via-claimandrepay-in-spigotedline-by-using-malicious-zeroextradedata",
        "vulnerability": "Lender can trade claimToken in a malicious way to steal the borrower\u2019s money via `claimAndRepay()` in SpigotedLine by using malicious zeroExTradeData"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-01-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-04-unnecessary-memory-operations-with-an-immutable-variable",
        "vulnerability": "Unnecessary memory operations with an `immutable` variable"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-08-++i-costs-less-gas-compared-to-i++-or-i-+=-1-same-for---i-vs-i---or-i--=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1` (same for `--i` vs `i--` or `i -= 1`)"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-02-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-08-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-mimo#h-04-incorrect-implementation-of-access-control-in-mimoproxyexecute",
        "vulnerability": "Incorrect implementation of access control in MIMOProxy:execute"
    },
    {
        "name": "2022-08-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-mimo#h-02-automation--management-can-be-set-for-not-yet-existing-vault",
        "vulnerability": "Automation / management can be set for not yet existing vault"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-02-malicious-targets-can-manipulate-mimoproxy-permissions",
        "vulnerability": "Malicious targets can manipulate MIMOProxy permissions"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-09-incrementsdecrements-can-be-unchecked-in-for-loops",
        "vulnerability": "Increments/decrements can be unchecked in for-loops"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-08-if-a-mimoproxy-owner-destroys-their-proxy--they-cannot-deploy-another-from-the-same-address",
        "vulnerability": "If a MIMOProxy owner destroys their proxy, they cannot deploy another from the same address"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-07-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for-loop`"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-03-use-of-the-memory-keyword-when-storage-should-be-used",
        "vulnerability": "Use of the `memory` keyword when `storage` should be used"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-10-it-costs-more-gas-to-initialize-variables-with-their-default-value-than-letting-the-default-value-be-applied",
        "vulnerability": "It costs more gas to initialize variables with their default value than letting the default value be applied."
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-01-vault-rebalancing-can-be-exploited-if-two-vaults-rebalance-into-the-same-vault",
        "vulnerability": "Vault rebalancing can be exploited if two vaults rebalance into the same vault"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-06-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-05-mimomanagedrebalancesolrebalance-calculates-managerfee-incorrectly",
        "vulnerability": "MIMOManagedRebalance.sol#rebalance calculates managerFee incorrectly"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-05-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function",
        "vulnerability": "The result of a function call should be cached rather than re-calling the function"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-13-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-08-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-mimo#h-03-registrysol-fails-to-deliver-expected-functionality",
        "vulnerability": "Registry.sol fails to deliver expected functionality"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-04-persisted-msgvalue-in-a-loop-of-delegate-calls-can-be-used-to-drain-eth-from-your-proxy",
        "vulnerability": "Persisted msg.value in a loop of delegate calls can be used to drain ETH from your proxy"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-11-upgrade-pragma",
        "vulnerability": "Upgrade pragma"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-06-proxyfactory-can-circumvent-proxyregistry",
        "vulnerability": "ProxyFactory can circumvent ProxyRegistry"
    },
    {
        "name": "2022-08-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-mimo#g-12-optimizations-with-assembly",
        "vulnerability": "Optimizations with assembly"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-03-malicious-manipulation-of-gas-reserve-can-deny-access-to-mimoproxy",
        "vulnerability": "Malicious manipulation of gas reserve can deny access to MIMOProxy"
    },
    {
        "name": "2022-08-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-mimo#m-07-vaultowner-can-front-run-rebalance-with-setautomation-to-lower-incentives",
        "vulnerability": "`vaultOwner` Can Front-Run `rebalance()` With `setAutomation()` To Lower Incentives"
    },
    {
        "name": "2022-08-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-mimo#h-01-mimoemptyvaultsol-executeoperation-does-not-transfer-the-vault-leftover-assets-to-the-owner--it-is-locked-in-the-mimoemptyvault",
        "vulnerability": "`MIMOEmptyVault.sol executeOperation()` does not transfer the Vault leftover assets to the owner, it is locked in the `MIMOEmptyVault`"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-02-burning-a-erc1155enumerable-token-doesnt-remove-it-from-the-enumeration",
        "vulnerability": "Burning a `ERC1155Enumerable` token doesn\u2019t remove it from the enumeration"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-05-save-gas-with-the-use-of-the-import-statement",
        "vulnerability": "Save gas with the use of the import statement"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-03-avoid-using-state-variable-in-emit-130-gas",
        "vulnerability": "Avoid using `state variable` in emit (130 gas)"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-25-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-04-change-public-state-variable-visibility-to-private",
        "vulnerability": "Change `public` state variable visibility to `private`"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-09-avoid-using-external-call",
        "vulnerability": "Avoid using external call"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-18-openzeppelins-reentrancyguard-contract-is-gas-optimized",
        "vulnerability": "OpenZeppelin\u2019s ReentrancyGuard contract is gas-optimized"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-10-gas-overflow-during-iteration-dos",
        "vulnerability": "Gas overflow during iteration (DoS)"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-17-using-openzeppelin-ownable2stepsol-is-gas-efficient",
        "vulnerability": "Using Openzeppelin Ownable2Step.sol is gas efficient"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-11-move-owner-checks-to-a-modifier-for-gas-efficant",
        "vulnerability": "Move owner checks to a modifier for gas efficant"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-01-currentindex-is-incorrectly-updated;-breaking-the-erc1155-enumerable-implementation",
        "vulnerability": "`_currentIndex` is incorrectly updated; breaking the ERC1155 enumerable implementation"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-02-remove-checkdoesnotexist-function",
        "vulnerability": "Remove `checkDoesNotExist` function"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-01-gas-saving-is-achieved-by-removing-the-delete-keyword-~60k",
        "vulnerability": "Gas saving is achieved by removing the `delete` keyword (~60k)"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-15->=-costs-less-gas-than->",
        "vulnerability": "`>=` costs less gas than `>`"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-12-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-05-unexpected-overflow-for-fullmathadd512-which-can-result-in-irregular-behavior",
        "vulnerability": "unexpected overflow for `FullMath.add512()` which can result in irregular behavior"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-13-use-nested-if-and--avoid-multiple-check-combinations",
        "vulnerability": "Use nested if and, avoid multiple check combinations"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-24-avoid-contract-existence-checks-by-using-solidity-version-0810-or-later",
        "vulnerability": "Avoid contract existence checks by using solidity version 0.8.10 or later"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-timeswap#h-02-timeswapv2liquiditytoken-should-not-use-totalsupply+1-as-tokenid",
        "vulnerability": "TimeswapV2LiquidityToken should not use `totalSupply()+1` as tokenId"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-07-using-delete-instead-of-setting-struct-0-saves-gas",
        "vulnerability": "Using `delete` instead of setting struct `0` saves gas"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-timeswap#h-01-rebalance-logic-is-wrong-and-this-distorts-the-pools-important-states",
        "vulnerability": "Rebalance logic is wrong and this distorts the pool\u2019s important states"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-22-use-assembly-to-write-address-storage-values",
        "vulnerability": "Use `assembly` to write _address storage values_"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-26-upgrade-soliditys-optimizer",
        "vulnerability": "Upgrade Solidity\u2019s optimizer"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-timeswap#h-03-the-collect-function-will-always-transfer-zero-fees--losing-feespositions-without-receiving-fees!",
        "vulnerability": "The `collect()` function will always TRANSFER ZERO fees, losing _feesPositions without receiving fees!"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-14-sort-solidity-operations-using-short-circuit-mode",
        "vulnerability": "Sort Solidity operations using short-circuit mode"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-06-gas-savings-can-be-achieved-by-changing-the-model-for-assigning-value-to-the-structure-260-gas",
        "vulnerability": "Gas savings can be achieved by changing the model for assigning value to the structure (260 gas)"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-08-in-div-512-function--quotient-0-aggregate-operation-is-used-with-unchecked-to-save-gas",
        "vulnerability": "In `div 512` function, `quotient 0` aggregate operation is used with unchecked to save gas"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-21-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of uints/ints smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-20-remove-import-forge-stdconsolesol",
        "vulnerability": "Remove import `forge-std/console.sol`"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-23-setting-the-constructor-to-payable",
        "vulnerability": "Setting the _constructor_ to `payable`"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-07-mint-function-does-not-update-liquidityposition-state-of-caller-before-minting-lp-tokens-this",
        "vulnerability": "`Mint` function does not update `LiquidityPosition` state of caller before minting LP tokens. This"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-03-fee-on-transfer-tokens-will-not-behave-as-expected",
        "vulnerability": "Fee on transfer tokens will not behave as expected"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-27-open-the-optimizer",
        "vulnerability": "Open the optimizer"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-06-ownedtokensindex-is-shared-by-different-owners--as-a-result--removetokenfromalltokensenumeration-might-remove-the-wrong-tokenid",
        "vulnerability": "`_ownedTokensIndex` is SHARED by different owners, as a result, `_removeTokenFromAllTokensEnumeration` might remove the wrong tokenId."
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-16-using-uniswapv3-muldiv-function-is-gas-optimized",
        "vulnerability": "Using UniswapV3 `mulDiv` function is gas-optimized"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-timeswap#g-19-save-gas-with-the-use-of-the-import-statement",
        "vulnerability": "Save gas with the use of the import statement"
    },
    {
        "name": "2023-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-timeswap#m-04-sqrtdiscriminant-can-be-calculated-wrong",
        "vulnerability": "sqrtDiscriminant can be calculated wrong"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-04-avoid-contract-existence-checks-by-using-solidity-version-0810-or-later",
        "vulnerability": "Avoid contract existence checks by using solidity version 0.8.10 or later"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-25-dont-use-msgsender-if-not-supporting-eip-2771",
        "vulnerability": "Don\u2019t use `_msgSender()` if not supporting EIP-2771"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-10-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-13-avoid-the-use-of-sensitive-terms",
        "vulnerability": "Avoid the use of sensitive terms"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-24-user-can-lose-funds",
        "vulnerability": "User can lose funds"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-29-centralisation-risk-voterproxy-owner-may-set-the-operate-to-an-address-they-own-and-drain-all-token-balances",
        "vulnerability": "Centralisation RIsk: `VoterProxy` owner may set the `operate` to an address they own and drain all token balances"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-01-update-to-state-var-should-only-happen-once-in-a-function",
        "vulnerability": "Update to state var should only happen once in a function"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-20-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-05-duplicate-lp-token-could-lead-to-incorrect-deposits",
        "vulnerability": "Duplicate LP token could lead to incorrect deposits"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-15-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-vetoken#h-01-gauge-rewards-stuck-in-voterproxy-contract-when-extrarewardstashv3-is-used-within-angle-deployment",
        "vulnerability": "Gauge Rewards Stuck In `VoterProxy` Contract When `ExtraRewardStashV3` Is Used Within Angle Deployment"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-vetoken#l-01-getapy-returns-the-wrong-answer-during-leap-years",
        "vulnerability": "`getAPY()` returns the wrong answer during leap years"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-03-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-01-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-14-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-07-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-06-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-17-missing-sane-bounds-on-asset-weights",
        "vulnerability": "Missing sane bounds on asset weights"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-22-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-08-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-21-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-10-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-09-in-notifyrewardamount-of-ve3drewardpool-and-baserewardpool-some-tokes-will-be-locked-and-not-distributed-becasue-of-rounding-error",
        "vulnerability": "in notifyRewardAmount() of VE3DRewardPool and BaseRewardPool some tokes will be locked and not distributed becasue of rounding error"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-20-contracts-should-be-robust-to-upgrades-of-underlying-gauges-and-eventually-changes-of-the-underlying-tokens",
        "vulnerability": "Contracts should be robust to upgrades of underlying gauges and eventually changes of the underlying tokens"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-07-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-24-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-13-unused-rewardsbecause-of-totalsupply==0-for-some-period-will-be-locked-forever-in-ve3drewardpool-and-baserewardpool",
        "vulnerability": "Unused rewards(because of totalSupply()==0 for some period) will be locked forever in VE3DRewardPool and BaseRewardPool"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-26-ve3dlockersol-wrong-implementation-of-inversely-traverse-for-loops-always-reverts",
        "vulnerability": "`VE3DLocker.sol` Wrong implementation of inversely traverse for loops always reverts"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-28-extrarewardstashv2s-stashrewards-can-become-unavailable",
        "vulnerability": "ExtraRewardStashV2\u2019s stashRewards can become unavailable"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-04-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-12-malicious-operator-can-rug-pull",
        "vulnerability": "Malicious operator can rug pull"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-16-admin-privilege-in-minting-to-arbitrary-address-allows-operator-to-dilute-tokens",
        "vulnerability": "Admin Privilege in minting to arbitrary address allows operator to dilute tokens"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-22-ve3drewardpool-allows-the-same-reward-address-to-be-added-multiple-times-to-the-extrarewards-array",
        "vulnerability": "VE3DRewardPool allows the same reward address to be added multiple times to the `extraRewards` array"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-03-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-13-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-25-consistently-check-account-balance-before-and-after-transfers-for-fee-on-transfer-discrepancies",
        "vulnerability": "Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-03-no-check-for-existing-extrarewards-during-push",
        "vulnerability": "No check for existing extraRewards during push"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-14-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-19-dont-use-safemath-once-the-solidity-version-is-080-or-greater",
        "vulnerability": "Don\u2019t use `SafeMath` once the solidity version is 0.8.0 or greater"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-04-user-can-lose-extra-rewards",
        "vulnerability": "User can lose extra rewards"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-10-unable-to-get-rewards-if-admin-withdraws-$ve3d-tokens-from-vetokenminter-contract",
        "vulnerability": "Unable To Get Rewards If Admin Withdraws $VE3D tokens From `VeTokenMinter` Contract"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-11-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once",
        "vulnerability": "`keccak256()` should only need to be called on a specific string literal once"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-09-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-18-dont-compare-boolean-expressions-to-boolean-literals",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-02-ve3drewardpoolsol-is-incompatible-with-balvebal",
        "vulnerability": "VE3DRewardPool.sol is incompatible with Bal/veBal"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-07-ve3drewardpool-and-ve3dlocker-adds-to-an-unbounded-array-which-may-potentially-lock-all-rewards-in-the-contract",
        "vulnerability": "`VE3DRewardPool` and `VE3DLocker` adds to an unbounded array which may potentially lock all rewards in the contract"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-19-ve3drewardpool-claim-in-loop-depend-on-pausable-token",
        "vulnerability": "`VE3DRewardPool` claim in loop depend on pausable token"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-02-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-09-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-23-baserewardpools-rewardpertokenstored-can-be-inflated-and-rewards-can-be-stolen",
        "vulnerability": "BaseRewardPool\u2019s `rewardPerTokenStored` can be inflated and rewards can be stolen"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-23-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-11-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-06-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-08-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-12-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-vetoken#l-02-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-11-misconfiguration-of-fees-incentive-might-cause-tokens-to-be-stuck-in-booster-contract",
        "vulnerability": "Misconfiguration of Fees Incentive Might Cause Tokens To Be Stuck In `Booster` Contract"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-17-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-14-deposited-staking-tokens-can-be-lost-if-rewards-token-info-added-by-mistake-in-addreward-in-ve3drewardpool-and-there-is-no-checking-to-ensure-this-would-not-happen-ve3token-for-one-reward-was-equal-to-stacking-token",
        "vulnerability": "Deposited staking tokens can be lost if rewards token info added by mistake in addReward() in VE3DRewardPool and there is no checking to ensure this would not happen (ve3Token for one reward was equal to stacking token)"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-21-voterproxy-incorrectly-assumes-a-1-1-mapping-between-the-gauge-and-the-lp-tokens",
        "vulnerability": "`VoterProxy` incorrectly assumes a 1-1 mapping between the gauge and the LP tokens."
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-01-compromised-owner-can-drain-funds-fromvetokenmintersol",
        "vulnerability": "compromised `owner` can drain funds from`VeTokenMinter.sol`"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-12-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-06-incorrectly-set-maxtime-to-be-in-line-with-the-locking-maxtime-of-each-vetoken-could-render-the-deposit-of-this-contract-to-be-unfunctional-or-even-freeze-assets-inside-the-contract",
        "vulnerability": "Incorrectly set `_maxTime` to be in line with the locking `maxTime` of each veToken could render the `deposit` of this contract to be unfunctional or even freeze assets inside the contract"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-16-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-08-not-updating-totalweight-when-operator-is-removed-in-vetokenminter",
        "vulnerability": "Not updating `totalWeight` when operator is removed in `VeTokenMinter`"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-vetoken#n-05-large-multiples-of-ten-should-use-scientific-notation-eg-1e6-rather-than-decimal-literals-eg-1000000--for-readability",
        "vulnerability": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-vetoken#g-02-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-27-boosters-shutdownpool-can-freeze-user-funds",
        "vulnerability": "Booster\u2019s shutdownPool can freeze user funds"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-18-governance-can-arbitrarily-burn-vetoken-from-any-address",
        "vulnerability": "Governance can arbitrarily burn VeToken from any address"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-15-owner-should-be-allowed-to-change-feemanager",
        "vulnerability": "Owner should be allowed to change feeManager"
    },
    {
        "name": "2022-05-vetoken",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-vetoken#m-30-incorrect-deployment-parameters",
        "vulnerability": "Incorrect deployment parameters"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-19-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-04-ineffective-twav-implementation",
        "vulnerability": "Ineffective TWAV Implementation"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-04-input-array-lengths-may-differ",
        "vulnerability": "Input array lengths may differ"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-10-reentrancy-bug-in-baskets-withdraw-multiple-tokens-function-which-gives-attacker-ability-to-transfer-basket-ownership-and-spend-it-but-withdraw-all-the-tokens-out-of-basket",
        "vulnerability": "Reentrancy bug in Basket\u2019s withdraw multiple tokens function which gives attacker ability to transfer basket ownership and spend it but withdraw all the tokens out of basket"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-03-inconsistent-version-of-english-being-used",
        "vulnerability": "Inconsistent version of English being used"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-10-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-02-twavsolgettwav-will-revert-when-timestamp->-4294967296",
        "vulnerability": "`Twav.sol#_getTwav()` will revert when timestamp > 4294967296"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-13-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use `immutable` rather than `constant`"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-07-vulnerable-to-cross-chain-replay-attacks-due-to-static-domainseparatordomainseparator",
        "vulnerability": "Vulnerable to cross-chain replay attacks due to static `DOMAIN_SEPARATOR`/`domainSeparator`"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-16-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-07-updatetwav-and-gettwav-will-revert-when-cumulativeprice-overflows",
        "vulnerability": "`_updateTwav()` and `_getTwav()` will revert when cumulativePrice overflows"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-05-lack-of-sanity-check-on-initialtokensupply-and-initialtokenprice-can-lead-to-a-seller-losing-his-nft",
        "vulnerability": "Lack of sanity check on _initialTokenSupply and _initialTokenPrice can lead to a seller losing his NFT"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-06-nibblvault-in-the-buy-function--users-can-avoid-paying-fees",
        "vulnerability": "NibblVault: In the buy function, users can avoid paying fees"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-11-cast-is-more-restrictive-than-the-type-of-the-variable-being-assigned",
        "vulnerability": "Cast is more restrictive than the type of the variable being assigned"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-06-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-02-misleading-variable-name",
        "vulnerability": "Misleading variable name"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-06-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-01-consider-addings-checks-for-signature-malleability",
        "vulnerability": "Consider addings checks for signature malleability"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-09-nibblvault-buyout-duration-longer-than-update-timelock",
        "vulnerability": "NibblVault buyout duration longer than update timelock"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-04-missing-initializer-modifier-on-constructor",
        "vulnerability": "Missing `initializer` modifier on constructor"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-07-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-03-user-could-change-the-state-of-the-system-while-in-pause-mode",
        "vulnerability": "User Could Change The State Of The System While In `Pause` Mode"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-01-buyout-cannot-be-rejected-when-paused",
        "vulnerability": "Buyout cannot be rejected when paused"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-09-incorrect-comments",
        "vulnerability": "Incorrect comments"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-12-missing-event-and-or-timelock-for-critical-parameter-change",
        "vulnerability": "Missing event and or timelock for critical parameter change"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-05-safemint-should-be-used-rather-than-mint-wherever-possible",
        "vulnerability": "`_safeMint()` should be used rather than `_mint()` wherever possible"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-12-basket-nft-have-no-name-and-symbol",
        "vulnerability": "Basket NFT have no name and symbol"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-08-non-assembly-method-available",
        "vulnerability": "Non-assembly method available"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-08-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-09-2**<n>---1-should-be-re-written-as-typeuint<n>max",
        "vulnerability": "`2**<n> - 1` should be re-written as `type(uint<n>).max`"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-08-[pnm-004]-calculation-of-secondaryreserveratio-can-be-overflowed",
        "vulnerability": "[PNM-004] Calculation of `_secondaryReserveRatio` can be overflowed"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-02-ecrecover-not-checked-for-signer-address-of-zero",
        "vulnerability": "`ecrecover()` not checked for signer address of zero"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-14-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-17-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nibbl#m-11-twav-gettwav-will-return-a-wrong-result-when-twavobservations[twav-blocknumbers---1]timestamp-=-0",
        "vulnerability": "Twav. _getTwav() will return a wrong result when twavObservations[TWAV_ BLOCK_NUMBERS - 1].timestamp = 0."
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-03-return-values-of-transfertransferfrom-not-checked",
        "vulnerability": "Return values of `transfer()`/`transferFrom()` not checked"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-20-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-15-lines-are-too-long",
        "vulnerability": "Lines are too long"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nibbl#l-01-buyouts-that-occur-during-the-timestamp-wrap-will-have-valuation-errors",
        "vulnerability": "Buyouts that occur during the timestamp wrap will have valuation errors"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-05-contract-implements-interface-without-extending-the-interface",
        "vulnerability": "Contract implements interface without extending the interface"
    },
    {
        "name": "2022-06-nibbl",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nibbl#n-18-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#h-02-freeze-bridge-via-non-utf8-token-namesymboldenom",
        "vulnerability": "Freeze Bridge via Non-UTF8 Token Name/Symbol/Denom"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#h-01-cannot-actually-submit-evidence",
        "vulnerability": "Cannot actually submit evidence"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#m-03-win-all-relayer-rewards",
        "vulnerability": "Win all relayer rewards"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#h-03-freeze-the-bridge-via-large-erc20-namessymbolsdenoms",
        "vulnerability": "Freeze The Bridge Via Large ERC20 Names/Symbols/Denoms"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#m-04-incorrect-accounting-on-transfer-on-feedeflationary-tokens-in-gravity",
        "vulnerability": "Incorrect accounting on transfer-on-fee/deflationary tokens in `Gravity`"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#m-01-the-function-updatevalset-does-not-have-enough-sanity-checks",
        "vulnerability": "The function `updateValset` does not have enough sanity checks"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#m-02-crash-eth-oracle-on-any-logiccallevent",
        "vulnerability": "Crash Eth Oracle On Any `LogicCallEvent`"
    },
    {
        "name": "2021-08-gravitybridge",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-gravitybridge#h-04-large-validator-setsrapid-validator-set-updates-may-freeze-the-bridge-or-relayers",
        "vulnerability": "Large Validator Sets/Rapid Validator Set Updates May Freeze the Bridge or Relayers"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-20-non-exploitable-re-entrancies",
        "vulnerability": "Non-exploitable re-entrancies"
    },
    {
        "name": "2022-04-abranft",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-abranft#h-04-lender-is-able-to-seize-the-collateral-by-changing-the-loan-parameters",
        "vulnerability": "Lender is able to seize the collateral by changing the loan parameters"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-11-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-01-should-ensure-loan-collateral-is-not-immediately-seizable",
        "vulnerability": "Should ensure loan collateral is not immediately seizable"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-04-calls-to-boringmathto128-are-redundant",
        "vulnerability": "Calls to `BoringMath.to128()` are redundant"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-14-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-05-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-12-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-04-abranft",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-abranft#h-02-the-return-value-success-of-the-get-function-of-the-inftoracle-interface-is-not-checked",
        "vulnerability": "The return value `success` of the get function of the INFTOracle interface is not checked"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-18-consider-making-contract-pausable-to-have-some-protection-against-ongoing-exploits",
        "vulnerability": "Consider making contract `Pausable` to have some protection against ongoing exploits"
    },
    {
        "name": "2022-04-abranft",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-abranft#h-05-mistake-while-checking-ltv-to-lender-accepted-ltv",
        "vulnerability": "Mistake while checking LTV to lender accepted LTV"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-17-a-best-practice-is-to-check-for-signature-malleability",
        "vulnerability": "A best practice is to check for signature malleability"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-03-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-01-consider-supporting-cryptopunks-and-etherrocks",
        "vulnerability": "Consider supporting CryptoPunks and EtherRocks"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-04-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-04-calls-incorrectly-allow-non-zero-msgvalue",
        "vulnerability": "Calls incorrectly allow non-zero `msg.value`"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-21-comments-should-be-enforced-by-requires",
        "vulnerability": "Comments should be enforced by `require()`s"
    },
    {
        "name": "2022-04-abranft",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-abranft#m-01-reentrancy-at-requestloan-allows-requesting-a-loan-without-supplying-collateral",
        "vulnerability": "Reentrancy at _requestLoan allows requesting a loan without supplying collateral"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-01-nftpairinit-and-nftpairwithoracleinit-storage-usage-optimization",
        "vulnerability": "`NFTPair.init` and `NFTPairWithOracle.init`: Storage usage optimization"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-07-updateloanparams-replace-memory-with-calldata-and-public-with-external",
        "vulnerability": "`updateLoanParams()`: Replace `memory` with `calldata` and `public` with `external`"
    },
    {
        "name": "2022-04-abranft",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-abranft#h-03-critical-oracle-manipulation-risk-by-lender",
        "vulnerability": "Critical Oracle Manipulation Risk by Lender"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-06-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-05-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-02-pairs-do-not-implement-erc721tokenreceiver",
        "vulnerability": "Pairs do not implement `ERC721TokenReceiver`"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-03-some-compilers-cant-handle-two-different-contracts-with-the-same-name",
        "vulnerability": "Some compilers can\u2019t handle two different contracts with the same name"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-13-fee-mechanics-should-be-better-described",
        "vulnerability": "Fee mechanics should be better described"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-08-2**<n>---1-should-be-re-written-as-typeuint<n>max",
        "vulnerability": "`2**<n> - 1` should be re-written as `type(uint<n>).max`"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-19-statesflags-should-use-enums-rather-than-separate-constants",
        "vulnerability": "States/flags should use `Enum`s rather than separate constants"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-07-interfaces-should-be-moved-to-separate-files",
        "vulnerability": "Interfaces should be moved to separate files"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-02-contracts-should-be-refactored-to-extend-a-base-contract-with-the-common-functionality",
        "vulnerability": "Contracts should be refactored to extend a base contract with the common functionality"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-08-updateloanparams-copying-in-memory-can-be-more-expensive-than-using-the-storage-keyword",
        "vulnerability": "`updateLoanParams()`: Copying in memory can be more expensive than using the `storage` keyword"
    },
    {
        "name": "2022-04-abranft",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-abranft#h-01-avoidance-of-liquidation-via-malicious-oracle",
        "vulnerability": "Avoidance of Liquidation Via Malicious Oracle"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-10-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-15-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-11-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-02-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-16-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-10-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-04-abranft",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-abranft#g-09-lend-copying-in-memory-can-be-more-expensive-than-using-the-storage-keyword",
        "vulnerability": "`_lend()`: Copying in memory can be more expensive than using the `storage` keyword"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-05-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-06-ecrecover-not-checked-for-zero-result",
        "vulnerability": "`ecrecover` not checked for zero result"
    },
    {
        "name": "2022-04-abranft",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-abranft#l-03-incorrect-comments",
        "vulnerability": "Incorrect comments"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-09-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-abranft",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-abranft#n-06-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-09-fraxlendpairsol-is-not-fully-eip-4626-compliant",
        "vulnerability": "FraxlendPair.sol is not fully EIP-4626 compliant"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-01-outdated-compiler",
        "vulnerability": "Outdated compiler"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-01-penalty-rate-is-used-for-pre-maturity-date-as-well",
        "vulnerability": "Penalty rate is used for pre-maturity date as well"
    },
    {
        "name": "2022-08-frax",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-frax#h-01-any-borrower-with-bad-debt-can-be-liquidated-multiple-times-to-lock-funds-in-the-lending-pair",
        "vulnerability": "Any borrower with bad debt can be liquidated multiple times to lock funds in the lending pair"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-12-denial-of-service-in-globalpause-by-wrong-logic",
        "vulnerability": "Denial of service in globalPause by wrong logic"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-04-wrong-percent-for-fraxlendpaircoredirtyliquidationfee",
        "vulnerability": "Wrong percent for `FraxlendPairCore.dirtyLiquidationFee`."
    },
    {
        "name": "2022-08-frax",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-frax#h-02-liquidate-doesnt-mark-off-bad-debt--leading-to-a-\u2018last-lender-to-withdraw-loses-scenario",
        "vulnerability": "`liquidate()` doesn\u2019t mark off bad debt, leading to a \u2018last lender to withdraw loses\u2019 scenario"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-10-decimals-limitation-limits-the-tokens-that-can-be-used",
        "vulnerability": "Decimals limitation limits the tokens that can be used"
    },
    {
        "name": "2022-08-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-frax#n-01-use-encode-instead-of-encodepacked-for-hashig",
        "vulnerability": "Use `encode` instead of `encodePacked` for hashig"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-06-division-before-multiple-can-lead-to-precision-errors",
        "vulnerability": "Division before multiple can lead to precision errors"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-03-lack-of-ack-during-owner-change",
        "vulnerability": "Lack of ACK during owner change"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-03-impossible-to-setcreationcode-with-code-size-less-than-13k",
        "vulnerability": "Impossible to `setCreationCode()` with code size less than 13K"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-02-safeerc20-mismatch-logics",
        "vulnerability": "`SafeERC20` mismatch logics"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-11-fraxlend-pair-deployment-can-be-front-run-by-a-custom-pair-deployment",
        "vulnerability": "Fraxlend pair deployment can be front-run by a custom pair deployment"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-13-no-incentives-to-write-off-bad-debt-when-remaining-collateral-is-very-small",
        "vulnerability": "No incentives to write off bad debt when remaining collateral is very small"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-02-interest-can-be-significantly-lower-if-addinterest-isnt-called-frequently-enough",
        "vulnerability": "Interest can be significantly lower if `addInterest` isn\u2019t called frequently enough"
    },
    {
        "name": "2022-08-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-frax#n-02-wrong-comment-of-toborrowamount-function",
        "vulnerability": "Wrong comment of `toBorrowAmount` function"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-07-fraxlendpairchangefee-doesnt-update-interest-before-changing-fee",
        "vulnerability": "FraxlendPair.changeFee() doesn\u2019t update interest before changing fee."
    },
    {
        "name": "2022-08-frax",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-frax#n-03-confusing-variables-as-to-how-they-are-stored",
        "vulnerability": "Confusing variables as to how they are stored"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-08-owner-of-fraxlendpair-can-set-arbitrary-time-lock-contract-address-to-circumvent-time-lock",
        "vulnerability": "Owner of `FraxlendPair` can set arbitrary time lock contract address to circumvent time lock"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-05-liquidator-might-end-up-paying-much-more-asset-than-collateral-received",
        "vulnerability": "Liquidator might end up paying much more asset than collateral received"
    },
    {
        "name": "2022-08-frax",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-frax#m-06-fraxlendpairsettimelock-allows-the-owner-to-reset-time-lock-address",
        "vulnerability": "FraxlendPair#setTimeLock: Allows the owner to reset TIME _LOCK_ ADDRESS"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-07-ownable-and-pausable",
        "vulnerability": "`Ownable` and `Pausable`"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-05-bypass-timelock-restrictions",
        "vulnerability": "Bypass `TimeLock` restrictions"
    },
    {
        "name": "2022-08-frax",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-frax#l-04-constant-salt",
        "vulnerability": "Constant salt"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-03-forget-to-check-\u201csome-manifolds-contracts-of-erc-2981-return-addressthis--0-when-royalties-are-not-defined\u201d-in-3rd-priority---marketfeessol",
        "vulnerability": "Forget to check \u201cSome manifolds contracts of ERC-2981 return (address(this), 0) when royalties are not defined\u201d in 3rd priority - MarketFees.sol"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-08-mintfromfixedpricesale-for-a-custom-contract-can-lead-to-users-losing-funds",
        "vulnerability": "`mintFromFixedPriceSale` for a custom contract can lead to users losing funds"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-02-nft-creator-sales-revenue-recipients-can-steal-gas",
        "vulnerability": "NFT creator sales revenue recipients can steal gas"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-05-use-calldata-instead-of-memory",
        "vulnerability": "Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-04-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-12-incrementsdecrements-can-be-unchecked-in-for-loops",
        "vulnerability": "Increments/decrements can be unchecked in for-loops"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-05-user-may-get-all-of-the-creator-fees-by-specifying-high-number-for-himself",
        "vulnerability": "User may get all of the creator fees by specifying high number for himself"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-04-possible-to-bypass-saleconfiglimitperaccount",
        "vulnerability": "Possible to bypass saleConfig.limitPerAccount"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-09-pre-solidity-0813->-0-is-less-efficient-than-!=-0-for-unsigned-integers",
        "vulnerability": "Pre-Solidity `0.8.13`: `> 0` is less efficient than `!= 0` for unsigned integers"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-11-++i-costs-less-gas-compared-to-i++-or-i-+=-1-same-for---i-vs-i---or-i--=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1` (same for `--i` vs `i--` or `i -= 1`)"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-06-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-02-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-03-avoid-emitting-a-storage-variable-when-a-memory-value-is-available",
        "vulnerability": "Avoid emitting a storage variable when a memory value is available"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-10-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for-loop`"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-07-nft-of-nft-collection-or-nft-drop-collection-can-be-locked-when-calling-mint-or-mintcountto-function-to-mint-it-to-a-contract-that-does-not-support-erc721-protocol",
        "vulnerability": "NFT of NFT collection or NFT drop collection can be locked when calling _mint or mintCountTo function to mint it to a contract that does not support ERC721 protocol"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-13-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-08-redundant-check",
        "vulnerability": "Redundant check"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-01-check-for-bytessymbollength->-0-before-calling-nftdropcollectioninitialize--like-its-done-for-nftcollectioninitialize",
        "vulnerability": "Check for `bytes(_symbol).length > 0` before calling `NFTDropCollection.initialize()`, like it\u2019s done for `NFTCollection.initialize()`"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-06-malicious-creator-can-steal-from-collectors-upon-minting-with-a-custom-nft-contract",
        "vulnerability": "Malicious Creator can steal from collectors upon minting with a custom NFT contract"
    },
    {
        "name": "2022-08-foundation",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-foundation#g-07-duplicated-conditions-should-be-refactored-to-a-modifier-or-function-to-save-deployment-costs",
        "vulnerability": "Duplicated conditions should be refactored to a modifier or function to save deployment costs"
    },
    {
        "name": "2022-08-foundation",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-foundation#m-01-creator-fees-may-be-burned",
        "vulnerability": "Creator fees may be burned"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-08-emitting-storage-values-instead-of-the-memory-one",
        "vulnerability": "Emitting storage values instead of the memory one."
    },
    {
        "name": "2023-01-ondo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-ondo#m-05-setpendingredemptionbalance-may-cause-the-users-cash-token-to-be-lost",
        "vulnerability": "`setPendingRedemptionBalance()` may cause the user\u2019s cash token to be lost"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-12-unused-constructor",
        "vulnerability": "Unused constructor"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-01-using-immutable-on-variables-that-are-only-set-in-the-constructor-and-never-after-21k-gas-per-var",
        "vulnerability": "Using immutable on variables that are only set in the constructor and never after (2.1k gas per var)"
    },
    {
        "name": "2023-01-ondo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-ondo#l-03-giving-kyc-status-to-address0-should-be-forbidden",
        "vulnerability": "Giving KYC status to address(0) should be forbidden"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-04-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function",
        "vulnerability": "The result of a function call should be cached rather than re-calling the function"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-09-unnecessary-if-statement-in-checkandupdateredeemlimit",
        "vulnerability": "Unnecessary if statement in `_checkAndUpdateRedeemLimit`"
    },
    {
        "name": "2023-01-ondo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-ondo#m-01-admin-should-be-able-to-refund-or-redeem-the-sanctioned-users",
        "vulnerability": "Admin should be able to refund or redeem the sanctioned users"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-13-natspec-is-incomplete-in-the-pausing-functions",
        "vulnerability": "NatSpec is incomplete in the pausing functions"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-18-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-02-constructor-lacks-address0-check",
        "vulnerability": "Constructor lacks address(0) check"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-06-internalprivate-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "Internal/Private functions only called once can be inlined to save gas"
    },
    {
        "name": "2023-01-ondo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-ondo#h-01-loss-of-user-funds-when-completing-cash-redemptions",
        "vulnerability": "Loss of user funds when completing CASH redemptions"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-10-pauseunpause-functions-should-emit-event-to-notify-users",
        "vulnerability": "Pause/Unpause functions should emit event to notify users"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-14-unnecessary-kyc-check-on-the-payer",
        "vulnerability": "Unnecessary KYC check on the payer"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-07-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-13-using-unchecked-blocks-to-save-gas",
        "vulnerability": "Using unchecked blocks to save gas"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-06-initialize-function-does-not-use-the-initializer-modifier",
        "vulnerability": "Initialize function does not use the initializer modifier"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-03-missing-check-to-ensure-epoch-duration-isnt-set-as-zero",
        "vulnerability": "Missing check to ensure epoch duration isn\u2019t set as zero"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-05-create-your-own-import-names-instead-of-using-the-regular-ones",
        "vulnerability": "Create your own import names instead of using the regular ones"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-17-caching-global-variables-is-more-expensive-than-using-the-actual-variableuse-msgsender-instead-of-caching-it",
        "vulnerability": "Caching global variables is more expensive than using the actual variable(use msg.sender instead of caching it)"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-05-cache-the-mapping-values-rather-than-fetch-it-every-time",
        "vulnerability": "Cache the mapping values rather than fetch it every time"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-16-reorder-the-require-statements-to-have-the-less-gas-consuming-before-the-expensive-one",
        "vulnerability": "Reorder the require statements to have the less gas consuming before the expensive one"
    },
    {
        "name": "2023-01-ondo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-ondo#m-02-first-deposit-bug",
        "vulnerability": "First Deposit Bug"
    },
    {
        "name": "2023-01-ondo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-ondo#l-01-token-transfer-to-address0-should-be-avoided",
        "vulnerability": "Token transfer to address(0) should be avoided"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-07-use-delete-to-clear-variables-instead-of-zero-assignment",
        "vulnerability": "Use delete to clear variables instead of zero assignment"
    },
    {
        "name": "2023-01-ondo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-ondo#l-05-completeredemptions-is-vulnerable-to-admin-mistakes",
        "vulnerability": "`completeRedemptions` is vulnerable to admin mistakes"
    },
    {
        "name": "2023-01-ondo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-ondo#l-04-redeem-limit-shouldnt-be-set-below-the-currentmintamount",
        "vulnerability": "Redeem limit shouldn\u2019t be set below the `currentMintAmount`"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-09-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using storage instead of memory for structs/arrays saves gas"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-11-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated require()/revert() checks should be refactored to a modifier or function"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-11-two-kyc-checks-made-on-the-same-redeemers",
        "vulnerability": "Two KYC checks made on the same redeemers"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-12-x-+=-y-costs-more-gas-than-x-=-x-+-y-for-state-variables",
        "vulnerability": "x += y costs more gas than x = x + y for state variables"
    },
    {
        "name": "2023-01-ondo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-ondo#m-03-cashmanagersetepochduration-functions-has-inconsistent-output",
        "vulnerability": "`CashManager.setEpochDuration` functions has inconsistent output"
    },
    {
        "name": "2023-01-ondo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-ondo#l-02-wrong-if-statement-in-the-function-setmintfee",
        "vulnerability": "Wrong if statement in the function `setMintFee`"
    },
    {
        "name": "2023-01-ondo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-ondo#m-04-kycregistry-is-susceptible-to-signature-replay-attack",
        "vulnerability": "KYCRegistry is susceptible to signature replay attack."
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-01-mandatory-checks-for-extra-safety",
        "vulnerability": "Mandatory checks for extra safety"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-08-confusing-function-comment-on-setminimumdepositamount",
        "vulnerability": "Confusing function comment on `setMinimumDepositAmount`"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-15-splitting-require-statements-that-use-&&-saves-gas---saves-8-gas-per-&&",
        "vulnerability": "Splitting require() statements that use && saves gas - (saves 8 gas per &&)"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-14-using-unchecked-blocks-to-save-gas---increments-in-for-loop-can-be-unchecked--save-30-40-gas-per-loop-iteration",
        "vulnerability": "Using unchecked blocks to save gas - Increments in for loop can be unchecked ( save 30-40 gas per loop iteration)"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-02-tightly-pack-storage-variablesoptimize-the-order-of-variable-declaration-gas-savings-6k-in-total",
        "vulnerability": "Tightly pack storage variables/optimize the order of variable declaration (Gas Savings: 6k in total)"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-03-massive-15k-per-tx-gas-savings---use-1-and-2-for-reentrancy-guard",
        "vulnerability": "Massive 15k per tx gas savings - use 1 and 2 for Reentrancy guard"
    },
    {
        "name": "2023-01-ondo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-ondo#n-04-upgradeable-contract-is-missing-a-gap[50]-storage-variable",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable"
    },
    {
        "name": "2023-01-ondo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-ondo#g-10-refactor-the-code-here-to-avoid-storage-readings",
        "vulnerability": "Refactor the code here to avoid storage readings"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-08-using-vulnerable-dependency-of-openzeppelin",
        "vulnerability": "Using vulnerable dependency of OpenZeppelin"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-21-eip1559-rewards-received-by-syndicate-during-the-period-when-it-has-no-registered-knots-can-be-lost",
        "vulnerability": "EIP1559 rewards received by syndicate during the period when it has no registered knots can be lost"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-23-calling-updatenoderunnerwhiteliststatus-function-always-reverts",
        "vulnerability": "Calling `updateNodeRunnerWhitelistStatus` function always reverts"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-06-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-07-giantlp-with-a-transferhookprocessor-cant-be-burned--users-funds-will-be-stuck-in-the-giant-pool",
        "vulnerability": "GiantLP with a `transferHookProcessor` cant be burned, users\u2019 funds will be stuck in the Giant Pool"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-02-rewards-of-giantmevandfeespool-can-be-locked-for-all-users",
        "vulnerability": "Rewards of `GiantMevAndFeesPool` can be locked for all users"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-08-function-withdraweth-from-giantmevandfeespool-can-steal-most-of-eth-because-of-idleeth-is-reduced-before-burning-token",
        "vulnerability": "function `withdrawETH` from `GiantMevAndFeesPool` can steal most of eth because of idleETH is reduced before burning token"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-13-possible-reentrancy-and-fund-theft-in-withdrawdeth-of-giantsavethvaultpool-because-there-is-no-whitelist-check-for-user-provided-vaults-and-there-is-no-reentrancy-defense",
        "vulnerability": "Possible reentrancy and fund theft in `withdrawDETH()` of `GiantSavETHVaultPool` because there is no whitelist check for user provided Vaults and there is no reentrancy defense"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-11-banned-bls-public-keys-can-still-be-registered",
        "vulnerability": "Banned BLS public keys can still be registered"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-26-compromised-or-malicious-dao-can-restrict-actions-of-node-runners-who-are-not-malicious",
        "vulnerability": "Compromised or malicious DAO can restrict actions of node runners who are not malicious"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-09-use-safetransferownership-instead-of-transferownership-function",
        "vulnerability": "Use `safeTransferOwnership` instead of `transferOwnership` function"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-10-giantmevandfeespoolbringunusedethbackintogiantpool-function-loses-the-addition-of-the-idleeth-which-allows-attackers-to-steal-most-of-eth-from-the-giant-pool",
        "vulnerability": "`GiantMevAndFeesPool.bringUnusedETHBackIntoGiantPool` function loses the addition of the idleETH which allows attackers to steal most of eth from the Giant Pool"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-14-fund-lose-in-function-bringunusedethbackintogiantpool-of-giantsavethvaultpool-eth-gets-back-to-giant-pool-but-the-value-of-idleeth-dont-increase",
        "vulnerability": "Fund lose in function `bringUnusedETHBackIntoGiantPool()` of `GiantSavETHVaultPool` ETH gets back to giant pool but the value of idleETH don\u2019t increase"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-08-lines-are-too-long",
        "vulnerability": "Lines are too long"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-07-ownablesmartwallet-multiple-approvals-can-lead-to-unwanted-ownership-transfers",
        "vulnerability": "OwnableSmartWallet: Multiple approvals can lead to unwanted ownership transfers"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-31-vaults-can-be-griefed-to-not-be-able-to-be-used-for-deposits",
        "vulnerability": "Vaults can be griefed to not be able to be used for deposits"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-06-bringunusedethbackintogiantpool-can-cause-stuck-ether-funds-in-giant-pool",
        "vulnerability": "`BringUnusedETHBackIntoGiantPool` can cause stuck ether funds in Giant Pool"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-03-remove-unused-code",
        "vulnerability": "Remove unused code"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-14-avoid-variable-names-that-can-shade",
        "vulnerability": "Avoid variable names that can shade"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-03-giant-pools-cannot-receive-eth-from-vaults",
        "vulnerability": "Giant pools cannot receive ETH from vaults"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-30-giant-pools-are-prone-to-user-griefing--preventing-their-holdings-from-being-staked",
        "vulnerability": "Giant pools are prone to user griefing, preventing their holdings from being staked"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-15-giantmevandfeespoolpreviewaccumulatedeth-function-\u201caccumulated\u201d-variable-is-not-updated-correctly-in-for-loop-leading-to-result-that-is-too-low",
        "vulnerability": "`GiantMevAndFeesPool.previewAccumulatedETH` function: \u201caccumulated\u201d variable is not updated correctly in for loop leading to result that is too low"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-08-dao-admin-in-liquidstakingmanagersol-can-rug-the-registered-node-operator-by-stealing-their-fund-in-the-smart-wallet-via-arbitrary-execution",
        "vulnerability": "DAO admin in `LiquidStakingManager.sol` can rug the registered node operator by stealing their fund in the smart wallet via arbitrary execution."
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-01-freezing-of-funds---hacker-can-prevent-users-withdraws-in-giant-pools",
        "vulnerability": "Freezing of funds - Hacker can prevent users withdraws in giant pools"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-05-adding-non-eoa-representative",
        "vulnerability": "Adding non EOA representative"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-12-sender-transferring-giantmevandfeespool-tokens-can-afterward-experience-pool-dos-and-orphaning-of-future-rewards",
        "vulnerability": "Sender transferring `GiantMevAndFeesPool` tokens can afterward experience pool DOS and orphaning of future rewards"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-02-add-parameter-to-event-emit",
        "vulnerability": "Add parameter to Event-Emit"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-04-insufficient-coverage",
        "vulnerability": "Insufficient coverage"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-11-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-01-any-user-being-the-first-to-claim-rewards-from-giantmevandfeespool-can-unexepectedly-collect-them-all",
        "vulnerability": "Any user being the first to claim rewards from `GiantMevAndFeesPool` can unexepectedly collect them all"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-03-theft-of-eth-of-free-floating-slot-holders",
        "vulnerability": "Theft of ETH of free floating SLOT holders"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-16-reentrancy-vulnerability-in-giantmevandfeespoolwithdraweth",
        "vulnerability": "Reentrancy vulnerability in GiantMevAndFeesPool.withdrawETH"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-16-deth--eth--lptokeneth-can-become-depegged-due-to-eth-20-reward-slashing",
        "vulnerability": "dETH / ETH / LPTokenETH can become depegged due to ETH 2.0 reward slashing"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-10-incorrect-implementation-of-the-ethpoollpfactorysolrotatelptokens-let-user-stakes-eth-more-than-maxstakingamountpervalidator-in-stakingfundsvault--and-dos-the-stake-function-in-liquidstakingmanager",
        "vulnerability": "Incorrect implementation of the `ETHPoolLPFactory.sol#rotateLPTokens` let user stakes ETH more than `maxStakingAmountPerValidator` in `StakingFundsVault`, and DOS the stake function in `LiquidStakingManager`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-20-smartwallet-address-is-not-guaranteed-correct-eth-may-be-lost",
        "vulnerability": "smartWallet address is not guaranteed correct. ETH may be lost"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-05-reentrancy-in-liquidstakingmanagersolwithdrawethforknow-leads-to-loss-of-fund-from-smart-wallet",
        "vulnerability": "Reentrancy in `LiquidStakingManager.sol#withdrawETHForKnow` leads to loss of fund from smart wallet"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-15-user-loses-remaining-rewards-in-giantmevandfeespool-when-new-deposits-happen-because-ondepositeth-set-claimed[][]-to-max-without-transferring-user-remaining-rewards",
        "vulnerability": "User loses remaining rewards in `GiantMevAndFeesPool` when new deposits happen because `_onDepositETH()` set `claimed[][]` to max without transferring user remaining rewards"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-20-possibly-reentrancy-attacks-in-distributeethrewardstouserfortoken-function",
        "vulnerability": "Possibly reentrancy attacks in `_distributeETHRewardsToUserForToken` function"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-13-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "`Empty blocks` should be _removed_ or _Emit_ something"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-04-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include `return parameters` in _NatSpec comments_"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-27-rotatenoderunnerofsmartwallet-is-vulnerable-to-a-frontrun-attack",
        "vulnerability": "`rotateNodeRunnerOfSmartWallet` is vulnerable to a frontrun attack"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-29-user-receives-less-rewards-than-they-are-eligible-for-if-first-passed-bls-key-is-inactive",
        "vulnerability": "User receives less rewards than they are eligible for if first passed BLS key is inactive"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-11-protocol-insolvent---permanent-freeze-of-funds",
        "vulnerability": "Protocol insolvent - Permanent freeze of funds"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-09-dao-or-lsdn-owner-can-steal-funds-from-node-runner",
        "vulnerability": "DAO or lsdn owner can steal funds from node runner"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-01-0-address-check",
        "vulnerability": "`0 address` check"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-12-attacker-can-grift-syndicate-staking-by-staking-a-small-amount",
        "vulnerability": "Attacker can grift syndicate staking by staking a small amount"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-14-cross-chain-replay-attacks-are-possible-with-deploylptoken",
        "vulnerability": "Cross-chain replay attacks are possible with `deployLPToken`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-18-old-stakers-can-steal-deposits-of-new-stakers-in-stakingfundsvault",
        "vulnerability": "Old stakers can steal deposits of new stakers in `StakingFundsVault`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-04-unstaking-does-not-update-the-mapping-sethuserclaimforknot",
        "vulnerability": "Unstaking does not update the mapping `sETHUserClaimForKnot`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-13-giantpool-batchrotatelptokens-function-minimum-balance-for-rotating-lp-tokens-should-by-dynamically-calculated",
        "vulnerability": "GiantPool `batchRotateLPTokens` function: Minimum balance for rotating LP Tokens should by dynamically calculated"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-02-stack-too-deep-when-compiling",
        "vulnerability": "Stack too deep when compiling"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-28-funds-are-not-claimed-from-syndicate-for-valid-bls-keys-of-first-key-is-invalid-no-longer-part-of-syndicate",
        "vulnerability": "Funds are not claimed from syndicate for valid BLS keys of first key is invalid (no longer part of syndicate)."
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-17-giant-pools-can-be-drained-due-to-weak-vault-authenticity-check",
        "vulnerability": "Giant pools can be drained due to weak vault authenticity check"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-18-node-runners-can-lose-all-their-stake-rewards-due-to-how-the-dao-commissions-can-be-set-to-a-100%",
        "vulnerability": "Node runners can lose all their stake rewards due to how the DAO commissions can be set to a 100%"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-01-draft-openzeppelin-dependencies",
        "vulnerability": "Draft Openzeppelin Dependencies"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-25-incorrect-checking-in-assertuserhasenoughgiantlptoclaimvaultlp",
        "vulnerability": "Incorrect checking in `_assertUserHasEnoughGiantLPToClaimVaultLP`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-15-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-06-withdrawing-wrong-lptoken-from-giantpool-leads-to-loss-of-funds",
        "vulnerability": "Withdrawing wrong LPToken from GiantPool leads to loss of funds"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-04-giantpool-should-not-check-eth-amount-on-withdrawal",
        "vulnerability": "GiantPool should not check ETH amount on withdrawal"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-24-node-runner-who-is-already-known-to-be-malicious-cannot-be-banned-before-corresponding-smart-wallet-is-created",
        "vulnerability": "Node runner who is already known to be malicious cannot be banned before corresponding smart wallet is created"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-19-withdraweth-in-giantpoolbase-dont-call-distributeethrewardstouserfortoken-or-onwithdraw-which-would-make-users-to-lose-their-remaining-rewards",
        "vulnerability": "`withdrawETH()` in GiantPoolBase don\u2019t call `_distributeETHRewardsToUserForToken()` or `_onWithdraw()` which would make users to lose their remaining rewards"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-22-eth-sent-when-calling-executeassmartwallet-function-can-be-lost",
        "vulnerability": "ETH sent when calling `executeAsSmartWallet` function can be lost"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-03-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-07-natspec-is-missing",
        "vulnerability": "NatSpec is missing"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-07-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#l-05-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-19-when-users-transfer-giantlp--some-rewards-may-be-lost",
        "vulnerability": "When users transfer GiantLP, some rewards may be lost"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-09-incorrect-accounting-in-syndicaterewardsprocessor-results-in-any-lp-token-holder-being-able-to-steal-other-lp-tokens-holders-eth-from-the-fees-and-mev-vault",
        "vulnerability": "Incorrect accounting in `SyndicateRewardsProcessor` results in any LP token holder being able to steal other LP tokens holder\u2019s ETH from the fees and MEV vault"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-02-rotating-lptokens-to-banned-bls-public-key",
        "vulnerability": "Rotating `LPTokens` to banned BLS public key"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-06-solidity-compiler-optimizations-can-be-problematic",
        "vulnerability": "Solidity compiler optimizations can be problematic"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#h-21-bringunusedethbackintogiantpool-in-giantmevandfeespool-can-be-used-to-steal-lptokens",
        "vulnerability": "`bringUnusedETHBackIntoGiantPool` in `GiantMevAndFeesPool` can be used to steal `LPTokens`"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-09-missing-event-for-critical-parameters-change",
        "vulnerability": "Missing Event for critical parameters change"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-16-lock-pragmas-to-specific-compiler-version",
        "vulnerability": "_Lock pragmas_ to specific compiler version"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-10-add-to-indexed-parameter-for-countable-events",
        "vulnerability": "Add to indexed parameter for countable Events"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#n-12-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-11-stakehouse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-stakehouse#m-17-addressiscontract-is-not-a-reliable-way-of-checking-if-the-input-is-an-eoa",
        "vulnerability": "`Address.isContract()` is not a reliable way of checking if the input is an EOA"
    },
    {
        "name": "2022-04-backed",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backed#n-04-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-04-a-malicious-owner-can-set-an-effectively-infinite-improvement-rate-with-typeuint256max-after-heshe-has-entered-into-a-loan-to-prevent-others-from-buying-them-out",
        "vulnerability": "A malicious owner can set an effectively infinite improvement rate with `type(uint256).max` after he/she has entered into a loan to prevent others from buying them out"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-03-a-malicious-owner-can-keep-the-fee-rate-at-zero--but-if-a-large-value-transfer-enters-the-mempool--the-owner-can-jack-the-rate-up-to-the-maximum",
        "vulnerability": "A malicious owner can keep the fee rate at zero, but if a large value transfer enters the mempool, the owner can jack the rate up to the maximum"
    },
    {
        "name": "2022-04-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backed#h-02-currentloanowner-can-manipulate-loaninfo-when-any-lenders-try-to-buyout",
        "vulnerability": "currentLoanOwner can manipulate loanInfo when any lenders try to buyout"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-03-sendcollateralto-is-unchecked-in-closeloan--which-can-cause-users-collateral-nft-to-be-frozen",
        "vulnerability": "`sendCollateralTo` is unchecked in `closeLoan()`, which can cause user\u2019s collateral NFT to be frozen"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-06-safemint-should-be-used-rather-than-mint-wherever-possible",
        "vulnerability": "`_safeMint()` should be used rather than `_mint()` wherever possible"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-04-requiredimprovementrate-can-not-work-as-expected-when-previousinterestrate-less-than-10-due-to-precision-loss",
        "vulnerability": "`requiredImprovementRate` can not work as expected when `previousInterestRate` less than 10 due to precision loss"
    },
    {
        "name": "2022-04-backed",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backed#g-05-errors",
        "vulnerability": "Errors"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-07-mintborrowticketto-can-be-a-contract-with-no-onerc721received-method--which-may-cause-the-borrowticket-nft-to-be-frozen-and-put-users-funds-at-risk",
        "vulnerability": "`mintBorrowTicketTo` can be a contract with no `onERC721Received` method, which may cause the BorrowTicket NFT to be frozen and put users\u2019 funds at risk"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-02-originationfeerates-of-less-than-1000-may-charge-no-fees-if-amounts-are-small",
        "vulnerability": "`originationFeeRate`s of less than 1000 may charge no fees if amounts are small"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-07-loanfacilitatortransfer-does-not-verify-that-the-receiver-is-capable-of-handling-an-nft",
        "vulnerability": "`loanFacilitatorTransfer()` does not verify that the receiver is capable of handling an NFT"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-01-when-an-attacker-lends-to-a-loan--the-attacker-can-trigger-dos-that-any-lenders-can-not-buyout-it",
        "vulnerability": "When an attacker lends to a loan, the attacker can trigger DoS that any lenders can not buyout it"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-05-tokenuri-reverts-for-tokens-that-dont-implement-ierc20metadata",
        "vulnerability": "`tokenURI()` reverts for tokens that don\u2019t implement `IERC20Metadata`"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-06-might-not-get-desired-min-loan-amount-if-originationfeerate-changes",
        "vulnerability": "Might not get desired min loan amount if `_originationFeeRate` changes"
    },
    {
        "name": "2022-04-backed",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backed#n-03-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-01-loans-can-be-created-and-paid-with-non-existentdestructed-tokens",
        "vulnerability": "Loans can be created and paid with non-existent/destructed tokens"
    },
    {
        "name": "2022-04-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backed#h-01-can-force-borrower-to-pay-huge-interest",
        "vulnerability": "Can force borrower to pay huge interest"
    },
    {
        "name": "2022-04-backed",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backed#g-03-arithmetics",
        "vulnerability": "Arithmetics"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-05-borrowers-lose-funds-if-they-call-repayandcloseloan-instead-of-closeloan",
        "vulnerability": "Borrowers lose funds if they call `repayAndCloseLoan` instead of `closeLoan`"
    },
    {
        "name": "2022-04-backed",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backed#m-02-protocol-doesnt-handle-fee-on-transfer-tokens",
        "vulnerability": "Protocol doesn\u2019t handle fee on transfer tokens"
    },
    {
        "name": "2022-04-backed",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backed#g-04-visibility",
        "vulnerability": "Visibility"
    },
    {
        "name": "2022-04-backed",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backed#g-01-storage",
        "vulnerability": "Storage"
    },
    {
        "name": "2022-04-backed",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backed#l-08-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-04-backed",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backed#g-02-comparisons",
        "vulnerability": "Comparisons"
    },
    {
        "name": "2022-04-backed",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backed#n-01-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-backed",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backed#h-03-borrower-can-be-their-own-lender-and-steal-funds-from-buyout-due-to-reentrancy",
        "vulnerability": "Borrower can be their own lender and steal funds from buyout due to reentrancy"
    },
    {
        "name": "2022-04-backed",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backed#n-02-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-06-attacker-may-dos-auctions-using-invalid-bid-parameters",
        "vulnerability": "Attacker may DOS auctions using invalid bid parameters"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-03-the-sorting-logic-is-not-strict-enough",
        "vulnerability": "The sorting logic is not strict enough"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-04-avoid-compound-assignment-operator-in-state-variables",
        "vulnerability": "Avoid compound assignment operator in state variables"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-02-solmates-erc20-does-not-check-for-token-contracts-existence--which-opens-up-possibility-for-a-honeypot-attack",
        "vulnerability": "Solmate\u2019s ERC20 does not check for token contract\u2019s existence, which opens up possibility for a honeypot attack"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-01-optimize-finalize-with-cancelled-bids",
        "vulnerability": "Optimize `finalize` with cancelled bids"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-03-reorder-structure-layout",
        "vulnerability": "Reorder structure layout"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-01-incompatibility-with-fee-on-transferinflationarydeflationaryrebasing-tokens--on-both-base-tokens-and-quote-tokens--with-varying-impacts",
        "vulnerability": "Incompatibility with fee-on-transfer/inflationary/deflationary/rebasing tokens, on both base tokens and quote tokens, with varying impacts"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-02-avoid-storage-keyword-during-modifiers",
        "vulnerability": "Avoid `storage` keyword during modifiers"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-06-optimize-finalize-conditions",
        "vulnerability": "Optimize `finalize` conditions"
    },
    {
        "name": "2022-11-size",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-size#n-06-dont-worry-about-keccak256-collisions",
        "vulnerability": "Don\u2019t worry about keccak256 collisions"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-04-auction-created-by-erc777-tokens-with-tax-can-be-stolen-by-re-entrancy-attack",
        "vulnerability": "Auction created by ERC777 Tokens with tax can be stolen by re-entrancy attack"
    },
    {
        "name": "2022-11-size",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-size#g-05-optimize-variable-definitions",
        "vulnerability": "Optimize variable definitions"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-07-denial-of-service-when-baseamount-is-equal-to-zero",
        "vulnerability": "Denial of service when `baseAmount` is equal to zero"
    },
    {
        "name": "2022-11-size",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-size#m-05-sellers-ability-to-decrypt-bids-before-reveal-could-result-in-a-much-higher-clearing-price-than-anticpated-and-make-buyers-distrust-the-system",
        "vulnerability": "Seller\u2019s ability to decrypt bids before reveal could result in a much higher clearing price than anticpated and make buyers distrust the system"
    },
    {
        "name": "2022-11-size",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-size#h-01-bidders-might-fail-to-withdraw-their-unused-funds-after-the-auction-was-finalized-because-the-contract-doesnt-have-enough-balance",
        "vulnerability": "Bidders might fail to withdraw their unused funds after the auction was finalized because the contract doesn\u2019t have enough balance."
    },
    {
        "name": "2022-11-size",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-size#h-02-attacker-can-steal-any-funds-in-the-contract-by-state-confusion-no-preconditions",
        "vulnerability": "Attacker can steal any funds in the contract by state confusion (no preconditions)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-17-malicious-delegated-contractor-can-block-funding-tasks-or-mark-tasks-as-complete",
        "vulnerability": "Malicious delegated contractor can block funding tasks or mark tasks as complete"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-01-projectchangeorder-would-work-unexpectedly-for-non-scconfirmed-tasks",
        "vulnerability": "`Project.changeOrder()` would work unexpectedly for non SCConfirmed tasks."
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-13-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using private rather than public for constants, saves gas"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-04-project-funds-can-be-drained-by-reusing-signatures--in-some-cases",
        "vulnerability": "Project funds can be drained by reusing signatures, in some cases"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-18-task-functionality-completely-sidestepped-via-autowithdraw",
        "vulnerability": "Task Functionality completely sidestepped via `autoWithdraw`"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-09-using-unchecked-blocks-to-save-gas---increments-in-for-loop-can-be-unchecked--save-30-40-gas-per-loop-iteration",
        "vulnerability": "Using unchecked blocks to save gas - Increments in for loop can be unchecked ( save 30-40 gas per loop iteration)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-02-missing-upper-limit-definition-in-replacelenderfee-of-homefisol",
        "vulnerability": "Missing upper limit definition in `replaceLenderFee()` of `HomeFi.sol`"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-03-builder-can-call-communityescrow-again-to-reduce-debt-further-using-same-signatures",
        "vulnerability": "Builder can call `Community.escrow` again to reduce debt further using same signatures"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-05-anyone-can-create-disputes-if-contractor-is-not-set",
        "vulnerability": "Anyone can create disputes if `contractor` is not set"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-10-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-12-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using bools for storage incurs overhead"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-05-splitting-require-statements-that-use-&&-saves-gas---saves-8-gas-per-&&",
        "vulnerability": "Splitting require() statements that use && saves gas - (saves 8 gas per &&)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-03-signature-checks-could-be-passed-when-signaturedecoderrecoverkey-returns-0",
        "vulnerability": "Signature Checks could be passed when `SignatureDecoder.recoverKey()` returns 0"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-07-projectraisedispute-doesnt-use-approvedhashes---meaning-users-who-use-contracts-cant-raise-disputes",
        "vulnerability": "`Project.raiseDispute()` doesn\u2019t use approvedHashes - meaning users who use contracts can\u2019t raise disputes"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-19-changeorder-requires-subcontractor-signature-when-the-subcontractor-address-is-0",
        "vulnerability": "`changeOrder` requires subcontractor signature when the subcontractor address is 0"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-02-builder-can-halve-the-interest-paid-to-a-community-owner-due-to-arithmetic-rounding",
        "vulnerability": "Builder can halve the interest paid to a community owner due to arithmetic rounding"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-06-wrong-apr-can-be-used-when-project-is-unpublished-and-published-again",
        "vulnerability": "Wrong APR can be used when project is unpublished and published again"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-14-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-01-untyped-data-signing",
        "vulnerability": "Untyped data signing"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-02-cache-the-length-of-arrays-in-loops",
        "vulnerability": "Cache the length of arrays in loops"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-11-x-+=-y-costs-more-gas-than-x-=-x-+-y-for-state-variables",
        "vulnerability": "x += y costs more gas than x = x + y for state variables"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-03-++i-costs-less-gas-compared-to-i++-or-i-+=-1-in-for-loops-~5-gas-per-iteration",
        "vulnerability": "++i costs less gas compared to i++ or i += 1 in for loops (~5 gas per iteration)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-04-++x-is-more-efficient-than-x++saves-~6-gas",
        "vulnerability": "++x is more efficient than x++(Saves ~6 gas)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-06-comparisons-!=-is-more-efficient-than->-in-require-6-gas-less",
        "vulnerability": "Comparisons: != is more efficient than > in require (6 gas less)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-16-new-subcontractor-can-be-set-for-a-scconfirmed-task-without-current-subcontractor-consent",
        "vulnerability": "New subcontractor can be set for a SCConfirmed task without current subcontractor consent"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-20-projectsol-and-communitysol-have-no-way-to-revoke-a-hash-in-approvedhashes",
        "vulnerability": "`Project.sol` and `Community.sol` have no way to revoke a hash in approvedHashes"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-08-builders-must-pay-more-interest-when-the-system-is-paused",
        "vulnerability": "Builders must pay more interest when the system is paused."
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-04-hash-approval-not-possible-when-contractor-==-subcontractor",
        "vulnerability": "Hash approval not possible when contractor == subcontractor"
    },
    {
        "name": "2022-08-rigor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-rigor#h-05-add-members-to-the-not-yet-created-community",
        "vulnerability": "Add members to the not yet created community"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-06-attacker-can-drain-all-the-projects-within-minutes--if-admin-account-has-been-exposed",
        "vulnerability": "Attacker can drain all the projects within minutes, if admin account has been exposed"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-13-in-projectsetcomplete--the-signature-can-be-reused-when-the-first-call-is-reverted-for-some-reason",
        "vulnerability": "In `Project.setComplete()`, the signature can be reused when the first call is reverted for some reason"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-07-emitting-storage-values-instead-of-the-memory-onesaves-~101-gas",
        "vulnerability": "Emitting storage values instead of the memory one(saves ~101 gas)"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-14-incorrect-initialization-of-smart-contracts-with-access-control-issue",
        "vulnerability": "Incorrect initialization of smart contracts with Access Control issue"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-09-it-should-not-submit-a-project-with-no-total-budget-requires-at-least-one-task-with-cost->-0",
        "vulnerability": "It should not submit a project with no total budget. Requires at least one task with cost > 0"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-01-cache-storage-values-in-memory-to-minimize-sloads",
        "vulnerability": "Cache storage values in memory to minimize SLOADs"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-11-owner-of-project-nft-has-no-purpose",
        "vulnerability": "Owner of project NFT has no purpose"
    },
    {
        "name": "2022-08-rigor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-rigor#g-08-using-unchecked-blocks-to-save-gas",
        "vulnerability": "Using unchecked blocks to save gas"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-10-possible-dos-in-lendtoproject-and-togglelendingneeded-function-because-unbounded-loop-can-run-out-of-gas",
        "vulnerability": "Possible DOS in `lendToProject()` and `toggleLendingNeeded()` function because unbounded loop can run out of gas"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-12-updateprojecthash-does-not-check-project-address",
        "vulnerability": "`updateProjectHash` does not check project address"
    },
    {
        "name": "2022-08-rigor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-rigor#m-15-projectaddtasks-wouldnt-work-properly-when-its-called-from-disputes-contract",
        "vulnerability": "`Project.addTasks()` wouldn\u2019t work properly when it\u2019s called from disputes contract."
    },
    {
        "name": "2021-05-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-nftx#h-01-missing-overflow-check-in-flashloan",
        "vulnerability": "Missing overflow check in `flashLoan`"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-09-the-direct-redeem-fee-can-be-circumvented",
        "vulnerability": "The direct redeem fee can be circumvented"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-02-use-safetransfersafetransferfrom-consistently-instead-of-transfertransferfrom",
        "vulnerability": "Use `safeTransfer`/`safeTransferFrom` consistently instead of `transfer`/`transferFrom`"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-08-a-malicious-receiver-can-cause-another-receiver-to-lose-out-on-distributed-fees-by-returning-false-for-tokensreceived-when-receiverewards-is-called-on-their-receiver-contract",
        "vulnerability": "A malicious receiver can cause another receiver to lose out on distributed fees by returning `false` for `tokensReceived` when `receiveRewards` is called on their receiver contract."
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-06-manager-can-grief-with-fees",
        "vulnerability": "Manager can grief with fees"
    },
    {
        "name": "2021-05-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-nftx#h-02-distribute-dos-on-missing-receiverewards-implementation",
        "vulnerability": "`distribute` DoS on missing `receiveRewards` implementation"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-01-randomization-of-nfts-returned-in-redeemswap-operations-can-be-brute-forced",
        "vulnerability": "Randomization of NFTs returned in redeem/swap operations can be brute-forced"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-07-tokens-can-get-stuck-in-nftxmintrequesteligibility",
        "vulnerability": "Tokens can get stuck in `NFTXMintRequestEligibility`"
    },
    {
        "name": "2021-05-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-nftx#h-04-nftxlpstaking-is-subject-to-a-flash-loan-attack-that-can-steal-nearly-all-rewardsfees-that-have-accrued-for-a-particular-vault",
        "vulnerability": "`NFTXLPStaking` Is Subject To A Flash Loan Attack That Can Steal Nearly All Rewards/Fees That Have Accrued For A Particular Vault"
    },
    {
        "name": "2021-05-nftx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-nftx#h-03-getrandomtokenidfromfund-yields-wrong-probabilities-for-erc1155",
        "vulnerability": "`getRandomTokenIdFromFund` yields wrong probabilities for ERC1155"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-03-fee-distribution-re-entrancy",
        "vulnerability": "Fee Distribution Re-Entrancy"
    },
    {
        "name": "2021-05-nftx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-nftx#m-05-unbounded-iteration-in-nftxeligiblitymanagerdistribute-over-feereceivers",
        "vulnerability": "Unbounded iteration in `NFTXEligiblityManager.distribute` over `_feeReceivers`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-08-incorrect-condition-marks-valid-order-as-invalid",
        "vulnerability": "Incorrect condition marks valid order as invalid"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-15-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-04-fund-loss-or-griefing-in-all-order-matching-functions-[matchonetooneorders--matchonetomanyorders--matchorders--takemultipleoneorders--takeorders]-because-condition-seller-!=-buyer--is-not-checked-in-any-of-them",
        "vulnerability": "Fund loss or griefing in all order matching functions [`matchOneToOneOrders()`, `matchOneToManyOrders()`, `matchOrders()`, `takeMultipleOneOrders()`, `takeOrders()`] because condition `(seller != buyer )` is not checked in any of them"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-07-add-unchecked-{}-for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement",
        "vulnerability": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require()` or `if`-statement"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-17-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-03-immutable-addresses-lack-zero-address-check",
        "vulnerability": "Immutable addresses lack zero-address check"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-05-eth-mistakenly-sent-over-with-erc20-based-takeorders-and-takemultipleoneorders-calls-will-be-lost",
        "vulnerability": "ETH mistakenly sent over with ERC20 based `takeOrders` and `takeMultipleOneOrders` calls will be lost"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-09-malicious-tokens-can-be-used-to-grief-buyers-and-cause-loss-of-their-weth-balance",
        "vulnerability": "Malicious tokens can be used to grief buyers and cause loss of their WETH balance"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-14-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-10-sellers-may-lose-nfts-when-orders-are-matched-with-matchorders",
        "vulnerability": "Sellers may lose NFTs when orders are matched with `matchOrders()`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-07-transfernfts-succeeds-even-if-no-transfer-is-performed",
        "vulnerability": "`_transferNFTs()` succeeds even if no transfer is performed"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-19-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-05-receive-function",
        "vulnerability": "Receive function"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-07-timelock-or-maximum-amount-on-updatepenalties",
        "vulnerability": "Timelock or maximum amount on updatePenalties"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-03-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-10-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-11->=-costs-less-gas-than->",
        "vulnerability": "`>=` costs less gas than `>`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-02-maker-order-buyer-is-forced-to-reimburse-the-gas-cost-at-any-txgasprice",
        "vulnerability": "Maker order buyer is forced to reimburse the gas cost at any `tx.gasprice`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-05-missing-complication-check-in-takemultipleoneorders",
        "vulnerability": "Missing Complication check in `takeMultipleOneOrders`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-04-accumulated-eth-fees-of-infinityexchange-cannot-be-retrieved",
        "vulnerability": "Accumulated ETH fees of InfinityExchange cannot be retrieved"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-04-payable-functions-when-using-erc20",
        "vulnerability": "Payable functions when using ERC20"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-07-malicious-governance-can-use-updatewethtranfergas-to-steal-weth-from-buyers",
        "vulnerability": "Malicious governance can use `updateWethTranferGas` to steal WETH from buyers"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-02-commented-code",
        "vulnerability": "Commented code"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-02-check-zero-denominator",
        "vulnerability": "Check zero denominator"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-01-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-18-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-05-function-missing-comments",
        "vulnerability": "Function missing comments"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-06-public-functions-can-be-external",
        "vulnerability": "Public functions can be external"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-02-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-08-scientific-notation",
        "vulnerability": "Scientific notation"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-13-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-01-event-should-be-emitted-in-setters",
        "vulnerability": "Event should be emitted in setters"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-01-comment-missing-function-parameter",
        "vulnerability": "Comment Missing function parameter"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-03-canexectakeorder-mismatches-makerorder-and-takeritems-when-duplicated-items-present",
        "vulnerability": "`canExecTakeOrder` mismatches `makerOrder` and `takerItems` when duplicated items present"
    },
    {
        "name": "2022-06-infinity",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-infinity#l-06-setters-should-check-the-input-value",
        "vulnerability": "Setters should check the input value"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-08-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-06-bug-in-matchonetomanyorders-may-cause-tokens-theft",
        "vulnerability": "Bug in `MatchOneToManyOrders` may cause tokens theft"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-02-loss-of-funds-in-matchonetomanyorders-and-takeorders-and-matchorders-because-code-dont-check-that-different-ids-in-one-collection-are-different--so-its-possible-to-sell-one-id-multiple-time-instead-of-selling-multiple-id-one-time-in-one-collection-of-order-lack-of-checks-in-dotokenidsintersect-especially-for-erc1155-tokens",
        "vulnerability": "Loss of funds in `matchOneToManyOrders()` and `takeOrders()` and `matchOrders()` because code don\u2019t check that different ids in one collection are different, so it\u2019s possible to sell one id multiple time instead of selling multiple id one time in one collection of order (lack of checks in `doTokenIdsIntersect()` especially for ERC1155 tokens)"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-03-protocol-fee-rate-can-be-arbitrarily-modified-by-the-owner-and-the-new-rate-will-apply-to-all-existing-orders",
        "vulnerability": "Protocol fee rate can be arbitrarily modified by the owner and the new rate will apply to all existing orders"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-04-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-06-some-real-world-nft-tokens-may-support-both-erc721-and-erc1155-standards--which-may-break-infinityexchangetransfernfts",
        "vulnerability": "Some real-world NFT tokens may support both ERC721 and ERC1155 standards, which may break `InfinityExchange::_transferNFTs`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-04-events-indexing",
        "vulnerability": "Events indexing"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-12-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize non-`constant`/non-`immutable` variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-03-constants-instead-of-magic-numbers",
        "vulnerability": "Constants instead of magic numbers"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-08-overpayment-of-native-eth-is-not-refunded-to-buyer",
        "vulnerability": "Overpayment of native ETH is not refunded to buyer"
    },
    {
        "name": "2022-06-infinity",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-infinity#m-01-infinityexchange-computes-gas-refunds-in-a-way-where-the-first-orders-buyer-pays-less-than-the-later-ones",
        "vulnerability": "InfinityExchange computes gas refunds in a way where the first order\u2019s buyer pays less than the later ones"
    },
    {
        "name": "2022-06-infinity",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-infinity#n-07-related-data-should-be-grouped-in-struct",
        "vulnerability": "Related data should be grouped in struct"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-09-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-05-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-09-calling-unstake-can-cause-locked-funds",
        "vulnerability": "Calling `unstake()` can cause locked funds"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-06-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-11-reentrancy-from-matchonetomanyorders",
        "vulnerability": "Reentrancy from `matchOneToManyOrders`"
    },
    {
        "name": "2022-06-infinity",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-infinity#g-16-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-06-infinity",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-infinity#h-01-maker-buy-order-with-no-specified-nft-tokenids-may-get-fulfilled-in-matchonetomanyorders-without-receiving-any-nft",
        "vulnerability": "Maker buy order with no specified NFT tokenIds may get fulfilled in `matchOneToManyOrders` without receiving any NFT"
    },
    {
        "name": "2022-04-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-mimo#h-01-user-can-call-liquidate-and-steal-all-collateral-due-to-arbitrary-router-call",
        "vulnerability": "User can call liquidate() and steal all collateral due to arbitrary router call"
    },
    {
        "name": "2022-04-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-mimo#m-05-abdkmath64-performs-multiplication-on-results-of-division",
        "vulnerability": "ABDKMath64 performs multiplication on results of division"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-07-<=-is-cheaper-than-<",
        "vulnerability": "`<=` is cheaper than `<`"
    },
    {
        "name": "2022-04-mimo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-mimo#n-02-useless-import-safemath",
        "vulnerability": "Useless import: SafeMath"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-13-usage-of-a-non-native-256-bits-uint-as-a-counter-in-for-loops-increases-gas-cost",
        "vulnerability": "Usage of a non-native 256 bits uint as a counter in for-loops increases gas cost"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-15-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-04-mimo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-mimo#l-05-fee-in-demandminerv2setfeeconfig-should-be-upper-bounded",
        "vulnerability": "Fee in `DemandMinerV2.setFeeConfig()` should be upper-bounded"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-11-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-10-amounts-should-be-checked-for-0-before-calling-a-transfer",
        "vulnerability": "Amounts should be checked for 0 before calling a transfer"
    },
    {
        "name": "2022-04-mimo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-mimo#n-03-the-visibility-for-constructor-is-ignored",
        "vulnerability": "The visibility for constructor is ignored"
    },
    {
        "name": "2022-04-mimo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-mimo#n-01-unused-named-returns",
        "vulnerability": "Unused named returns"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-05-variables-that-should-be-constant",
        "vulnerability": "Variables that should be constant"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-16-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-03-using-an-existing-memory-variable-instead-of-reading-storage",
        "vulnerability": "Using an existing memory variable instead of reading storage"
    },
    {
        "name": "2022-04-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-mimo#m-02-users-can-use-updateboost-function-to-claim-unfairly-large-rewards-from-liquidity-mining-contracts-for-themselves-at-cost-of-other-users",
        "vulnerability": "Users can use updateBoost function to claim unfairly large rewards from liquidity mining contracts for themselves at cost of other users."
    },
    {
        "name": "2022-04-mimo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-mimo#l-04-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-12-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-04-mimo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-mimo#h-02-fund-loss-or-theft-by-attacker-with-creating-a-flash-loan-and-setting-supervault-as-receiver-so-executeoperation-will-be-get-called-by-lendingpool-but-with-attackers-specified-params",
        "vulnerability": "Fund loss or theft by attacker with creating a flash loan and setting SuperVault as receiver so executeOperation() will be get called by lendingPool but with attackers specified params"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-04-balancerv2lporaclesol-tighly-pack-storage-variables",
        "vulnerability": "`BalancerV2LPOracle.sol`: Tighly pack storage variables"
    },
    {
        "name": "2022-04-mimo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-mimo#l-03-missing-address0-checks",
        "vulnerability": "Missing address(0) checks"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-02-caching-external-values-in-memory",
        "vulnerability": "Caching external values in memory"
    },
    {
        "name": "2022-04-mimo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-mimo#l-01-approve-should-be-replaced-with-safeapprove-or-safeincreaseallowance--safedecreaseallowance",
        "vulnerability": "`approve` should be replaced with `safeApprove` or `safeIncreaseAllowance() / safeDecreaseAllowance()`"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-08-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-04-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-mimo#m-03-supervaults-leverageswap-and-emptyvaultoperation-can-become-stuck",
        "vulnerability": "SuperVault\u2019s leverageSwap and emptyVaultOperation can become stuck"
    },
    {
        "name": "2022-04-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-mimo#m-01-decimal-token-underflow-could-produce-loss-of-funds",
        "vulnerability": "Decimal token underflow could produce loss of funds"
    },
    {
        "name": "2022-04-mimo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-mimo#m-04-non-standard-erc20-tokens-are-not-supported",
        "vulnerability": "Non-standard ERC20 Tokens are Not Supported"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-01-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-09-require-should-be-used-for-checking-error-conditions-on-inputs-and-return-values-while-assert-should-be-used-for-invariant-checking",
        "vulnerability": "`require()` should be used for checking error conditions on inputs and return values while `assert()` should be used for invariant checking"
    },
    {
        "name": "2022-04-mimo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-mimo#l-02-add-constructor-initializers",
        "vulnerability": "Add constructor initializers"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-06->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "`> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-04-mimo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-mimo#g-14-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2021-12-perennial",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-perennial#m-02-multiple-initialization-of-collateral-contract",
        "vulnerability": "Multiple initialization of Collateral contract"
    },
    {
        "name": "2021-12-perennial",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-perennial#m-01-no-checks-if-given-product-is-created-by-the-factory",
        "vulnerability": "No checks if given product is created by the factory"
    },
    {
        "name": "2021-12-perennial",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-perennial#h-02-withdrawto-does-not-sync-before-checking-a-positions-margin-requirements",
        "vulnerability": "`withdrawTo` Does Not Sync Before Checking A Position\u2019s Margin Requirements"
    },
    {
        "name": "2021-12-perennial",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-perennial#m-03-chainlinks-latestrounddata-might-return-stale-or-incorrect-results",
        "vulnerability": "Chainlink\u2019s `latestRoundData` might return stale or incorrect results"
    },
    {
        "name": "2021-12-perennial",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-perennial#h-01-wrong-shortfall-calculation",
        "vulnerability": "Wrong shortfall calculation"
    },
    {
        "name": "2021-11-yaxis",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-yaxis#m-01-prevent-minting-during-emergency-exit",
        "vulnerability": "Prevent Minting During Emergency Exit"
    },
    {
        "name": "2021-11-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-yaxis#h-02-cdpsol-update-overwrites-users-credit-on-every-positive-increment",
        "vulnerability": "CDP.sol update overwrites user\u2019s credit on every positive increment"
    },
    {
        "name": "2021-11-yaxis",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-yaxis#h-01-yaxisvaultadaptersolwithdraw-will-most-certainly-fail",
        "vulnerability": "`YaxisVaultAdapter.sol#withdraw()` will most certainly fail"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#m-04-no-sanity-check-on-pricepershare-might-lead-to-lost-value",
        "vulnerability": "No sanity check on `pricePerShare` might lead to lost value"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#h-01-the-design-of-wibbtc-is-not-fully-compatible-with-the-current-curve-stableswap-pool",
        "vulnerability": "The design of `wibBTC` is not fully compatible with the current Curve StableSwap pool"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#m-01-unable-to-transfer-wrappedibbtc-if-oracle-go-down",
        "vulnerability": "Unable to transfer `WrappedIbbtc` if Oracle go down"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#m-02-null-check-in-pricepershare",
        "vulnerability": "Null check in `pricePerShare`"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#m-03-hard-to-clear-balance",
        "vulnerability": "hard to clear balance"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#h-02-approved-spender-can-spend-too-many-tokens",
        "vulnerability": "Approved spender can spend too many tokens"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#h-04-wrappedibbtc-and-wrappedibbtceth-contracts-do-not-filter-out-price-feed-outliers",
        "vulnerability": "`WrappedIbbtc` and `WrappedIbbtcEth` contracts do not filter out price feed outliers"
    },
    {
        "name": "2021-10-badgerdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-badgerdao#h-03-wrappedibbtceth-contract-will-use-stalled-price-for-mintburn-if-updatepricepershare-wasnt-run-properly",
        "vulnerability": "`WrappedIbbtcEth` contract will use stalled price for mint/burn if `updatePricePerShare` wasn\u2019t run properly"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-03-double-transfer-in-the-transferandcall-function-of-erc677",
        "vulnerability": "Double transfer in the `transferAndCall` function of `ERC677`"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-02-reentrancy-on-flash-governance-proposal-withdrawal",
        "vulnerability": "Reentrancy on Flash Governance Proposal Withdrawal"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-06-loss-of-flash-governance-tokens-if-they-are-not-withdrawn-before-the-next-request",
        "vulnerability": "Loss Of Flash Governance Tokens If They Are Not Withdrawn Before The Next Request"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-02-wrong-minting-amount",
        "vulnerability": "wrong minting amount"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-06-consistently-check-account-balance-before-and-after-transfers-for-fee-on-transfer-discrepencies",
        "vulnerability": "Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-04-logic-error-in-burnflashgovernanceasset-can-cause-locked-assets-to-be-stolen",
        "vulnerability": "Logic error in `burnFlashGovernanceAsset` can cause locked assets to be stolen"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-08-tolerance-is-not-enforced-during-a-flash-governance-decision",
        "vulnerability": "Tolerance is not enforced during a flash governance decision"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-05-flan-cant-be-transferred-unless-the-flan-contract-has-flan-balance-greater-than-the-amount-we-want-to-transfer",
        "vulnerability": "flan can\u2019t be transferred unless the flan contract has flan balance greater than the amount we want to transfer"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-01-incorrect-unlocktime-can-dos-withdrawgovernanceasset",
        "vulnerability": "Incorrect `unlockTime` can DOS `withdrawGovernanceAsset`"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-12-you-can-flip-governance-decisions-without-extending-vote-duration",
        "vulnerability": "You can flip governance decisions without extending vote duration"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-07-calling-generateflnquote-twice-in-every-block-prevents-any-migration",
        "vulnerability": "Calling `generateFLNQuote` twice in every block prevents any migration"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-05-flash-loan-price-manipulation-in-purchasepyroflan",
        "vulnerability": "Flash loan price manipulation in `purchasePyroFlan()`"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-14-uniswaphelperbuyflanandburn-is-a-subject-to-sandwich-attacks",
        "vulnerability": "UniswapHelper.buyFlanAndBurn is a subject to sandwich attacks"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-11-you-can-grief-migrations-by-sending-scx-to-the-uniswaphelper",
        "vulnerability": "You can grief migrations by sending SCX to the UniswapHelper"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-04-the-system-can-get-to-a-\u201cstuck\u201d-state-if-a-bad-proposal-proposal-that-cant-be-executed-is-accepted",
        "vulnerability": "The system can get to a \u201cstuck\u201d state if a bad proposal (proposal that can\u2019t be executed) is accepted"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-13-lack-of-access-control-in-the-parameterize-function-of-proposal-contracts",
        "vulnerability": "Lack of access control in the `parameterize` function of proposal contracts"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-10-user-wont-be-able-to-get-his-rewards-in-case-of-staking-with-amount-=-0",
        "vulnerability": "user won\u2019t be able to get his rewards in case of staking with amount = 0"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-01-lack-of-access-control-on-assertgovernanceapproved-can-cause-funds-to-be-locked",
        "vulnerability": "Lack of access control on `assertGovernanceApproved` can cause funds to be locked"
    },
    {
        "name": "2022-01-behodler",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-behodler#h-07-lp-pricing-formula-is-vulnerable-to-flashloan-manipulation",
        "vulnerability": "LP pricing formula is vulnerable to flashloan manipulation"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-09-all-the-scxminted-is-at-risk-of-being-burntlimbosol",
        "vulnerability": "All the scxMinted is at risk of being burnt.(Limbo.sol)"
    },
    {
        "name": "2022-01-behodler",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-behodler#m-03-burning-a-users-tokens-for-a-flash-proposal-will-not-deduct-their-balance",
        "vulnerability": "Burning a User\u2019s Tokens for a Flash Proposal will not Deduct Their Balance"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-03-unsafe-calls-to-optional-erc20-functions",
        "vulnerability": "Unsafe calls to optional ERC20 functions"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#m-05-stale-price-used-when-citadelpriceflag-is-cleared",
        "vulnerability": "Stale price used when `citadelPriceFlag` is cleared"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-10-knightingroundgettokeninlimitleft-totaltokenin-and-tokeninlimit-should-get-cached-+-l250-should-be-unchecked-due-to-l249",
        "vulnerability": "`KnightingRound.getTokenInLimitLeft()`: `totalTokenIn` and `tokenInLimit` should get cached + L250 should be unchecked due to L249"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-13-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-16-stakedcitadeldepositfor-l776-should-be-unchecked-due-to-l773-l775",
        "vulnerability": "`StakedCitadel._depositFor()`: L776 should be unchecked due to L773-L775"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-37-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-36-consider-making-some-constants-as-non-public-to-save-gas",
        "vulnerability": "Consider making some constants as non-public to save gas"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#m-04-new-vest-reset-unlockbegin-of-existing-vest-without-removing-vested-amount",
        "vulnerability": "New vest reset `unlockBegin` of existing vest without removing vested amount"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-32-shift-right-instead-of-dividing-by-2",
        "vulnerability": "Shift Right instead of Dividing by 2"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#h-01-stakedcitadel-doesnt-use-correct-balance-for-internal-accounting",
        "vulnerability": "StakedCitadel doesn\u2019t use correct balance for internal accounting"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-20-stakedcitadellockersol-state-variables-can-be-tightly-packed-to-save-1-storage-slot",
        "vulnerability": "`StakedCitadelLocker.sol`: state variables can be tightly packed to save 1 storage slot"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-10-solidity-versions-greater-than-the-current-version-should-not-be-included-in-the-pragma-range",
        "vulnerability": "Solidity versions greater than the current version should not be included in the pragma range"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-25-supplyschedulegetepochattimestamp-globalstarttimestamp-should-get-cached",
        "vulnerability": "`SupplySchedule.getEpochAtTimestamp()`: `globalStartTimestamp` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-05-initialize-functions-can-be-front-run",
        "vulnerability": "`initialize` functions can be front-run"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-14-stakedcitadelearn-strategy-should-get-cached",
        "vulnerability": "`StakedCitadel.earn()`: `strategy` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-11-stakedcitadeldeposit-use-calldata-instead-of-memory",
        "vulnerability": "`StakedCitadel.deposit()`: Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-01-new-minmax-values-should-be-checked-against-the-current-stored-value",
        "vulnerability": "New min/max values should be checked against the current stored value"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-23-stakedcitadelvesterclaimablebalance-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-vesting[recipient]",
        "vulnerability": "`StakedCitadelVester.claimableBalance()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it (`vesting[recipient]`)"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-24-non-exploitable-reentrancies",
        "vulnerability": "Non-exploitable reentrancies"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-08-unbounded-loop",
        "vulnerability": "Unbounded loop"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-03-fundinginitialize-should-use-memory-instead-of-storage-variable",
        "vulnerability": "`Funding.initialize()`: should use memory instead of storage variable"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-38-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-18-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-29-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-15-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-17-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-02-misleading-comment",
        "vulnerability": "Misleading comment"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-11-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-02-loss-of-precision",
        "vulnerability": "Loss of precision"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#m-01-guaranteed-citadel-profit",
        "vulnerability": "Guaranteed citadel profit"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-19-stakedcitadelwithdraw-l817-should-be-unchecked-due-to-l816",
        "vulnerability": "`StakedCitadel._withdraw()`: L817 should be unchecked due to L816"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-23-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-09-the-nonreentrant-modifier-should-occur-before-all-other-modifiers",
        "vulnerability": "The `nonReentrant` `modifier` should occur before all other modifiers"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-03-multiple-definitions-of-an-interface",
        "vulnerability": "Multiple definitions of an interface"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-13-stakedcitadelsetstrategy-strategy-should-get-cached",
        "vulnerability": "`StakedCitadel.setStrategy()`: `strategy` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-06-fundinggetremainingfundable-l236-should-be-unchecked-due-to-l235",
        "vulnerability": "`Funding.getRemainingFundable()`: L236 should be unchecked due to L235"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-04-fundingonlywhenpricenotflagged-boolean-comparison-147",
        "vulnerability": "`Funding.onlyWhenPriceNotFlagged()`: boolean comparison 147"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-01-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-08-remove-include-for-ds-test",
        "vulnerability": "Remove `include` for ds-test"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-05-contract-header-not-updated-after-branching",
        "vulnerability": "Contract header not updated after branching"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-26-supplyschedulegetmintable-l105-l110-should-be-unchecked-due-to-l95-and-l99-l101",
        "vulnerability": "`SupplySchedule.getMintable()`: L105-L110 should be unchecked due to L95 and L99-L101"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-20-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-04-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#h-02-stakedcitadel-wrong-setupvesting-function-name",
        "vulnerability": "StakedCitadel: wrong setupVesting function name"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-12-stakedcitadeldepositall-use-calldata-instead-of-memory",
        "vulnerability": "`StakedCitadel.depositAll()`: Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-02-fundingsol-state-variables-can-be-tightly-packed-to-save-1-storage-slot",
        "vulnerability": "`Funding.sol`: state variables can be tightly packed to save 1 storage slot"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-07-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-09-knightingroundbuy-salestart--totaltokenin-and-guestlist-should-get-cached",
        "vulnerability": "`KnightingRound.buy()`: `saleStart`, `totalTokenIn` and `guestlist` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-05-fundingdeposit-fundingassetcumulativefunded-+-assetamountin-should-get-cached",
        "vulnerability": "`Funding.deposit()`: `funding.assetCumulativeFunded + _assetAmountIn` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-27-supplyschedulegetmintabledebug-globalstarttimestamp-should-get-cached",
        "vulnerability": "`SupplySchedule.getMintableDebug()`: `globalStartTimestamp` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-28-supplyschedulegetmintabledebug-l200-l205-should-be-unchecked-due-to-l184-and-l188",
        "vulnerability": "`SupplySchedule.getMintableDebug()`: L200-L205 should be unchecked due to L184 and L188"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-17-stakedcitadeldepositforwithauthorization-guestlist-should-get-cached",
        "vulnerability": "`StakedCitadel._depositForWithAuthorization()`: `guestList` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-15-stakedcitadeldepositfor-token-should-get-cached",
        "vulnerability": "`StakedCitadel._depositFor()`: `token` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-24-stakedcitadelvestervest-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-vesting[recipient]",
        "vulnerability": "`StakedCitadelVester.vest()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it (`vesting[recipient]`)"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-21-stakedcitadellockertotalsupplyatepoch-use-a-storage-variables-reference-instead-of-repeatedly-fetching-it-epochs[i]",
        "vulnerability": "`StakedCitadelLocker.totalSupplyAtEpoch()`: Use a storage variable\u2019s reference instead of repeatedly fetching it (`epochs[i]`)"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-34-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-16-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-30->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "`> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-22-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-31->=-is-cheaper-than->",
        "vulnerability": "`>=` is cheaper than `>`"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#h-03-stakedcitadel-depositors-can-be-attacked-by-the-first-depositor-with-depressing-of-vault-token-denomination",
        "vulnerability": "StakedCitadel depositors can be attacked by the first depositor with depressing of vault token denomination"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#l-06-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-08-knightingroundinitialize-should-use-memory-instead-of-storage-variable",
        "vulnerability": "`KnightingRound.initialize()`: should use memory instead of storage variable"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-12-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-14-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-06-comment-not-moved-when-function-was-moved",
        "vulnerability": "Comment not moved when function was moved"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-22-stakedcitadelwithdraw-maximumstake--minimumstake-and-stakingproxy-should-get-cached",
        "vulnerability": "`StakedCitadel._withdraw()`: `maximumStake`, `minimumStake` and `stakingProxy` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-21-natspec-is-incorrect",
        "vulnerability": "NatSpec is incorrect"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-01-citadelmintermintanddistribute-l199-should-be-unchecked-due-to-l193-l197",
        "vulnerability": "`CitadelMinter.mintAndDistribute()`: L199 should be unchecked due to L193-L197"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-07-fundingclaimassettotreasury-asset-should-get-cached",
        "vulnerability": "`Funding.claimAssetToTreasury()`: `asset` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-07-comments-not-updated-after-branching",
        "vulnerability": "Comments not updated after branching"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-19-file-does-not-contain-an-spdx-identifier",
        "vulnerability": "File does not contain an SPDX Identifier"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-18-stakedcitadelwithdraw-token-and-vesting-should-get-cached",
        "vulnerability": "`StakedCitadel._withdraw()`: `token` and `vesting` should get cached"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-04-unused-file",
        "vulnerability": "Unused file"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#m-03-knightinground-tokenoutprice-changes",
        "vulnerability": "KnightingRound tokenOutPrice changes"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#n-25-now-is-deprecated",
        "vulnerability": "`now` is deprecated"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-35-increments-can-be-unchecked",
        "vulnerability": "Increments can be unchecked"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#m-02-fundingdeposit-doesnt-work-if-there-is-no-discount-set",
        "vulnerability": "Funding.deposit() doesn\u2019t work if there is no discount set"
    },
    {
        "name": "2022-04-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-badger-citadel#g-33-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2021-08-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-realitycards#h-02-uberowner-has-too-much-power",
        "vulnerability": "`UberOwner` has too much power"
    },
    {
        "name": "2021-08-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-realitycards#m-01-uninitialized-variable-marketwhitelist-in-rctreasurysol",
        "vulnerability": "Uninitialized Variable `marketWhitelist` in `RCTreasury.sol`"
    },
    {
        "name": "2021-08-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-realitycards#m-03-deposits-dont-work-with-fee-on-transfer-tokens",
        "vulnerability": "Deposits don\u2019t work with fee-on transfer tokens"
    },
    {
        "name": "2021-08-realitycards",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-08-realitycards#m-02-parameter-updates-not-propagated",
        "vulnerability": "Parameter updates not propagated"
    },
    {
        "name": "2021-08-realitycards",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-08-realitycards#h-01-findnewowner-edgecase",
        "vulnerability": "`findNewOwner` edgecase"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-14-not-defining-previoustobalance-and-previousfrombalance-variables-can-reduce-gas-cost-and-contract-size",
        "vulnerability": "Not defining previousToBalance and previousFromBalance variables can reduce gas cost and contract size"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-10-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-06-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-15-avoiding-calling-balanceofuser-multiple-times-can-reduce-deployment-gas-cost",
        "vulnerability": "Avoiding calling balanceOf(user) multiple times can reduce deployment gas cost"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-07-usage-of-unchecked-can-reduce-the-gas-cost-at-claim-function-at-holypaladintokensol",
        "vulnerability": "Usage of unchecked can reduce the gas cost at claim function at HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-05-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-10-userlock-information-can-be-found-during-emergency-mode",
        "vulnerability": "`UserLock` information can be found during emergency mode"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-12-not-defining-lastuserlockindex-variable-decreases-contract-size-and-gas-cost",
        "vulnerability": "Not defining lastUserLockIndex variable decreases contract size and gas cost"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-16-avoid-defining-at-getnewindex-function-in-holypaladintokensol-can-reduce-contract-size-and-gas-cost",
        "vulnerability": "Avoid defining at _getNewIndex function in HolyPaladinToken.sol can reduce contract size and gas cost"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-02-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-12-users-with-large-cooldowns-can-grief-other-users",
        "vulnerability": "Users with large `cooldown`s can grief other users"
    },
    {
        "name": "2022-03-paladin",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-paladin#h-01-droppersecond-is-not-updated-homogeneously--the-rewards-emission-can-be-much-higher-than-expected-in-some-cases",
        "vulnerability": "`DropPerSecond` is not updated homogeneously, the rewards emission can be much higher than expected in some cases"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-06-use-!=-0-instead-of->-0-in-holypaladintokensol",
        "vulnerability": "Use `!= 0` instead of `> 0` in HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-07-updating-the-state",
        "vulnerability": "Updating the state"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-09-function-cooldown-is-not-protected-when-protocol-in-emergency-mode",
        "vulnerability": "Function `cooldown()` is not protected when protocol in emergency mode"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-18-not-using-userlockrewardvars-struct-in-getuseraccruedrewards-function-can-greatly-reduces-gas-cost-and-contract-size",
        "vulnerability": "Not using UserLockRewardVars struct in _getUserAccruedRewards function can greatly reduces gas cost and contract size"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-02-incorrect-number-of-seconds-in-oneyear-variable",
        "vulnerability": "Incorrect number of seconds in `ONE_YEAR` variable"
    },
    {
        "name": "2022-03-paladin",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-paladin#l-01-paladinrewardreserves-approvals-break-if-the-same-contract-is-in-charge-of-two-tokens-eg-a-palpool",
        "vulnerability": "`PaladinRewardReserve`\u2019s approvals break if the same contract is in charge of two tokens (e.g. a PalPool)"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-04-cooldown-is-set-to-0-when-the-user-sends-all-tokens-to-himself",
        "vulnerability": "`cooldown` is set to 0 when the user sends all tokens to himself"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-04-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-08-the-usage-of-unchecked-in-average-function-in-mathsol-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol",
        "vulnerability": "The usage of unchecked in average function in Math.sol can reduce deployment gas fee and contract size of HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-11-emergency-mode-enabledisable-issue",
        "vulnerability": "Emergency mode enable/disable issue"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-05-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-holypaladintokensol",
        "vulnerability": "Usage of `Errors` can reduce gas cost and contract size at HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-01-holypaladintokensol-uses-erc20-token-with-a-highly-unsafe-pattern",
        "vulnerability": "`HolyPaladinToken.sol` uses `ERC20` token with a highly unsafe pattern"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-08-use-native-time-units-such-as-seconds--minutes--hours--days--weeks-and-years--rather-than-numbers-of-seconds",
        "vulnerability": "Use native time units such as seconds, minutes, hours, days, weeks and years, rather than numbers of seconds"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-07-use-the-same-solidity-version-in-all-non-libraryinterface-files",
        "vulnerability": "Use the same solidity version in all non-library/interface files"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-13-definitions-sendercooldown-and-receiverbalance-variables-are-not-necessary-at-getnewreceivercooldown-function-in-holypaladintokensol",
        "vulnerability": "Definitions senderCooldown and receiverBalance variables are not necessary at getNewReceiverCooldown function in HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-13-users-can-bypass-emergency-restrictions-on-updateuserrewardstate",
        "vulnerability": "Users Can Bypass Emergency Restrictions on `updateUserRewardState()`"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-01-using-the-latest-code-of-openzeppelin-ownablesol-and-use-transferownership-function-at-constructor-of-paladinrewardreservesol",
        "vulnerability": "Using the latest code of openzeppelin `Ownable.sol` and use `_transferOwnership` function at constructor of `PaladinRewardReserve.sol`"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-03-the-nonreentrant-modifier-should-occur-before-all-other-modifiers",
        "vulnerability": "The `nonReentrant` `modifier` should occur before all other modifiers"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-05-past-state-query-results-are-susceptible-to-manipulation-due-to-multiple-states-with-same-block-number",
        "vulnerability": "Past state query results are susceptible to manipulation due to multiple states with same block number"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-09-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-06-paladinrewardreservesol-may-have-potential-bugs-if-it-uses-new-tokens-as-rewards",
        "vulnerability": "`PaladinRewardReserve.sol` may have potential bugs if it uses new tokens as rewards"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-10-some-currentuserlockindex-varaible-does-not-need-to-be-defined-in-holypalatintokensol",
        "vulnerability": "Some `currentUserLockIndex` varaible does not need to be defined in HolyPalatinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-03-usage-of-errors-can-reduce-gas-cost-and-contract-size-at-paladinrewardreservesol",
        "vulnerability": "Usage of `Errors` can reduce gas cost and contract size at PaladinRewardReserve.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-11-the-logic-to-call-emergencyblock-in-emergency-can-be-put-in-private-function",
        "vulnerability": "The logic to call `EmergencyBlock()` in emergency can be put in private function"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-09-the-usage-of-unchecked-in-binary-search-can-reduce-deployment-gas-fee-and-contract-size-of-holypaladintokensol",
        "vulnerability": "The usage of unchecked in binary search can reduce deployment gas fee and contract size of HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-02-using-the-latest-code-of-openzeppelin-ownablesol-and-use-transferownership-function-at-constructor-of-holypaladintokensol",
        "vulnerability": "Using the latest code of openzeppelin `Ownable.sol` and use `_transferOwnership` function at constructor of `HolyPaladinToken.sol`"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-08-add-a-timelock-to-paladinrewardreserve-functions",
        "vulnerability": "Add a timelock to `PaladinRewardReserve` functions"
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-04-no-need-to-set-false-at-emergency-variable-in-holypaladintokensol",
        "vulnerability": "No need to set false at `emergency` variable in HolyPaladinToken.sol"
    },
    {
        "name": "2022-03-paladin",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-paladin#h-02-system-could-be-wrapped-and-made-useless-without-contract-whitelisting",
        "vulnerability": "System could be wrapped and made useless without contract whitelisting"
    },
    {
        "name": "2022-03-paladin",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-paladin#n-01-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-14-increasing-the-lock-amount-on-an-expired-lock-will-cause-users-to-miss-out-on-rewards",
        "vulnerability": "Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards"
    },
    {
        "name": "2022-03-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-paladin#m-03-users-at-unstakeperiod-can-assist-other-users-in-unstaking-tokens",
        "vulnerability": "Users at `UNSTAKE_PERIOD` can assist other users in unstaking tokens."
    },
    {
        "name": "2022-03-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-paladin#g-17-avoiding-defining-currentdroppersecond-and-newindex-at-updaterewardstate-function-in-holypaladintokensol-can-reduce-gas-cost-and-contract-size",
        "vulnerability": "Avoiding defining _currentDropPerSecond and newIndex at _updateRewardState function in HolyPaladinToken.sol can reduce gas cost and contract size"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-16-its-possible-to-initialize-contract-bkdlocker-for-multiple-times-by-sending-startboost=0-and-each-time-different-values-for-other-parameters",
        "vulnerability": "it\u2019s possible to initialize contract BkdLocker for multiple times by sending startBoost=0 and each time different values for other parameters"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-01-dos-on-keepergauge-due-to-division-by-zero",
        "vulnerability": "DoS on KeeperGauge due to division by zero"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-03-users-can-dos-themselves-by-executing-prepareunlock0-many-times",
        "vulnerability": "Users can DOS themselves by executing `prepareUnlock(0)` many times"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-04-unusedempty-receivefallback-function",
        "vulnerability": "Unused/empty `receive()`/`fallback()` function"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-02-return-values-of-approve-not-checked",
        "vulnerability": "Return values of `approve()` not checked"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-06-mintersolexecuteinflationrateupdate-inflationmanagercheckpointallgauges-is-called-after-inflationrate-is-updated--causing-users-to-lose-rewards",
        "vulnerability": "`Minter.sol#_executeInflationRateUpdate()` `inflationManager().checkpointAllGauges()` is called after InflationRate is updated, causing users to lose rewards"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-07-preparedeadline--setconfig--and-executedeadline-should-be-private",
        "vulnerability": "`_prepareDeadline()`, `_setConfig()`, and `_executeDeadline()` should be `private`"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-05-bkdlockerdepositfees-can-be-front-run-to-steal-the-newly-added-rewardtoken",
        "vulnerability": "`BkdLocker#depositFees()` can be front run to steal the newly added rewardToken"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-13-inconsistency-in-view-functions-can-lead-to-users-believing-theyre-due-for-more-bkd-rewards",
        "vulnerability": "Inconsistency in view functions can lead to users believing they\u2019re due for more BKD rewards"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-03-the-first-amm-staker-may-not-receive-according-rewards-because-of-poor-checkpoints",
        "vulnerability": "THE first AMM Staker may not receive according rewards because of poor checkpoints"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-18-fees-from-delisted-pool-still-in-reward-handler-will-become-stuck-after-delisting",
        "vulnerability": "Fees from delisted pool still in reward handler will become stuck after delisting"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-09-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-02-non-exploitable-reentrancy",
        "vulnerability": "Non-exploitable reentrancy"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-04-amount-distributed-can-be-inaccurate-when-updating-weights",
        "vulnerability": "Amount distributed can be inaccurate when updating weights"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-08-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-01-migrate-still-does-transfers-when-the-transfer-is-to-the-same-pool--and-this-can-be-done-multiple-times",
        "vulnerability": "`migrate()` still does transfers when the transfer is to the same pool, and this can be done multiple times"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-07-feeburner-initiates-swap-without-any-slippage-checks-if-chainlink-oracle-fails",
        "vulnerability": "FeeBurner initiates swap without any slippage checks if Chainlink oracle fails"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-06-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-02-the-first-amm-staker-will-have-control-over-how-the-shares-are-calculated",
        "vulnerability": "The first AMM Staker will have control over how the shares are calculated."
    },
    {
        "name": "2022-05-backd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-backd#h-02-total-supply-is-not-guaranteed-and-is-not-deterministic",
        "vulnerability": "Total Supply is not guaranteed and is not deterministic."
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-17-strategy-in-stakervaultsol-can-steal-more-rewards-even-though-its-designed-strategies-shouldnt-get-rewards",
        "vulnerability": "Strategy in StakerVault.sol can steal more rewards even though it\u2019s designed strategies shouldn\u2019t get rewards."
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-08-users-can-claim-extremely-large-rewards-or-lock-rewards-from-lpgauge-due-to-uninitialised-poollastupdate-variable",
        "vulnerability": "Users can claim extremely large rewards or lock rewards from LpGauge due to uninitialised `poolLastUpdate` variable"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-14-stakervaultunstake--stakervaultunstakefor-would-revert-with-a-uint-underflow-error-of-stakervaultstrategiestotalstaked--stakervaultpooltotalstaked",
        "vulnerability": "StakerVault.unstake(), StakerVault.unstakeFor() would revert with a uint underflow error of StakerVault.strategiesTotalStaked, StakerVault._poolTotalStaked."
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-10-there-are-multiple-ways-for-adminsgovernance-to-rug-users",
        "vulnerability": "There are multiple ways for admins/governance to rug users"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-12-users-can-claim-more-fees-than-expected-if-governance-migrates-current-rewardtoken-again-by-fault",
        "vulnerability": "Users can claim more fees than expected if governance migrates current rewardToken again by fault."
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-11-usage-of-deprecated-transfer-to-send-eth",
        "vulnerability": "Usage of deprecated transfer to send ETH"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-07-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-06-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-03-large-multiples-of-ten-should-use-scientific-notation-eg-1e6-rather-than-decimal-literals-eg-1000000--for-readability",
        "vulnerability": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability"
    },
    {
        "name": "2022-05-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-backd#l-05-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-15-potential-dos-when-removing-keeper-gauge",
        "vulnerability": "Potential DoS when removing keeper gauge"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-10-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-backd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-backd#h-01-mintersolstartinflation-can-be-bypassed",
        "vulnerability": "`Minter.sol#startInflation()` can be bypassed."
    },
    {
        "name": "2022-05-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-backd#m-09-bkdlocker-depositfees-can-be-blocked",
        "vulnerability": "BkdLocker depositFees can be blocked"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-01-unneeded-import",
        "vulnerability": "Unneeded import"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-12-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing",
        "vulnerability": "Not using the named return variables anywhere in the function is confusing"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-11-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-13-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-backd#n-04-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-21-lack-of-solhint-to-ignore-warnings",
        "vulnerability": "Lack of solhint To Ignore Warnings"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-04-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-16-setmaxallowance-should-be-called-in-the-constructor",
        "vulnerability": "setMaxAllowance should be called in the constructor"
    },
    {
        "name": "2022-06-nested",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nested#l-05-unchecked-return-value-of-transferfrom-can-allow-a-user-to-withdraw-native-token-for-free",
        "vulnerability": "Unchecked return value of transferFrom can allow a user to withdraw native token for free"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-07-lack-of-event-emission-for-critical-functions",
        "vulnerability": "Lack of Event Emission For Critical Functions"
    },
    {
        "name": "2022-06-nested",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nested#l-02-impractical-entryexit-fees-are-allowed",
        "vulnerability": "Impractical Entry/Exit fees are allowed"
    },
    {
        "name": "2022-06-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-nested#m-01-user-can-bypass-entryfee-by-sending-arbitrary-calldata-to-paraswap-operator",
        "vulnerability": "User can bypass `entryFee` by sending arbitrary `calldata` to ParaSwap operator"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-01-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in external functions saves gas"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-10-the-require-statements-could-be-put-at-the-beginning-part-of-a-block-of-statements-if-it-doesnt-affect-the-logic-to-save-gas**",
        "vulnerability": "The `require` statements could be put at the beginning part of a block of statements if it doesn\u2019t affect the logic to save gas.**"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-03-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-04-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-01-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to address state variables"
    },
    {
        "name": "2022-06-nested",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nested#l-01-known-vulnerabilities-exist-in-currently-used-@openzeppelincontracts-version",
        "vulnerability": "Known vulnerabilities exist in currently used @openzeppelin/contracts version"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-19-ownerproxy-can-call-selfdestruct",
        "vulnerability": "`OwnerProxy` can call `selfdestruct()`"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-05-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-20-a-magic-number-should-be-documented-and-explained-use-a-constant-instead",
        "vulnerability": "A magic number should be documented and explained. Use a constant instead."
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-11-change-your-imports",
        "vulnerability": "Change your imports"
    },
    {
        "name": "2022-06-nested",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nested#l-04-low-level-calls-with-solidity-version-0814-can-result-in-optimiser-bug",
        "vulnerability": "Low level calls with solidity version 0.8.14 can result in optimiser bug"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-15-transfertoreserveandstore-balancereserveafter-can-be-inlined",
        "vulnerability": "transferToReserveAndStore: balanceReserveAfter can be inlined"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-13-constructor-parameters-should-be-avoided-when-possible",
        "vulnerability": "Constructor parameters should be avoided when possible"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-12-add-nameslength->-0-check-in-areoperatorsimported-method",
        "vulnerability": "Add `namesLength > 0` check in `areOperatorsImported()` method"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-14-can-save-gas-when-call-submitoutorders-with-toreserve-=-false",
        "vulnerability": "Can save gas when call `_submitOutOrders()` with `_toReserve = false`"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-18-use-either-msgsender-or-msgsender",
        "vulnerability": "Use either `_msgSender()` or `msg.sender`"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-09-missing-selector-check-on-operator",
        "vulnerability": "Missing selector check on operator"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-11-unnecessary-computation",
        "vulnerability": "Unnecessary computation"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-08-too-recent-of-a-pragma",
        "vulnerability": "Too Recent of a Pragma"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-07-division-by-two-should-use-bit-shifting",
        "vulnerability": "Division by two should use bit shifting"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-10-unused-imports",
        "vulnerability": "Unused imports"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-09-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-12-mathematical-optimizations",
        "vulnerability": "Mathematical optimizations"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-14-consider-checking-the-recipient-address-for-existence-before-making-the-call",
        "vulnerability": "Consider checking the recipient address for existence before making the call"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-06-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for `constants`, saves gas"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-02-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a return statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-06-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-nested",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-nested#l-03-poolcoinamount-validation",
        "vulnerability": "poolCoinAmount validation"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-17-naming-inconsistency---some-arguments-have--at-their-prefixes-but-others-do-not-at-nestedfactorysol",
        "vulnerability": "Naming inconsistency - some arguments have `_` at their prefixes but others do not at NestedFactory.sol"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-05-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-08-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-03-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "Public functions not called by the contract should be declared external instead"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-16-inequality",
        "vulnerability": "Inequality"
    },
    {
        "name": "2022-06-nested",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-nested#g-02-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using `storage` instead of `memory` for structs/arrays saves gas"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-15-consider-using-ierc20-type-instead-of-address",
        "vulnerability": "Consider using IERC20 type instead of address"
    },
    {
        "name": "2022-06-nested",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-nested#n-13-libraries--interfaces--and-external-imports-can-be-ordered-nicely",
        "vulnerability": "Libraries, interfaces, and external imports can be ordered nicely"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-09-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-03-constant-values-such-as-a-call-to-keccak256--should-used-to-immutable-rather-than-constant",
        "vulnerability": "Constant values such as a call to `keccak256()`, should used to immutable rather than constant"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-08-<x>-+=-<y>-cost-more-gas-than-<x>-=-<x>-+-<y>",
        "vulnerability": "`<x> += <y>` cost more gas than `<x> = <x> + <y>`"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-06-buy-in-lpdasol-can-be-manipulated-by-buyers",
        "vulnerability": "`buy()` in `LPDA.sol` Can be Manipulated by Buyers"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-10-floating-pragma",
        "vulnerability": "Floating pragma"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-10-sale-contracts-can-be-bricked-if-any-other-minter-mints-a-token-with-an-id-that-overlaps-the-sale",
        "vulnerability": "Sale contracts can be bricked if any other minter mints a token with an id that overlaps the sale"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-03-use-cached-value-from-memory-rather-than-read-storage",
        "vulnerability": "Use cached value from memory rather than read storage"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-07-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-08-unsafe-downcasting-operation-truncate-users-input",
        "vulnerability": "Unsafe downcasting operation truncate user\u2019s input"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-13-lack-of-event-emission-after-critical-initialize-functions",
        "vulnerability": "Lack of event emission after critical `initialize()` functions"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-07-change-for-loop-behavior-by-removing-add-+1-and-++x-is-more-gas-efficient",
        "vulnerability": "Change for loop behavior by removing add (+1) and ++x is more gas efficient"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-02-use-of-payabletransfer-might-render-eth-impossible-to-withdraw",
        "vulnerability": "Use of `payable.transfer()` Might Render ETH Impossible to Withdraw"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-06-setfeereceiver-value-check-is-missing-in-critical-set-functions",
        "vulnerability": "`setFeeReceiver` value check is missing in critical Set Functions"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-03-openeditionbuy-might-revert-due-to-uint-overflow-when-it-should-work",
        "vulnerability": "`OpenEdition.buy()` might revert due to uint overflow when it should work."
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-01-insufficient-coverage",
        "vulnerability": "Insufficient coverage"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-01-refactor-sale-struct-to-avoid-using-unnecessary-storage-slot",
        "vulnerability": "Refactor Sale struct to avoid using unnecessary storage slot"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-13-ownership-of-eschererc721sol-contracts-can-be-changed--thus-creator-roles-become-useless",
        "vulnerability": "Ownership of EscherERC721.sol contracts can be changed, thus creator roles become useless"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-11-add-parameter-to-event-emit",
        "vulnerability": "Add parameter to Event-Emit"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-15-initial-value-check-is-missing-in-set-functions",
        "vulnerability": "Initial value check is missing in Set Functions"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-12-nfts-mintable-after-auction-deadline-expires",
        "vulnerability": "NFTs mintable after Auction deadline expires"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-07-eth-will-get-stuck-if-all-nfts-do-not-get-sold",
        "vulnerability": "ETH will get stuck if all NFTs do not get sold."
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-05-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "`Function writing` that does not comply with the `Solidity Style Guide`"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-03-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-12-escher",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-escher#h-01-selfdestruct-may-cause-the-funds-to-be-lost",
        "vulnerability": "selfdestruct may cause the funds to be lost"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-02-test-arguments-and-actual-contract-arguments-are-incompatible",
        "vulnerability": "Test arguments and actual contract arguments are incompatible"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-08-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "`Empty blocks` should be _removed_ or _Emit_ something"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-14-natspec-is-missing",
        "vulnerability": "NatSpec is missing"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-05-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-16-protect-your-nft-from-copying-in-pow-forks",
        "vulnerability": "Protect your NFT from copying in POW forks"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-09-selfdestruct-will-not-be-available-after-eip-4758",
        "vulnerability": "`selfdestruct()` will not be available after EIP-4758"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-06-lack-of-event-emission-after-critical-initialize-function",
        "vulnerability": "Lack of event emission after critical `initialize()` function"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-05-inconsistency-in-fees",
        "vulnerability": "Inconsistency in fees"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-04-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-05-increment-in-the-for-loops-post-condition-can-be-made-unchecked",
        "vulnerability": "Increment in the for loop\u2019s post condition can be made unchecked"
    },
    {
        "name": "2022-12-escher",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-escher#h-02-lpda-price-can-underflow-the-price-due-to-bad-settings-and-potentially-brick-the-contract",
        "vulnerability": "`LPDA` price can underflow the price due to bad settings and potentially brick the contract"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-01-use-ownable2stepupgradeable-instead-of-ownableupgradeable-contract",
        "vulnerability": "Use `Ownable2StepUpgradeable` instead of `OwnableUpgradeable` contract"
    },
    {
        "name": "2022-12-escher",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-escher#h-03-salereceiver-and-feereceiver-can-steal-refunds-after-sale-has-ended",
        "vulnerability": "`saleReceiver` and `feeReceiver` can steal refunds after sale has ended"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-11-creator-can-still-\u201ccancel\u201d-a-sale-after-it-has-started-by-revoking-permissions-in-openedition-contract",
        "vulnerability": "Creator can still \u201ccancel\u201d a sale after it has started by revoking permissions in `OpenEdition` contract"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-04-for-functions--follow-solidity-standard-naming-conventions",
        "vulnerability": "For functions, follow Solidity standard naming conventions"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-04-removing-cache-sale-to-memory-saves-gas",
        "vulnerability": "Removing cache Sale to memory saves gas"
    },
    {
        "name": "2022-12-escher",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-escher#l-02-use-safetransferownership-instead-of-transferownership-function",
        "vulnerability": "Use `safeTransferOwnership` instead of `transferOwnership` function"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-04-editions-should-be-checked-if-they-are-actually-deployed-from-the-legitimate-escher721factory",
        "vulnerability": "Editions should be checked if they are actually deployed from the legitimate Escher721Factory"
    },
    {
        "name": "2022-12-escher",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-escher#m-01-escher721-contract-does-not-have-settokenroyalty-function",
        "vulnerability": "Escher721 contract does not have setTokenRoyalty function"
    },
    {
        "name": "2022-12-escher",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-escher#n-12-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-06-simplify-end-function",
        "vulnerability": "Simplify `_end` function"
    },
    {
        "name": "2022-12-escher",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-escher#g-02-cache-repeated-parameters-from-sale-in-buy-function",
        "vulnerability": "Cache repeated parameters from Sale in `buy()` function."
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-04-the-ferc1155sol-dont-respect-the-eip2981",
        "vulnerability": "The `FERC1155.sol` don\u2019t respect the EIP2981"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-09-empty-blocks-should-emit-an-event",
        "vulnerability": "Empty blocks should emit an event"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-18-shifting-cheaper-than-division",
        "vulnerability": "Shifting cheaper than division"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-07-constants-can-be-private",
        "vulnerability": "Constants can be private"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-03-risk-of-plugins",
        "vulnerability": "Risk of Plugins"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-03-a-vault-owner-can-also-be-the-controller-and-arbitraily-set-the-secondary-market-royalties",
        "vulnerability": "A vault owner can also be the controller and arbitraily set the secondary market royalties"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-04-caching-mapping-accesses-in-local-variables-to-save-gas",
        "vulnerability": "Caching mapping accesses in local variables to save gas"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-08-migration-proposer-can-hijack-other-users-buyout-to-settle-a-vault",
        "vulnerability": "Migration Proposer Can Hijack Other User\u2019s Buyout To Settle A Vault"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-17-revert-strings-length",
        "vulnerability": "Revert strings length"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-17-proposal-which-started-buyout-which-fails-is-able-to-settle-migration-as-if-its-buyout-succeeded",
        "vulnerability": "Proposal which started buyout which fails is able to settle migration as if its buyout succeeded."
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-07-[buyout-module]-fraction-price-is-not-updated-when-total-supply-changes",
        "vulnerability": "[Buyout module] Fraction price is not updated when total supply changes"
    },
    {
        "name": "2022-07-fractional",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-fractional#n-05-variable-should-be-called-isinit-instead-of-nonce",
        "vulnerability": "Variable Should Be Called `isInit` Instead Of `Nonce`"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-08-custom-errors",
        "vulnerability": "Custom Errors"
    },
    {
        "name": "2022-07-fractional",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-fractional#n-04-assembly-within-supplysol-and-transfersol",
        "vulnerability": "Assembly Within `Supply.sol` and `Transfer.sol`"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-23-unnecessary-computation",
        "vulnerability": "Unnecessary computation"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-03-migration-no-check-that-user-supplied-proposalid-and-vault-match",
        "vulnerability": "Migration: no check that user-supplied `proposalId` and `vault` match"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-04-division-rounding-can-make-fraction-price-lower-than-intended-down-to-zero",
        "vulnerability": "Division rounding can make fraction-price lower than intended (down to zero)"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-11-users-can-lose-fractions-to-precision-loss-during-migraction-if-newfractionsupply-is-set-very-low",
        "vulnerability": "Users can lose fractions to precision loss during migraction if _newFractionSupply is set very low"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-14-fund-will-be-stuck-if-a-buyout-is-started-while-there-are-pending-migration-proposals",
        "vulnerability": "Fund will be stuck if a buyout is started while there are pending migration proposals"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-01-array-length-should-not-be-looked-up-in-every-iteration",
        "vulnerability": "Array length should not be looked up in every iteration"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-02-bytes-constant-are-cheaper-than-string-constants",
        "vulnerability": "Bytes constant are cheaper than string constants"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-05-calldata-instead-of-memory-for-ro-function-parameters",
        "vulnerability": "Calldata instead of memory for RO function parameters"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-14-mathematical-optimizations",
        "vulnerability": "Mathematical optimizations"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-22-unchecked-arithmetic",
        "vulnerability": "Unchecked arithmetic"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-02-a-vault-owner-can-frontrun-a-plugin-call-and-change-its-implementation",
        "vulnerability": "A vault owner can frontrun a plugin call and change its implementation"
    },
    {
        "name": "2022-07-fractional",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-fractional#n-03-use-modifier-for-better-readability-and-code-reuse",
        "vulnerability": "Use Modifier For Better Readability And Code Reuse"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-06-any-fractions-deposited-into-any-proposal-can-be-stolen-at-any-time-until-it-is-commited",
        "vulnerability": "Any fractions deposited into any proposal can be stolen at any time until it is commited"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-06-migration-fails-when-all-tokens-are-joined",
        "vulnerability": "Migration fails when all tokens are joined"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-10-migration-total-supply-reduction-can-be-used-to-remove-minority-shareholders",
        "vulnerability": "Migration total supply reduction can be used to remove minority shareholders"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-05-ownership-may-be-burned",
        "vulnerability": "Ownership May Be Burned"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-20-storage-pointer-for-structs",
        "vulnerability": "Storage pointer for structs"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-18-the-time-constraint-of-selling-fractions-can-be-bypassed-by-directly-transferring-fraction-tokens-to-the-buyout-contract",
        "vulnerability": "The time constraint of selling fractions can be bypassed by directly transferring fraction tokens to the buyout contract"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-16-migratefractions-may-be-called-more-than-once-by-the-same-user-which-may-lead-to-loss-of-tokens-for-other-users",
        "vulnerability": "`migrateFractions` may be called more than once by the same user which may lead to loss of tokens for other users"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-10-steal-nfts-from-a-vault--and-eth-+-fractional-tokens-from-users",
        "vulnerability": "Steal NFTs from a Vault, and ETH + Fractional tokens from users."
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-07-proposer-can-start-a-perpetual-buyout-which-can-only-end-if-the-auction-succeeds-and-is-not-rejected",
        "vulnerability": "Proposer can `start` a perpetual buyout which can only `end` if the auction succeeds and is not rejected"
    },
    {
        "name": "2022-07-fractional",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-fractional#n-01-state-variable-visibility-is-not-set",
        "vulnerability": "State Variable Visibility Is Not Set"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-19-storage-cheaper-than-memory",
        "vulnerability": "Storage cheaper than memory"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-10-nft-can-be-locked-forever-by-a-large-shareholder-causing-it-to-lose-its-utility",
        "vulnerability": "NFT Can be Locked Forever By A Large Shareholder Causing It To Lose Its Utility"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-12-an-attacker-can-dos-vaults-buyout-with-as-little-as-1-wei-per-4-days",
        "vulnerability": "An attacker can DoS vault\u2019s buyout with as little as 1 wei per 4 days"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-05-migrationwithdrawcontribution-falsely-assumes-that-user-should-get-exactly-his-original-contribution-back",
        "vulnerability": "Migration::withdrawContribution falsely assumes that user should get exactly his original contribution back"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-12-immutable-variables-save-storage",
        "vulnerability": "Immutable variables save storage"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-20-migrations-leave-function-allows-leaving-a-committed-proposal",
        "vulnerability": "Migration\u2019s `leave` function allows leaving a committed proposal"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-02-migration-sequence-not-enforced",
        "vulnerability": "Migration Sequence Not Enforced"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-15-failed-proposal-can-be-committed-again",
        "vulnerability": "Failed proposal can be committed again"
    },
    {
        "name": "2022-07-fractional",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-fractional#n-02-incorrect-comment",
        "vulnerability": "Incorrect Comment"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-02-forced-buyouts-can-be-performed-by-malicious-buyers",
        "vulnerability": "Forced buyouts can be performed by malicious buyers"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-08-migrationjoin-and-migrationleave-can-still-work-after-unsucessful-migration",
        "vulnerability": "Migration.join() and Migration.leave() can still work after unsucessful migration."
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-13-migration-module-re-enter-commit-using-custom-token",
        "vulnerability": "Migration Module: Re-enter `commit` using custom token"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-12-malicious-users-can-exploit-residual-allowance-to-steal-assets",
        "vulnerability": "Malicious Users Can Exploit Residual Allowance To Steal Assets"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-08-cash-out-from-a-successful-buyout-allows-an-attacker-to-drain-ether-from-the-buyout-contract",
        "vulnerability": "Cash-out from a successful buyout allows an attacker to drain Ether from the `Buyout` contract"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-05-buyout-module-redeeming-before-the-update-of-totalsupply-will-make-buyouts-current-state-success",
        "vulnerability": "Buyout Module: `redeem`ing before the update of totalSupply will make buyout\u2019s current state success"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-01-vault-implementation-can-be-destroyed-leading-to-loss-of-all-assets",
        "vulnerability": "Vault implementation can be destroyed leading to loss of all assets"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-11-use-of-payabletransfer-may-lock-user-funds",
        "vulnerability": "Use of `payable.transfer()` may lock user funds"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-04-ether-might-stuck-in-vaultsol",
        "vulnerability": "Ether Might Stuck In `Vault.sol`"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-21-transfers-should-be-avoided-if-amount-null",
        "vulnerability": "Transfers should be avoided if amount null"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-03-caching-storage-variables-in-local-variables-to-save-gas",
        "vulnerability": "Caching storage variables in local variables to save gas"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-11-vault-cannot-support-more-than-6-module-functions",
        "vulnerability": "Vault Cannot Support More Than 6 Module Functions"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-01-delegate-call-in-vaultexecute-can-alter-vaults-ownership",
        "vulnerability": "Delegate call in `Vault#_execute` can alter Vault\u2019s ownership"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-06-constant-expressions",
        "vulnerability": "Constant expressions"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-01-lack-of-reentrancy-guards",
        "vulnerability": "Lack Of Reentrancy Guards"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-10-event-fields-are-redundant",
        "vulnerability": "Event fields are redundant"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-09-plugin-function-might-be-overwritten-due-to-index-collision",
        "vulnerability": "Plugin Function Might Be Overwritten Due To Index Collision"
    },
    {
        "name": "2022-07-fractional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-fractional#m-09-fallback-function-can-bypass-permissionauth-checks-imposed-in-execute",
        "vulnerability": "`fallback()` function can bypass permission/auth checks imposed in `execute()`"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-11-functions-with-access-control-cheaper-if-payable",
        "vulnerability": "Functions with access control cheaper if payable"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-16-prefix-increments",
        "vulnerability": "Prefix increments"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-13-inline-functions",
        "vulnerability": "Inline functions"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-19-migration-can-permanently-fail-if-user-specifies-different-lengths-for-selectors-and-plugins",
        "vulnerability": "Migration can permanently fail if user specifies different lengths for `selectors` and `plugins`"
    },
    {
        "name": "2022-07-fractional",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-fractional#g-15-modifier-instead-of-duplicate-require",
        "vulnerability": "Modifier instead of duplicate require"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-07-consider-two-phase-ownership-transfer",
        "vulnerability": "Consider Two-Phase Ownership Transfer"
    },
    {
        "name": "2022-07-fractional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-fractional#h-09-malicious-user-could-burn-the-assets-after-a-successful-migration",
        "vulnerability": "Malicious User Could Burn The Assets After A Successful Migration"
    },
    {
        "name": "2022-07-fractional",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-fractional#l-06-array-length-not-validated",
        "vulnerability": "Array Length Not Validated"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-06-noncustodialpsm-can-become-insolvent-as-cpi-index-rises",
        "vulnerability": "`NonCustodialPSM` can become insolvent as CPI index rises"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-17-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-04-oracleref-assumes-backup-oracle-uses-the-same-normalizer-as-main-oracle",
        "vulnerability": "`OracleRef` assumes backup oracle uses the same normalizer as main oracle"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-14-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-06-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-12-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-02-setting-new-buffer-does-not-reduce-current-buffer-to-cap",
        "vulnerability": "Setting new buffer does not reduce current buffer to cap"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-15-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-03-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-03-div-by-0",
        "vulnerability": "Div by 0"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-05-updating-rate-limit-for-addresses-restores-their-entire-buffer-amount",
        "vulnerability": "Updating rate limit for addresses restores their entire buffer amount"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-11-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use `immutable` rather than `constant`"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-16-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-03-volt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-volt#h-01-oracle-price-does-not-compound",
        "vulnerability": "Oracle price does not compound"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-09-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-04-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-01-store-the-timestamp-endpoint-rather-than-re-calculating-it-every-time",
        "vulnerability": "Store the timestamp endpoint rather than re-calculating it every time"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-13-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-02-lots-of-duplicated-code-between-ratelimitedsol-and-multiratelimitedsol",
        "vulnerability": "Lots of duplicated code between `RateLimited.sol` and `MultiRateLimited.sol`"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-10-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-03-volt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-volt#m-01-vcon-address-change-not-persistent-across-protocol-components",
        "vulnerability": "`vcon` address change not persistent across protocol components"
    },
    {
        "name": "2022-03-volt",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-volt#g-07-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-07-gas-saving-using-immutable",
        "vulnerability": "Gas saving using `immutable`"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-03-use-calldata-instead-of-memory",
        "vulnerability": "Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-02-avoid-compound-assignment-operator-in-state-variables",
        "vulnerability": "Avoid compound assignment operator in state variables"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-06-unnecessary-cast-in-mailboxserializel2transaction",
        "vulnerability": "Unnecessary cast in `Mailbox.serializeL2Transaction`"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-01-use-require-instead-of-assert",
        "vulnerability": "Use `require` instead of `assert`"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-04-shift-right-or-left-instead-of-dividing-or-multiply-by-2",
        "vulnerability": "Shift right or left instead of dividing or multiply by 2"
    },
    {
        "name": "2022-10-zksync",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-zksync#m-02-blockperiod-is-incorrect",
        "vulnerability": "`BLOCK_PERIOD` is incorrect"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-09-use-require-instead-of-assert",
        "vulnerability": "Use `require` instead of `assert`"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-08-reorder-structure-layout",
        "vulnerability": "Reorder structure layout"
    },
    {
        "name": "2022-10-zksync",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-zksync#g-05-theres-no-need-to-set-default-values-for-variables",
        "vulnerability": "There\u2019s no need to set default values for variables"
    },
    {
        "name": "2022-10-zksync",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-zksync#m-01-diamondcut-is-not-protected-in-case-of-governors-key-leakage",
        "vulnerability": "`diamondCut` is not protected in case of governor\u2019s key leakage"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#m-01-unhandled-return-value-of-transferfrom-in-timelockerc20-could-lead-to-fund-loss-for-recipients",
        "vulnerability": "Unhandled return value of `transferFrom` in `timeLockERC20()` could lead to fund loss for recipients"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#m-03-timelockerc721keys-could-exceed-the-block-size-limit",
        "vulnerability": "`timelockERC721Keys` could exceed the block size limit"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#m-02-transfererc721-doesnt-clean-timelockerc721s",
        "vulnerability": "`transferERC721` doesn\u2019t clean `timelockERC721s`"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#h-02-nft-transfer-approvals-are-not-removed-and-cannot-be-revoked-thus-leading-to-loss-of-nft-tokens",
        "vulnerability": "NFT transfer approvals are not removed and cannot be revoked thus leading to loss of NFT tokens"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#h-03-approval-for-nft-transfers-is-not-removed-after-transfer",
        "vulnerability": "Approval for NFT transfers is not removed after transfer"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#h-04-unbounded-loop-in-removenft-could-lead-to-a-griefingdos-attack",
        "vulnerability": "Unbounded loop in `_removeNft` could lead to a griefing/DOS attack"
    },
    {
        "name": "2021-05-visorfinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-visorfinance#h-01-a-previously-timelocked-nft-token-becomes-permanently-stuck-in-vault-if-its-ever-moved-back-into-the-vault",
        "vulnerability": "A previously timelocked NFT token becomes permanently stuck in vault if it\u2019s ever moved back into the vault"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-05-totalsupply-may-exceed-libbasketstoragebasketstoragemaxcap",
        "vulnerability": "`totalSupply` may exceed `LibBasketStorage.basketStorage().maxCap`"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-07-erc20-return-values-not-checked",
        "vulnerability": "ERC20 return values not checked"
    },
    {
        "name": "2021-12-amun",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-amun#h-01-unused-erc20-tokens-are-not-refunded--and-can-be-stolen-by-attacker",
        "vulnerability": "Unused ERC20 tokens are not refunded, and can be stolen by attacker"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-04-annualized-fee-apy-dependence-on-the-frequency-of-executing-a-function",
        "vulnerability": "Annualized fee APY dependence on the frequency of executing a function"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-03-it-is-possible-to-\u201cuninitialize\u201d-erc20facet-contract",
        "vulnerability": "It is possible to \u201cuninitialize\u201d `ERC20Facet` contract"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-01-function-jointokensingle-in-singletokenjoinsol-and-singletokenjoinv2sol-can-be-made-to-fail",
        "vulnerability": "Function `joinTokenSingle` in `SingleTokenJoin.sol` and `SingleTokenJoinV2.sol` can be made to fail"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-09-failed-transfer-with-low-level-call-could-be-overlooked",
        "vulnerability": "Failed transfer with low level call could be overlooked"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-10-fees-calculations-are-not-accurate",
        "vulnerability": "fees calculations are not accurate"
    },
    {
        "name": "2021-12-amun",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-amun#h-02-it-might-not-be-possible-to-withdraw-tokens-from-the-basket",
        "vulnerability": "It might not be possible to withdraw tokens from the basket"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-08-singlenativetokenexitv2-assumes-first-exchange-holds-the-outputtoken",
        "vulnerability": "SingleNativeTokenExitV2 assumes first exchange holds the outputToken"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-02-unchecked-return-value-from-low-level-call",
        "vulnerability": "Unchecked return value from low-level call()"
    },
    {
        "name": "2021-12-amun",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-amun#m-06-blocktimestamp-or-deadline",
        "vulnerability": "block.timestamp or deadline"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-06-operator-missing-check-for-configparmas[0]-cushionfactor-in-the-constructor",
        "vulnerability": "Operator: missing check for configParmas[0] (cushionFactor) in the constructor"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-15-heart-will-stop-if-all-rewards-are-swept",
        "vulnerability": "Heart will stop if all rewards are swept"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-09-heart-if-the-issuereward-fails-the-heart-beat-will-revert",
        "vulnerability": "Heart: if the issueReward fails the heart beat will revert"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-06-after-endorsing-a-proposal--user-can-transfer-votes-to-another-user-for-endorsing-the-same-proposal-again",
        "vulnerability": "After endorsing a proposal, user can transfer votes to another user for endorsing the same proposal again"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-19-trsry-reenter-from-olympustreasuryrepayloan-to-operatorswap",
        "vulnerability": "TRSRY: reenter from `OlympusTreasury::repayLoan` to `Operator::swap`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-23-treasury-module-is-vulnerable-to-cross-contract-reentrancy",
        "vulnerability": "Treasury module is vulnerable to cross-contract reentrancy"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-11-olympusgovernance-users-can-prevent-their-votes-from-being-revoked",
        "vulnerability": "OlympusGovernance: Users can prevent their votes from being revoked"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-28-activating-same-policy-multiple-times-in-kernel-possible",
        "vulnerability": "Activating same Policy multiple times in Kernel possible"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-10-voted-votes-cannot-change-after-the-user-is-issued-new-votes-or-the-users-old-votes-are-revoked-during-voting",
        "vulnerability": "Voted votes cannot change after the user is issued new votes or the user\u2019s old votes are revoked during voting"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-10-use-named-returns-for-local-variables-where-it-is-possible-3-instances",
        "vulnerability": "Use named `returns` for local variables where it is possible (3 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-09-activateproposal-need-time-delay",
        "vulnerability": "`activateProposal()` need time delay"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-14-revert-operator-should-be-in-the-code-as-early-as-reasonably-possible-3-instances",
        "vulnerability": "`revert` operator should be in the code as early as reasonably possible (3 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-17-no-cap-on-amount-of-votes-means-the-voteradmin-can-get-any-proposal-to-pass",
        "vulnerability": "No Cap on Amount of VOTES means the `voter_admin` can get any proposal to pass"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-31-protocols-walls--cushion-bonds-remain-active-even-if-heart-is-not-beating",
        "vulnerability": "Protocol\u2019s Walls / cushion bonds remain active even if heart is not beating"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-13-dont-compare-boolean-expressions-to-boolean-literals-2-instances",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals (2 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-03-using-private-rather-than-public-for-constants--saves-gas-8-instances",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas (8 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-12-deleting-a-struct-is-cheaper-than-creating-a-new-struct-with-null-values-1-instances",
        "vulnerability": "Deleting a struct is cheaper than creating a new struct with null values. (1 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-01-operatorsetreservefactor-doesnt-check-if-bond-market-should-be-changed",
        "vulnerability": "`Operator::setReserveFactor` doesn\u2019t check if bond market should be changed"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-21-olympusgovernance---active-proposal-does-not-expire",
        "vulnerability": "OlympusGovernance - active proposal does not expire"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-15-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated require()/revert() checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-08-expressions-that-cannot-be-overflowed-can-be-unchecked-5-instances",
        "vulnerability": "Expressions that cannot be overflowed can be unchecked (5 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-11-x-=-x-+-y-is-cheaper-than-x-+=-y;-6-instances",
        "vulnerability": "`x = x + y` is cheaper than `x += y;` (6 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-04-olympusgovernanceexecuteproposal-reentrancy-attack-vulnerable-function",
        "vulnerability": "`OlympusGovernance#executeProposal`: reentrancy attack vulnerable function"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-30-heartbeat-could-be-called-several-times-in-one-block-if-no-one-called-it-for-a-some-time",
        "vulnerability": "`Heart::beat()` could be called several times in one block if no one called it for a some time"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-13-missing-checks-in-kerneldeactivatepolicy",
        "vulnerability": "Missing checks in `Kernel._deactivatePolicy`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-07-endorsed-votes-by-a-user-do-not-decrease-after-the-users-votes-are-revoked",
        "vulnerability": "Endorsed votes by a user do not decrease after the user\u2019s votes are revoked"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-05-proposals-overwrite",
        "vulnerability": "Proposals overwrite"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-02-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory--same-for-array-and-mapping-7-instances",
        "vulnerability": "`storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` (7 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-24-[naz-m1]-chainlinks-latestrounddata-might-return-stale-results",
        "vulnerability": "[NAZ-M1] Chainlink\u2019s `latestRoundData` Might Return Stale Results"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-26-cushion-bond-markets-are-opened-at-wall-price-rather-than-current-price",
        "vulnerability": "Cushion bond markets are opened at wall price rather than current price"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-12-griefingdos-of-withdrawals-by-eoas-from-treasury-trsry-possible",
        "vulnerability": "Griefing/DOS of withdrawals by EOAs from treasury (TRSRY) possible"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-04-use-elementary-types-or-a-user-defined-type-instead-of-a-struct-that-has-only-one-member-1-instances",
        "vulnerability": "Use elementary types or a user-defined `type` instead of a `struct` that has only one member (1 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-16-inconsistant-parameter-requirements-between-constructor-and-set-functions-in-rangesol-and-operatorsol",
        "vulnerability": "Inconsistant parameter requirements between `constructor()` and `Set() functions` in `RANGE.sol` and `Operator.sol`."
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-07-state-variables-can-be-packed-into-fewer-storage-slots-3-instances",
        "vulnerability": "State variables can be packed into fewer storage slots (3 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-22-low-market-bondsswaps-not-working-after-loan-is-taken-from-treasury",
        "vulnerability": "Low market bonds/swaps not working after loan is taken from treasury"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-09-increment-optimization-18-instances",
        "vulnerability": "Increment optimization (18 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-olympus#h-03-trsry-front-runnable-setapprovalfor",
        "vulnerability": "TRSRY: front-runnable `setApprovalFor`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-03-price-unsafe-cast-for-numobservations",
        "vulnerability": "PRICE: unsafe cast for `numObservations`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-01-operator-incorrect-accounting-for-fee-on-transfer-reserve-token",
        "vulnerability": "Operator: incorrect accounting for fee-on-transfer reserve token"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-02-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address--which-may-lead-to-fund-loss",
        "vulnerability": "Solmate `safetransfer` and `safetransferfrom` does not check the codesize of the token address, which may lead to fund loss"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-20-operator-if-wallspread-is-10000--operate-and-beat-will-revert-and-price-information-cannot-be-updated-anymore",
        "vulnerability": "Operator: if WallSpread is 10000, `operate` and `beat` will revert and price information cannot be updated anymore"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-25-moving-average-precision-is-lost",
        "vulnerability": "Moving average precision is lost"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-29-trsry-susceptible-to-loan--withdraw-confusion",
        "vulnerability": "TRSRY susceptible to loan / withdraw confusion"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-02-bondcallback-incorrect-accounting-if-quotetoken-is-rebase-token",
        "vulnerability": "BondCallback: incorrect accounting if quoteToken is rebase token"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-32-admin-cannot-be-changed-to-eoa-after-deployment",
        "vulnerability": "Admin cannot be changed to EOA after deployment"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-05-bondcallback-operator-is-not-set-constructor",
        "vulnerability": "BondCallback: operator is not set `constructor`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-08-bondcallback--operator-upon-modules-upgrade--the-token-approval-should-be-revoked",
        "vulnerability": "BondCallback, Operator: upon module\u2019s upgrade, the token approval should be revoked"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-18-inconsistency-in-staleness-checks-between-ohm-and-reserve-token-oracles",
        "vulnerability": "Inconsistency in staleness checks between OHM and reserve token oracles"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-04-operator-unsafe-cast-for-decimals",
        "vulnerability": "Operator: unsafe cast for decimals"
    },
    {
        "name": "2022-08-olympus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-olympus#n-02-instr--governance-upon-modules-upgrade--all-instruction-data-should-be-carried-over-to-the-new-modules",
        "vulnerability": "INSTR, Governance: upon module\u2019s upgrade, all instruction data should be carried over to the new modules"
    },
    {
        "name": "2022-08-olympus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-olympus#n-04-price-stale-price",
        "vulnerability": "PRICE: stale price"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-06-using-bools-for-storage-incurs-overhead-6-instances",
        "vulnerability": "Using bools for storage incurs overhead (6 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-olympus#h-02-anyone-can-pass-any-proposal-alone-before-first-votes-are-minted",
        "vulnerability": "Anyone can pass any proposal alone before first `VOTES` are minted"
    },
    {
        "name": "2022-08-olympus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-olympus#n-01-kernel-missing-zero-address-check-for-executor-and-admin",
        "vulnerability": "Kernel: missing zero address check for `executor` and `admin`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-08-olympus#n-03-range--price-unused-import-of-fullmath",
        "vulnerability": "RANGE, PRICE: unused import of `FullMath`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-27-unexecutable-proposals-when-actionsmigratekernel-is-not-last-instruction",
        "vulnerability": "Unexecutable proposals when `Actions.MigrateKernel` is not last instruction"
    },
    {
        "name": "2022-08-olympus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-08-olympus#l-07-kernel-misplaced-zero-address-check-for-changekernel",
        "vulnerability": "Kernel: misplaced zero address check for `changeKernel`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-08-\u201ctwap\u201d-used-is-an-observation-weighted-average-price--not-a-time-weighted-one",
        "vulnerability": "\u201cTWAP\u201d used is an observation-weighted-average-price, not a time-weighted one"
    },
    {
        "name": "2022-08-olympus",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-olympus#h-01-in-governancesol--it-might-be-impossible-to-activate-a-new-proposal-forever-after-failed-to-execute-the-previous-active-proposal",
        "vulnerability": "In `Governance.sol`, it might be impossible to activate a new proposal forever after failed to execute the previous active proposal."
    },
    {
        "name": "2022-08-olympus",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-08-olympus#g-01-replace-modifier-with-function-6-instances",
        "vulnerability": "Replace `modifier` with `function` (6 instances)"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-03-rbs-may-redeploy-funds-automatically-if-price-stays-above-or-below-wall-for-longer-than-configregenwait",
        "vulnerability": "RBS may redeploy funds automatically if price stays above or below wall for longer than `_config.regenWait`"
    },
    {
        "name": "2022-08-olympus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-olympus#m-14-the-governance-system-can-be-held-hostage-by-a-malicious-user",
        "vulnerability": "The governance system can be held hostage by a malicious user"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#h-02-yearnv2yieldsource-wrong-subtraction-in-withdraw",
        "vulnerability": "`YearnV2YieldSource` wrong subtraction in withdraw"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-04-the-assumption-that-operator-==-to-user-may-not-hold-leading-to-failed-timelock-deposits",
        "vulnerability": "The assumption that operator == to (user) may not hold leading to failed timelock deposits"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-06-yieldsourceprizepoolcanawardexternal-does-not-work",
        "vulnerability": "`YieldSourcePrizePool_canAwardExternal` does not work"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-05-actual-yield-source-check-on-address-will-succeed-for-non-existent-contract",
        "vulnerability": "Actual yield source check on address will succeed for non-existent contract"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#h-04-withdraw-timelock-can-be-circumvented",
        "vulnerability": "withdraw timelock can be circumvented"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-03-safemath-not-completely-used-in-yield-source-contracts",
        "vulnerability": "`SafeMath` not completely used in yield source contracts"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#h-01-user-could-lose-underlying-tokens-when-redeeming-from-the-idleyieldsource",
        "vulnerability": "User could lose underlying tokens when redeeming from the `IdleYieldSource`"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-02-return-values-of-erc20-transfer-and-transferfrom-are-unchecked",
        "vulnerability": "Return values of ERC20 `transfer` and `transferFrom` are unchecked"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#h-03-badgeryieldsource-balanceoftoken-share-calculation-seems-wrong",
        "vulnerability": "`BadgerYieldSource` `balanceOfToken` share calculation seems wrong"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#h-05-idleyieldsource-doesnt-use-mantissa-calculations",
        "vulnerability": "`IdleYieldSource` doesn\u2019t use mantissa calculations"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-01-safeapprove-for-yearn-vault-may-revert-preventing-deposits-causing-dos",
        "vulnerability": "`safeApprove()` for Yearn Vault may revert preventing deposits causing DoS"
    },
    {
        "name": "2021-06-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-pooltogether#m-07-using-transferfrom-on-erc721-tokens",
        "vulnerability": "Using `transferFrom` on ERC721 tokens"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-15-use-msgsender-instead-of-openzeppelins-msgsender-when-meta-transactions-capabilities-arent-used",
        "vulnerability": "Use `msg.sender` instead of OpenZeppelin\u2019s `_msgSender()` when meta-transactions capabilities aren\u2019t used"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-05-use-of-send-may-revert-if-the-recipients-fallback-function-consumes-more-than-2300-gas",
        "vulnerability": "Use of `.send()` May Revert if The Recipient\u2019s Fallback Function Consumes More Than 2300 Gas"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-01-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-05-forgottenruneswarriorsminter-bidsummonand-publicsummon-unnecessary-require-statement",
        "vulnerability": "`ForgottenRunesWarriorsMinter`: `bidSummon()`and `publicSummon()`: Unnecessary require statement"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-06-boolean-comparisons",
        "vulnerability": "Boolean comparisons"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-08-forgottenruneswarriorsmintercurrentdaprice->-should-be->=",
        "vulnerability": "`ForgottenRunesWarriorsMinter.currentDaPrice()`: `>` should be `>=`"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-04-many-unbounded-and-under-constrained-variables-in-the-system-can-lead-to-unfair-price-or-dos",
        "vulnerability": "Many unbounded and under-constrained variables in the system can lead to unfair price or DoS"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-16-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-07->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "`> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-04-forgottenruneswarriorsguildforwarderc20s-and-forgottenruneswarriorsminterforwarderc20s-unnecessary-require-statements",
        "vulnerability": "`ForgottenRunesWarriorsGuild.forwardERC20s()` and `ForgottenRunesWarriorsMinter.forwardERC20s()`: Unnecessary require statements"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-02-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-01-ierc20transfer-does-not-support-all-erc20-token",
        "vulnerability": "IERC20.transfer does not support all ERC20 token"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-09-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-13-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-12-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-10-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-02-contract-may-not-have-enough-fund-to-cover-refund",
        "vulnerability": "Contract may not have enough fund to cover refund"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-03-critical-variables-shouldnt-be-changed-after-they-are-set",
        "vulnerability": "Critical variables shouldn\u2019t be changed after they are set"
    },
    {
        "name": "2022-05-runes",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-runes#m-06-the-owner-can-mint-all-of-the-nfts",
        "vulnerability": "The owner can mint all of the NFTs."
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-03-unnecessary-initialize-function",
        "vulnerability": "Unnecessary `initialize()` function"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-14-upgrade-pragma-to-at-least-084",
        "vulnerability": "Upgrade pragma to at least 0.8.4"
    },
    {
        "name": "2022-05-runes",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-runes#g-11-increments-can-be-unchecked",
        "vulnerability": "Increments can be unchecked"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#m-02-comptrollersetuniv3lpvault-will-always-cause-in-use-uniswapv3-positions-to-become-stuck-in-univ3lpvault",
        "vulnerability": "`Comptroller._setUniV3LpVault` will always cause in-use uniswapV3 positions to become stuck in `UniV3LpVault`"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#n-02-missing-zero-address-check-in-constructors-and-the-setter-functions",
        "vulnerability": "Missing zero-address check in constructors and the setter functions"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#n-04-missing-events-for-only-functions-that-change-critical-parameters",
        "vulnerability": "Missing events for only functions that change critical parameters"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#n-03-critical-changes-should-use-two-step-procedure",
        "vulnerability": "Critical changes should use two-step procedure"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#m-04-undercollateralized-loans-possible",
        "vulnerability": "Undercollateralized loans possible"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#m-01-dysfunctional-ctokenacceptadmin-due-to-lack-of-function-to-assign-pendingadmin",
        "vulnerability": "Dysfunctional `CToken._acceptAdmin` due to lack of function to assign `pendingAdmin`"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#l-01-use-safetransfersafetransferfrom-consistently-instead-of-transfertransferfrom",
        "vulnerability": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#m-05-arbitrary-contract-call-within-univ3lpvaultswap-with-controllable-swappath",
        "vulnerability": "Arbitrary contract call within `UniV3LpVault._swap` with controllable `swapPath`"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#n-01-incompatibility-with-rebasingdeflationaryinflationary-tokens",
        "vulnerability": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#l-02-missing-re-entrancy-guard",
        "vulnerability": "Missing Re-entrancy Guard"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#n-05-use-of-blocktimestamp",
        "vulnerability": "Use of Block.timestamp"
    },
    {
        "name": "2022-04-dualityfocus",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-dualityfocus#m-03-not-calling-approve0-before-setting-a-new-approval-causes-the-call-to-revert-when-used-with-tether-usdt",
        "vulnerability": "Not calling `approve(0)` before setting a new approval causes the call to revert when used with Tether (USDT)"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-03-malicious-owner-can-drain-the-market-at-any-time-using-safetywithdraw",
        "vulnerability": "Malicious owner can drain the market at any time using `SafetyWithdraw`"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-01-use-of-deprecated-chainlink-api",
        "vulnerability": "Use of deprecated Chainlink API"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-02-use-of-incorrect-index-leads-to-incorrect-updation-of-funding-rates",
        "vulnerability": "Use of incorrect index leads to incorrect updation of funding rates"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-09-wrong-funding-index-in-settle-when-no-base",
        "vulnerability": "Wrong funding index in settle when no base?"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-01-wrong-trading-pricing-calculations",
        "vulnerability": "Wrong trading pricing calculations"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-04-underflow-problems-occurring-when-a-token-has->18-decimals",
        "vulnerability": "Underflow problems occurring when a token has >18 decimals"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-05-insurance-slippage-reimbursement-can-be-used-to-steal-insurance-fund",
        "vulnerability": "Insurance slippage reimbursement can be used to steal insurance fund"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-03-deflationary-tokens-are-not-supported",
        "vulnerability": "Deflationary tokens are not supported"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-10-prb-math-not-audited",
        "vulnerability": "`prb-math` not audited"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-06-wrong-price-scale-for-gasoracle",
        "vulnerability": "Wrong price scale for `GasOracle`"
    },
    {
        "name": "2021-06-tracer",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-06-tracer#h-04-logic-error-in-fee-subtraction",
        "vulnerability": "Logic error in fee subtraction"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-08-missing-events-for-critical-parameter-changing-operations-by-owner",
        "vulnerability": "Missing events for critical parameter changing operations by owner"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-02-no-check-transferfrom-return-value",
        "vulnerability": "No check `transferFrom()` return value"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-05-add-reentrancy-protections-on-function-executetrade",
        "vulnerability": "Add reentrancy protections on function `executeTrade`"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-11-claim-liquidation-escrow",
        "vulnerability": "Claim liquidation escrow"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-13-trader-orders-can-be-front-run-and-users-can-be-denied-from-trading",
        "vulnerability": "Trader orders can be front-run and users can be denied from trading"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-06-single-step-process-for-critical-ownership-transfer",
        "vulnerability": "Single-step process for critical ownership transfer"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-12-avoid-paying-insurance",
        "vulnerability": "avoid paying insurance"
    },
    {
        "name": "2021-06-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-06-tracer#m-07-malicious-owner-can-arbitrarily-change-fee-to-any-%-value",
        "vulnerability": "Malicious owner can arbitrarily change fee to any % value"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-02-typo-in-pooltemplate-unlock-function-results-in-user-being-able-to-unlock-multiple-times",
        "vulnerability": "Typo in PoolTemplate unlock function results in user being able to unlock multiple times"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-07-requestwithdraw-without-obligation-to-withdraw-allow-underwriter-to-avoid-payout",
        "vulnerability": "`requestWithdraw` without obligation to withdraw allow underwriter to avoid payout"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-05-vaultsol-tokens-with-fee-on-transfer-are-not-supported",
        "vulnerability": "`Vault.sol` Tokens with fee on transfer are not supported"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-01-tokens-can-be-burned-with-no-access-control",
        "vulnerability": "Tokens can be burned with no access control"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-03-signature-replay",
        "vulnerability": "Signature replay"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-09-vaultsetcontroller-owner-of-the-vault-contracts-can-drain-funds-from-the-vault",
        "vulnerability": "`Vault#setController()` owner of the Vault contracts can drain funds from the Vault"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-04-system-debt-is-not-handled-when-insurance-pools-become-insolvent",
        "vulnerability": "System Debt Is Not Handled When Insurance Pools Become Insolvent"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-03-malicious-market-creators-can-steal-tokens-from-unsuspecting-approved-reference-accounts",
        "vulnerability": "Malicious Market Creators Can Steal Tokens From Unsuspecting Approved Reference Accounts"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-08-indextemplatesolcompensate-will-most-certainly-fail",
        "vulnerability": "`IndexTemplate.sol#compensate()` will most certainly fail"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-02-owner-can-call-applycover-multiple-times-in-pooltemplatesol",
        "vulnerability": "Owner can call `applyCover` multiple times in `PoolTemplate.sol`"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-08-unbounded-iteration-over-all-indexes-2",
        "vulnerability": "Unbounded iteration over all indexes (2)"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-04-initial-pool-deposit-can-be-stolen",
        "vulnerability": "Initial pool deposit can be stolen"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-10-a-maliciouscompromised-registry-or-factory-admin-can-drain-all-the-funds-from-the-vault-contracts",
        "vulnerability": "A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-01-repaydebt-in-vaultsol-could-dos-functionality-for-markets",
        "vulnerability": "repayDebt in Vault.sol could DOS functionality for markets"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-11-pooltemplatesolresume-wrong-implementation-of-resume-will-compensate-overmuch-redeem-amount-from-index-pools",
        "vulnerability": "`PoolTemplate.sol#resume()` Wrong implementation of `resume()` will compensate overmuch redeem amount from index pools"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-13-admin-of-the-index-pool-can-withdrawcredit-after-applycover-to-avoid-taking-loss-for-the-compensation-paid-for-a-certain-pool",
        "vulnerability": "Admin of the index pool can `withdrawCredit()` after `applyCover()` to avoid taking loss for the compensation paid for a certain pool"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-12-indextemplatesol-wrong-implementation-allows-lp-of-the-index-pool-to-resume-a-locked-payingout-pool-and-escape-the-responsibility-for-the-compensation",
        "vulnerability": "`IndexTemplate.sol` Wrong implementation allows lp of the index pool to resume a locked `PayingOut` pool and escape the responsibility for the compensation"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-07-wrong-designimplementation-of-permission-control-allows-maliciouscompromised-registry-or-factory-admin-to-steal-funds-from-users-wallet-balances",
        "vulnerability": "Wrong design/implementation of permission control allows malicious/compromised Registry or Factory admin to steal funds from users\u2019 wallet balances"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-06-the-first-depositor-to-a-pool-can-drain-all-users",
        "vulnerability": "the first depositor to a pool can drain all users"
    },
    {
        "name": "2022-01-insure",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-insure#h-05-backdoor-in-withdrawredundant",
        "vulnerability": "backdoor in `withdrawRedundant`"
    },
    {
        "name": "2022-01-insure",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-insure#m-06-index-compensate-is-0-when-totalliquidity-is-enough-to-cover-the-whole-amount",
        "vulnerability": "Index compensate is 0 when totalLiquidity() is enough to cover the whole amount"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-03-repeated-calls-to-shelterwithdraw-can-drain-all-funds-in-shelter",
        "vulnerability": "Repeated Calls to Shelter.withdraw Can Drain All Funds in Shelter"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-30-stakingrewards-reward-rate-can-be-dragged-out-and-diluted",
        "vulnerability": "`StakingRewards` reward rate can be dragged out and diluted"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-02-masterchef-improper-handling-of-deposit-fee",
        "vulnerability": "Masterchef: Improper handling of deposit fee"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-05-usdm-locked-unless-guardian-remove-liquidity",
        "vulnerability": "USDM locked unless guardian remove liquidity"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-21-[concurrewardpool]-possible-reentrancy-when-claiming-rewards",
        "vulnerability": "[ConcurRewardPool] Possible reentrancy when claiming rewards"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-08-donated-tokens-cannot-be-recovered-if-a-shelter-is-deactivated",
        "vulnerability": "Donated Tokens Cannot Be Recovered If A Shelter Is Deactivated"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-02-unconstrained-fee",
        "vulnerability": "Unconstrained fee"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-09-stakingrewardssolnotifyrewardamount-improper-reward-balance-checks-can-make-some-users-unable-to-withdraw-their-rewards",
        "vulnerability": "`StakingRewards.sol#notifyRewardAmount()` Improper reward balance checks can make some users unable to withdraw their rewards"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-06-convexstakingwrappersolcalcrewardintegral-wrong-implementation-can-disrupt-rewards-calculation-and-distribution",
        "vulnerability": "`ConvexStakingWrapper.sol#_calcRewardIntegral` Wrong implementation can disrupt rewards calculation and distribution"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-27-masterchefsol-a-depositor-can-deposit-an-arbitrary-amount-without-no-cost",
        "vulnerability": "`MasterChef.sol` A `depositor` can deposit an arbitrary amount without no cost"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-31-execute-in-voteproxy-should-be-payable",
        "vulnerability": "execute in VoteProxy should be payable"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-12-usdmpegrecoveryprovide-will-fail-if-there-is-an-excess-of-usdm-tokens",
        "vulnerability": "`USDMPegRecovery.provide()` Will Fail If There Is An Excess Of `usdm` Tokens"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-23-transfer-to-treasury-can-register-as-succeeded-when-failing-in-calcrewardintegral",
        "vulnerability": "Transfer to treasury can register as succeeded when failing in `_calcRewardIntegral`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-03-usdmpegrecoverysolwithdraw-withdraw-may-often-fail",
        "vulnerability": "`USDMPegRecovery.sol#withdraw()` withdraw may often fail"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-10-users-will-lose-rewards-if-the-shelter-mechanism-is-enacted-before-a-recent-checkpoint",
        "vulnerability": "Users Will Lose Rewards If The Shelter Mechanism Is Enacted Before A Recent Checkpoint"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-20-masterchefupdatepool-fails-to-update-reward-variables-if-blocknumber->=-endblock",
        "vulnerability": "`MasterChef.updatePool()` Fails To Update Reward Variables If `block.number >= endBlock`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-07-fee-on-transfer-token-donations-in-shelter-break-withdrawals",
        "vulnerability": "Fee-on-transfer token donations in `Shelter` break withdrawals"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-06-stakingrewardssol-recovererc20-can-be-used-as-a-backdoor-by-the-owner-to-retrieve-rewardstoken",
        "vulnerability": "`StakingRewards.sol` `recoverERC20()` can be used as a backdoor by the `owner` to retrieve `rewardsToken`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-13-stakingrewardsrecovererc20-allows-owner-to-rug-the-rewardstoken",
        "vulnerability": "`StakingRewards.recoverERC20` allows owner to rug the `rewardsToken`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-14-owner-can-steal-concur-rewards",
        "vulnerability": "Owner can steal Concur rewards"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-19-rogue-pool-in-shelter",
        "vulnerability": "Rogue pool in Shelter"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-05-usdmpegrecovery-risk-of-fund-locked--due-to-discrepancy-between-curvelp-token-value-against-internal-contract-math",
        "vulnerability": "`USDMPegRecovery` Risk of fund locked, due to discrepancy between curveLP token value against internal contract math"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-11-convexstakingwrappercalcrewardintegral-can-be-manipulated-to-steal-tokens-from-other-pools",
        "vulnerability": "`ConvexStakingWrapper._calcRewardIntegral()` Can Be Manipulated To Steal Tokens From Other Pools"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-16-rewards-get-diluted-because-totalallocpoint-can-only-increase",
        "vulnerability": "Rewards get diluted because `totalAllocPoint` can only increase."
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-24-rewards-distribution-can-be-disrupted-by-a-early-user",
        "vulnerability": "Rewards distribution can be disrupted by a early user"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-17-deactivate-function-can-be-bypassed",
        "vulnerability": "Deactivate function can be bypassed"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-29-convexstakingwrapper-deposits-and-withdraws-will-frequently-be-disabled-if-a-token-that-doesnt-allow-zero-value-transfers-will-be-added-as-a-reward-one",
        "vulnerability": "`ConvexStakingWrapper` deposits and withdraws will frequently be disabled if a token that doesn\u2019t allow zero value transfers will be added as a reward one"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-11-convexstakingwrapperentershelter-may-erroneously-overwrite-amountinshelter-leading-to-locked-tokens",
        "vulnerability": "`ConvexStakingWrapper.enterShelter()` May Erroneously Overwrite `amountInShelter` Leading To Locked Tokens"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-01-deposits-after-the-grace-period-should-not-be-allowed",
        "vulnerability": "Deposits after the grace period should not be allowed"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-01-wrong-reward-token-calculation-in-masterchef-contract",
        "vulnerability": "Wrong reward token calculation in MasterChef contract"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-25-convexstakingwrapperdeposit-depositors-may-lose-their-funds-when-the-amount-is-huge",
        "vulnerability": "`ConvexStakingWrapper#deposit()` depositors may lose their funds when the `_amount` is huge"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-18-users-will-lose-concur-rewards-if-the-shelter-mechanism-is-enacted-on-a-pool",
        "vulnerability": "Users Will Lose Concur Rewards If The Shelter Mechanism Is Enacted On A Pool"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-15-owner-can-lock-tokens-in-masterchef",
        "vulnerability": "Owner can lock tokens in `MasterChef`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-26-stakingrewardssetrewardsduration-allows-setting-near-zero-or-enormous-rewardsduration--which-breaks-reward-logic",
        "vulnerability": "`StakingRewards.setRewardsDuration` allows setting near zero or enormous `rewardsDuration`, which breaks reward logic"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-10-convexstakingwrapperexitshelter-will-lock-lp-tokens--preventing-users-from-withdrawing",
        "vulnerability": "`ConvexStakingWrapper.exitShelter()` Will Lock LP Tokens, Preventing Users From Withdrawing"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-22-if-the-staking-token-exists-in-both-stakingrewardssol-and-convexstakingwrappersol-then-it-will-be-possible-to-continue-claiming-concur-rewards-after-the-shelter-has-been-activated",
        "vulnerability": "If The Staking Token Exists In Both `StakingRewards.sol` And `ConvexStakingWrapper.sol` Then It Will Be Possible To Continue Claiming Concur Rewards After The Shelter Has Been Activated"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-08-masterchefsol-users-wont-be-able-to-receive-the-concur-rewards",
        "vulnerability": "`MasterChef.sol` Users won\u2019t be able to receive the `concur` rewards"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-28-during-stake-or-deposit--users-would-not-be-rewarded-the-correct-concur-token--when-masterchef-has-under-supply-of-it",
        "vulnerability": "During stake or deposit, users would not be rewarded the correct Concur token, when MasterChef has under-supply of it"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-09-deposit-in-convexstakingwrapper-will-most-certainly-revert",
        "vulnerability": "deposit in `ConvexStakingWrapper` will most certainly revert"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-07-shelter-claimed-mapping-is-set-with-to-address-and-not-msgsender",
        "vulnerability": "Shelter `claimed` mapping is set with `_to` address and not `msg.sender`"
    },
    {
        "name": "2022-02-concur",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-concur#m-04-usdmpegrecoverysolprovide-improper-designimplementation-make-it-often-unable-to-add-liquidity-to-the-usdm3crv-pool",
        "vulnerability": "`USDMPegRecovery.sol#provide()` Improper design/implementation make it often unable to add liquidity to the `usdm3crv` pool"
    },
    {
        "name": "2022-02-concur",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-concur#h-04-convexstakingwrapper--stakingrewards-wrong-implementation-will-send-concur-rewards-to-the-wrong-receiver",
        "vulnerability": "`ConvexStakingWrapper`, `StakingRewards` Wrong implementation will send `concur` rewards to the wrong receiver"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-06-use-external-visibility",
        "vulnerability": "Use `external` visibility"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-03-non-view-function-is-called-with-staticcall-in-cerc20delegator",
        "vulnerability": "Non view function is called with staticcall in `CErc20Delegator`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-02-acceptinitialadmindelegated-will-revert-in-governorbravodelegator",
        "vulnerability": "`_acceptInitialAdminDelegated` will revert in `GovernorBravoDelegator`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#n-02-meaningless-check-in-governorbravodelegate",
        "vulnerability": "Meaningless check in `GovernorBravoDelegate`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-06-a-cap-is-needed-on-the-amount-of-note-than-can-be-borrowed",
        "vulnerability": "A cap is needed on the amount of Note than can be borrowed"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-03-reorder-structure-layout",
        "vulnerability": "Reorder structure layout"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-08-reduce-boolean-comparison",
        "vulnerability": "Reduce boolean comparison"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-12-unckecked-keyword",
        "vulnerability": "`unckecked` keyword"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-05-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-16-use-memory-instead-of-storage",
        "vulnerability": "Use `memory` instead of `storage`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-04-missing-zero-address-check-can-cause-initialize-to-be-called-more-than-once",
        "vulnerability": "Missing zero address check can cause initialize to be called more than once"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-08-accountantdelegate-the-sweepinterest-function-sweeps-an-incorrect-number-of-cnote",
        "vulnerability": "AccountantDelegate: The sweepInterest function sweeps an incorrect number of cnote"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#n-03-missing-param-in-natspec-in-ctoken",
        "vulnerability": "Missing param in NatSpec in `CToken`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-02-deny-of-service-in-cnotedotransferout",
        "vulnerability": "Deny of service in `CNote.doTransferOut`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-13-use-constant-instead-of-storage",
        "vulnerability": "use `constant` instead of storage"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-05-oracle-failure-check-in-noteratemodel",
        "vulnerability": "Oracle failure check in `NoteRateModel`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-01-price-not-scaled-by-the-base-in-basev1router01",
        "vulnerability": "Price not scaled by the BASE in `BaseV1Router01`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-06-getborrowrate-returns-rate-per-year-instead-of-per-block",
        "vulnerability": "`getBorrowRate` returns rate per year instead of per block"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-01-stableswap---deadline-do-not-work",
        "vulnerability": "Stableswap - Deadline do not work"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-05-admin-can-break-all-functionality-through-weth-address",
        "vulnerability": "Admin Can Break All Functionality Through Weth Address"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#n-05-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-04-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-15-optimize-logic",
        "vulnerability": "Optimize logic"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#n-01-cast-to-int-without-checking-in-noteratemodel",
        "vulnerability": "Cast to `int` without checking in `NoteRateModel`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-04-oracle-periodsize-is-very-low-allowing-the-twap-price-to-be-easily-manipulated",
        "vulnerability": "Oracle `periodSize` is very low allowing the TWAP price to be easily manipulated"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-01-total-supply-can-be-incorrect-in-erc20",
        "vulnerability": "Total supply can be incorrect in `ERC20`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-06-storage-for-delegate-is-outside-of-storage-contract-in-cnote",
        "vulnerability": "Storage for delegate is outside of storage contract in `CNote`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-14-unrequired-method",
        "vulnerability": "Unrequired method"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-02-avoid-creating-unnecessary-variables",
        "vulnerability": "Avoid creating unnecessary variables"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#n-04-misleading-natspec-in-accountantdelegator",
        "vulnerability": "Misleading NatSpec in `AccountantDelegator`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-10-gas-saving-using-immutable",
        "vulnerability": "Gas saving using `immutable`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-11-unused-import",
        "vulnerability": "Unused import"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-04-lack-of-zero-address-check",
        "vulnerability": "Lack of zero address check"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-09-unused-arguments",
        "vulnerability": "Unused arguments"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-07-deny-of-service-in-accountantdelegatesweepinterest",
        "vulnerability": "Deny of service in `AccountantDelegate.sweepInterest`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-03-underlying-asset-price-oracle-for-ctoken-in-basev1-periphery-is-inaccurate",
        "vulnerability": "Underlying asset price oracle for `CToken` in `BaseV1-periphery` is inaccurate"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-01-use-abiencodewithselector-instead-of-abiencodewithsignature",
        "vulnerability": "Use `abi.encodeWithSelector` instead of `abi.encodeWithSignature`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#g-07-theres-no-need-to-set-default-values-for-variables",
        "vulnerability": "There\u2019s no need to set default values for variables"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#l-03-desirable-underflow--overflow-in-basev1pair",
        "vulnerability": "Desirable underflow / overflow in `BaseV1Pair`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#m-02-multiple-initialization-in-noteinterest",
        "vulnerability": "Multiple initialization in `NoteInterest`"
    },
    {
        "name": "2022-06-canto-v2",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-canto-v2#h-05-the-lp-pair-underlying-price-quote-could-be-manipulated",
        "vulnerability": "The LP pair underlying price quote could be manipulated"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-04-function-tokenbyindex-treats-last-index-as-invalid",
        "vulnerability": "function `tokenByIndex` treats last index as invalid"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-00-erc-721-enumerable-spec-mismatch-for-index-of-tokenbyindex-function",
        "vulnerability": "ERC-721 Enumerable Spec mismatch for index of `tokenByIndex()` function"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-02-arbitrary-transfer-of-unowned-nfts",
        "vulnerability": "Arbitrary Transfer of Unowned NFTs"
    },
    {
        "name": "2021-04-meebits",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-meebits#m-02-instead-of-call---transfer-is-used-to-withdraw-the-ether",
        "vulnerability": "instead of `call()` , `transfer()` is used to withdraw the ether"
    },
    {
        "name": "2021-04-meebits",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-meebits#m-01-randomindex-is-not-truly-random---possibility-of-predictably-minting-a-specific-token-id",
        "vulnerability": "`randomIndex` is not truly random - possibility of predictably minting a specific token Id"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-05-nft-can-be-minted-for-free-after-sale-ended",
        "vulnerability": "NFT can be minted for free after sale ended"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-01-signature-malleability-of-evms-ecrecover-in-verify",
        "vulnerability": "Signature malleability of EVM\u2019s `ecrecover` in `verify()`"
    },
    {
        "name": "2021-04-meebits",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-meebits#m-00-legacy-function-usage",
        "vulnerability": "Legacy Function Usage"
    },
    {
        "name": "2021-04-meebits",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-meebits#h-03-beebotstradevalid-will-erroneously-return-true-when-maker-is-set-to-address0-and-makerids-are-set-to-the-tokenids-of-unminted-beebot-nfts",
        "vulnerability": "`Beebots.TradeValid()` Will Erroneously Return True When Maker Is Set To `Address(0)` and `makerIds` Are Set To The `TokenIds` of Unminted Beebot NFTs"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-02-publisher-can-lock-all-user-funds-in-the-basket-in-order-to-force-a-user-to-have-their-bond-burned",
        "vulnerability": "Publisher can lock all user funds in the `Basket` in order to force a user to have their bond burned"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-07-auctionsolsettleauction-bonder-may-not-be-able-to-settle-a-bonded-auction--leading-to-loss-of-funds",
        "vulnerability": "`Auction.sol#settleAuction()` Bonder may not be able to settle a bonded auction, leading to loss of funds"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-11-baskethandlefees-fees-are-overcharged",
        "vulnerability": "`Basket:handleFees():` fees are overcharged"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-05-change-in-auctionmultiplierauctiondecrement-change-profitability-of-auctions-and-factory-can-steal-all-tokens-from-a-basket-abusing-it",
        "vulnerability": "Change in `auctionMultiplier/auctionDecrement` change profitability of auctions and factory can steal all tokens from a basket abusing it"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-08-lost-fees-due-to-precision-loss-in-fees-calculation",
        "vulnerability": "Lost fees due to precision loss in fees calculation"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-01-missing-cap-on-licensefee",
        "vulnerability": "Missing cap on `LicenseFee`"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-09-baskethandlefees-fee-calculation-is-wrong",
        "vulnerability": "`Basket:handleFees` fee calculation is wrong"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-06-basket-can-be-fully-drained-if-the-auction-is-settled-within-a-specific-block",
        "vulnerability": "Basket can be fully drained if the auction is settled within a specific block"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-10-fee-calculation-is-slightly-off",
        "vulnerability": "Fee calculation is slightly off"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-04-reentrancy-vulnerability-in-basket-contracts-initialize-method",
        "vulnerability": "Reentrancy vulnerability in `Basket` contract\u2019s `initialize()` method."
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#h-01-wrong-fee-calculation-after-totalsupply-was-0",
        "vulnerability": "Wrong fee calculation after `totalSupply` was 0"
    },
    {
        "name": "2021-12-defiprotocol",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-defiprotocol#m-03-basketsolauctionburn-calculates-ibratio-wrong",
        "vulnerability": "`Basket.sol#auctionBurn` calculates `ibRatio` wrong"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-09-improper-control-over-the-versions-of-distributions-metadata-may-lead-to-repeated-claims-of-rewards",
        "vulnerability": "Improper control over the versions of distributions\u2019 metadata may lead to repeated claims of rewards"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-04-validation-can-be-done-earlier-to-save-gas",
        "vulnerability": "Validation can be done earlier to save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-04-send-ether-with-call-instead-of-transfer",
        "vulnerability": "Send ether with call instead of transfer"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-15-fees-can-be-any-amount",
        "vulnerability": "Fees can be any amount"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-03-remove-redundant-access-control-checks-can-save-gas",
        "vulnerability": "Remove redundant access control checks can save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-01-manipulations-of-setfee",
        "vulnerability": "Manipulations of `setFee`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-07-cache-array-length-in-for-loops-can-save-gas",
        "vulnerability": "Cache array length in for loops can save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#n-02-emit-relevant-events-in-constructor-methods-when-variables-are-set--or-abstract-to-internal-functions",
        "vulnerability": "Emit relevant events in constructor methods when variables are set, or abstract to internal functions"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-13-reentrancy-in-depositbribeerc20-function",
        "vulnerability": "Reentrancy in `depositBribeERC20` function"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-02-depositorrole-can-be-granted-by-the-deployer-of-bribevault-and-transfer-bribers-approved-erc20-tokens-to-bribevault-by-specifying-any-bribeidentifier-and-rewardidentifier",
        "vulnerability": "DEPOSITOR_ROLE can be granted by the deployer of `BribeVault` and transfer briber\u2019s approved ERC20 tokens to `bribeVault` by specifying any `bribeIdentifier` and `rewardIdentifier`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-02-using-immutable-variable-can-save-gas",
        "vulnerability": "Using immutable variable can save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-10-distributions-must-not-match-actual-bribes",
        "vulnerability": "Distributions must not match actual bribes"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-17-thecosomataeth-oracle-price-can-be-better-secured-freshness-+-tamper-resistance",
        "vulnerability": "ThecosomataETH: Oracle price can be better secured (freshness + tamper-resistance)"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-03-defaultadminrole-of-bribevault-can-steal-tokens-from-users-wallets",
        "vulnerability": "`DEFAULT_ADMIN_ROLE` of `BribeVault` can steal tokens from users\u2019 wallets"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-18-rewards-can-be-lost",
        "vulnerability": "Rewards can be lost"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-05-typeuint256max-is-more-gas-efficient-than-2**256---1",
        "vulnerability": "`type(uint256).max` is more gas efficient than `2**256 - 1`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#l-04-tokemakbribe-sync-rounds-with-tokemaks-manager-instead-of-manually-setting-rounds-via-setround",
        "vulnerability": "TokemakBribe: Sync rounds with Tokemak\u2019s manager instead of manually setting rounds via `setRound()`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-16-depositorrole-can-manipulate-bamount-value",
        "vulnerability": "`DEPOSITOR_ROLE` can manipulate `b.amount` value"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#n-01-tokemakbribe-getbribe-has-incorrect-description",
        "vulnerability": "TokemakBribe: `getBribe()` has incorrect description"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-06-10e18-is-more-gas-efficient-than-10**18",
        "vulnerability": "`10e18` is more gas efficient than `10**18`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-08-avoid-unnecessary-storage-read-can-save-gas",
        "vulnerability": "Avoid unnecessary storage read can save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#l-02-bribevault-use-safetransfer-for-tokens",
        "vulnerability": "BribeVault: Use `safeTransfer` for tokens"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#l-01-rewarddistributor-change-payableaccounttransfer-to-call-for-native-fund-transfers",
        "vulnerability": "RewardDistributor: Change `payable(account).transfer()` to `.call()` for native fund transfers"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-07-changing-bribevault-in-rewarddistributorsol-will-lock-current-eth-rewards",
        "vulnerability": "Changing `bribeVault` in `RewardDistributor.sol` will Lock Current ETH Rewards"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-11-depositor-can-spend-funds-of-another-depositor",
        "vulnerability": "Depositor can spend funds of another Depositor"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#l-03-rewarddistributor-limit-native-fund-transfers-to-bribevault",
        "vulnerability": "RewardDistributor: Limit native fund transfers to `bribeVault`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#g-01-adding-unchecked-directive-can-save-gas",
        "vulnerability": "Adding unchecked directive can save gas"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-05-wrong-slippage-check",
        "vulnerability": "Wrong slippage check"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-08-admin-privilege---owner-can-rug-via-thecosomataethwithdraw",
        "vulnerability": "Admin Privilege - Owner can rug via `ThecosomataETH.withdraw`"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-06-safeerc20sol-is-imported-but-not-used-in-the-transferbribes-function",
        "vulnerability": "`SafeERC20.sol` is imported but not used in the `transferBribes()` function"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-12-users-can-frontrun-calls-to-updaterewardsmetadata-and-claim-tokens-twice",
        "vulnerability": "Users Can Frontrun Calls to `updateRewardsMetadata()` And Claim Tokens Twice"
    },
    {
        "name": "2022-02-redacted-cartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-redacted-cartel#m-14-transferbribes-could-transfer-before-proposal-deadline-+-input-validation",
        "vulnerability": "transferBribes could transfer before proposal deadline + Input validation"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-04-users-who-deposit-in-one-vault-can-lose-all-deposits-and-receive-nothing-when-counterparty-vault-has-no-deposits",
        "vulnerability": "Users who deposit in one vault can lose all deposits and receive nothing when counterparty vault has no deposits"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-02-end-epoch-cannot-be-triggered-preventing-winners-to-withdraw",
        "vulnerability": "End epoch cannot be triggered preventing winners to withdraw"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-08-vaultsol-is-not-eip-4626-compliant",
        "vulnerability": "Vault.sol is not EIP-4626 compliant"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-14-its-possible-to-change-for-vault-and-lost-control-on-it",
        "vulnerability": "It\u2019s possible to change for Vault and lost control on it"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-08-timewindow-can-be-changed-unexpectedly-that-blocks-users-from-calling-deposit-function",
        "vulnerability": "`timewindow` can be changed unexpectedly that blocks users from calling `deposit` function"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-09-depeg-event-can-happen-at-incorrect-price",
        "vulnerability": "Depeg event can happen at incorrect price"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-15-rewards-are-not-rolled-over",
        "vulnerability": "Rewards are not rolled over"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-05-stakingrewardssolstake-is-intended-to-be-pausable-but-isnt",
        "vulnerability": "StakingRewards.sol#stake is intended to be pausable but isn\u2019t"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-07-user-funds-lost-because-they-cant-withdraw-their-funds-before-epoch-starttime-and-they-are-stuck-in-positions-that-become-unprofitable-even-when-epoch-is-not-started",
        "vulnerability": "User funds lost because they can\u2019t `withdraw()` their funds before epoch startTime and they are stuck in positions that become unprofitable even when epoch is not started"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-9-instances",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage (9 instances)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-16-function-changecontroller-has-rug-potential-as-admin-can-unilaterally-withdraw-all-user-funds-from-both-risk-and-insure-vaults",
        "vulnerability": "function changeController() has rug potential as admin can unilaterally withdraw all user funds from both risk and insure vaults"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-09-stakingrewards-recovererc20-can-be-used-as-a-backdoor-by-the-owner-to-retrieve-rewardstoken",
        "vulnerability": "StakingRewards: recoverERC20() can be used as a backdoor by the owner to retrieve rewardsToken"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-06-fees-are-taken-on-risk-collateral",
        "vulnerability": "Fees are taken on risk collateral"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-06-griefing-attack-on-the-vaults-is-possible--withdrawing-the-winning-side-stakes",
        "vulnerability": "Griefing attack on the Vaults is possible, withdrawing the winning side stakes"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-01-incorrect-handling-of-pricefeeddecimals",
        "vulnerability": "Incorrect handling of `pricefeed.decimals()`"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-03-a-design-flaw-in-the-case-of-using-2-oracles-aka-pegoracle",
        "vulnerability": "A design flaw in the case of using 2 oracles (aka PegOracle)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-13-different-oracle-issues-can-return-outdated-prices",
        "vulnerability": "Different Oracle issues can return outdated prices"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#g-02-cache-the-results-of-an-external-function-instead-of-calling-it-again-5-instances",
        "vulnerability": "Cache the results of an external function instead of calling it again (5 instances)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-07-risk-users-are-required-to-payout-if-the-price-of-the-pegged-asset-goes-higher-than-underlying",
        "vulnerability": "Risk users are required to payout if the price of the pegged asset goes higher than underlying"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-03-stakingrewards-significant-loss-of-precision-possible",
        "vulnerability": "StakingRewards: Significant loss of precision possible"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-02-fee-on-transfer-tokens-cause-problems-in-multiple-places",
        "vulnerability": "Fee-on-Transfer tokens cause problems in multiple places"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-04-it-is-possible-that-receiver-and-treasury-can-receive-nothing-when-calling-withdraw-function-due-to-division-being-performed-before-multiplication",
        "vulnerability": "It is possible that receiver and treasury can receive nothing when calling `withdraw` function due to division being performed before multiplication"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-01-oracle-is-tracked-per-token-instead-of-per-pair--leading-to-surprise-results",
        "vulnerability": "Oracle is tracked per token instead of per pair, leading to surprise results"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-10-stakingrewardssolnotifyrewardamount-improper-reward-balance-checks-can-make-some-users-unable-to-withdraw-their-rewards",
        "vulnerability": "StakingRewards.sol#notifyRewardAmount() Improper reward balance checks can make some users unable to withdraw their rewards"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#g-01-use-custom-errors-rather-than-revertrequire-strings-to-save-gas-13-instances",
        "vulnerability": "Use custom errors rather than revert()/require() strings to save gas (13 instances)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#g-04-using-bools-for-storage-incurs-overhead-1-instance",
        "vulnerability": "Using bools for storage incurs overhead (1 instance)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-12-after-the-vault-expires--users-may-still-receive-rewards-through-the-stakingrewards-contract",
        "vulnerability": "After the vault expires, users may still receive rewards through the StakingRewards contract"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#m-11-stakingrewards-reward-rate-can-be-dragged-out-and-diluted",
        "vulnerability": "StakingRewards reward rate can be dragged out and diluted"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#g-03-modifiers-are-redundant-if-used-only-once-or-not-used-at-all-5-instances",
        "vulnerability": "Modifiers are redundant if used only once or not used at all. (5 instances)"
    },
    {
        "name": "2022-09-y2k-finance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-y2k-finance#h-05-loss-of-precision-resulting-in-wrong-value-for-price-ratio",
        "vulnerability": "LOSS OF PRECISION RESULTING IN WRONG VALUE FOR PRICE RATIO"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-12-missing-maxnumberofkeys-checks-in-sharekey-and-grantkey",
        "vulnerability": "Missing maxNumberOfKeys checks in shareKey and grantKey"
    },
    {
        "name": "2021-11-unlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-unlock#h-03-mixintransfersoltransferfrom-wrong-implementation-can-potentially-allows-attackers-to-reverse-transfer-and-cause-fund-loss-to-the-users",
        "vulnerability": "`MixinTransfer.sol#transferFrom` Wrong implementation can potentially allows attackers to reverse transfer and cause fund loss to the users"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-04-key-buyers-will-not-be-able-to-get-refund-if-lock-manager-withdraws-profits",
        "vulnerability": "Key buyers will not be able to get refund if lock manager withdraws profits"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-07-mixinpurchasesharekey-allows-to-generate-keys-without-purchasing",
        "vulnerability": "MixinPurchase:shareKey allows to generate keys without purchasing"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-08-frontrunning-publiclockinitialize-can-prevent-upgrades-due-to-insufficient-access-control",
        "vulnerability": "Frontrunning `PublicLock.initialize()` can prevent upgrades due to insufficient access control"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-09-referrer-discount-token-amount-can-be-manipulated",
        "vulnerability": "Referrer discount token amount can be manipulated"
    },
    {
        "name": "2021-11-unlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-unlock#h-01-mev-miner-can-mint-larger-than-expected-udt-total-supply",
        "vulnerability": "MEV miner can mint larger than expected UDT total supply"
    },
    {
        "name": "2021-11-unlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-unlock#h-02-wrong-designimplementation-of-freetrial-allows-attacker-to-steal-funds-from-the-protocol",
        "vulnerability": "Wrong design/implementation of freeTrial allows attacker to steal funds from the protocol"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-11-missing-scaling-factor-in-recordkeypurchase",
        "vulnerability": "Missing scaling factor in `recordKeyPurchase`?"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-01-unlock-free-udt-arbitrage-opportunity",
        "vulnerability": "Unlock: free UDT arbitrage opportunity"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-10-inaccurate-fees-computation",
        "vulnerability": "Inaccurate fees computation"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-03-support-of-different-erc20-tokens",
        "vulnerability": "Support of different ERC20 tokens"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-05-refund-mechanism-doesnt-take-into-account-that-key-price-can-change",
        "vulnerability": "Refund mechanism doesn\u2019t take into account that key price can change"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-06-key-transfer-will-destroy-key-if-from==to",
        "vulnerability": "Key transfer will destroy key if from==to"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-14-mixinrefunds-frontrun-updatekeypricing-for-free-profit",
        "vulnerability": "MixinRefunds: frontrun updateKeyPricing() for free profit"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-13-malicious-user-can-get-infinite-free-trial-by-repeatedly-refund-and-repurchase-right-before-the-freetrial-ends",
        "vulnerability": "Malicious user can get infinite free trial by repeatedly refund and repurchase right before the freeTrial ends"
    },
    {
        "name": "2021-11-unlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-unlock#m-02-potential-economic-attack-on-udt-grants-to-the-referrer",
        "vulnerability": "Potential economic attack on UDT grants to the referrer"
    },
    {
        "name": "2021-11-unlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-unlock#h-04-approvals-not-cleared-after-key-transfer",
        "vulnerability": "Approvals not cleared after key transfer"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-17-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-13-convexmasterchef-when-lptoken-is-cvx--reward-calculation-is-incorrect",
        "vulnerability": "`ConvexMasterChef`: When `_lpToken` is cvx, reward calculation is incorrect"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-19-crvdepositorsol-wrong-implementation-of-the-2-week-buffer-for-lock",
        "vulnerability": "`CrvDepositor.sol` Wrong implementation of the 2-week buffer for lock"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-04-auralocker-kick-reward-only-takes-last-locked-amount-into-consideration--instead-of-whole-balance",
        "vulnerability": "`AuraLocker` kick reward only takes last locked amount into consideration, instead of whole balance"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-31-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-07-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-23-dont-compare-boolean-expressions-to-boolean-literals",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-01-wrong-amounts-sent-if-arrays-dont-match",
        "vulnerability": "Wrong amounts sent if arrays don\u2019t match"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-05-override-function-arguments-that-are-unused-should-have-the-variable-name-removed-or-commented-out-to-avoid-compiler-warnings",
        "vulnerability": "`override` function arguments that are unused should have the variable name removed or commented out to avoid compiler warnings"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-14-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-08-locking-up-aura-token-does-not-increase-voting-power-of-individual",
        "vulnerability": "Locking up AURA Token does not increase voting power of individual"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-06-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-07-typeuint<n>max-should-be-used-instead-of-uint<n>-1",
        "vulnerability": "`type(uint<n>).max` should be used instead of `uint<n>(-1)`"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-30-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-16-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-02-incorrectmisleading-natspec",
        "vulnerability": "Incorrect/misleading NatSpec"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-13-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-18-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-28-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-04-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-04-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-17-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-02-crvdepositorwrappersol-relies-on-oracle-that-isnt-frequently-updated",
        "vulnerability": "`CrvDepositorWrapper.sol` relies on oracle that isn\u2019t frequently updated"
    },
    {
        "name": "2022-05-aura",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-aura#h-01-user-can-forfeit-other-user-rewards",
        "vulnerability": "User can forfeit other user rewards"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-07-reward-may-be-locked-forever-if-user-doesnt-claim-reward-for-a-very-long-time-such-that-too-many-epochs-have-been-passed",
        "vulnerability": "Reward may be locked forever if user doesn\u2019t claim reward for a very long time such that too many epochs have been passed"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-03-improperly-skewed-governance-mechanism",
        "vulnerability": "Improperly Skewed Governance Mechanism"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-01-remove-or-replace-unused-state-variables",
        "vulnerability": "Remove or replace unused state variables"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-24-dont-use-safemath-once-the-solidity-version-is-080-or-greater",
        "vulnerability": "Don\u2019t use `SafeMath` once the solidity version is 0.8.0 or greater"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-05-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-09-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-01-baserewardpool4626-is-not-ierc4626-compliant",
        "vulnerability": "`BaseRewardPool4626` is not IERC4626 compliant"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-12-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once",
        "vulnerability": "`keccak256()` should only need to be called on a specific string literal once"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-05-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-02-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-20-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-15-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-13-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-09-reward-can-be-vested-even-after-endtime",
        "vulnerability": "Reward can be vested even after endTime"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-06-rewards-distribution-can-be-delayednever-distributed-on-auralockersoll848",
        "vulnerability": "Rewards distribution can be delayed/never distributed on `AuraLocker.sol#L848`"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-01-unused-file",
        "vulnerability": "Unused file"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-02-call-forfrom-variants-instead-of-copying-an-pasting-code",
        "vulnerability": "Call `For`/`From` variants instead of copying an pasting code"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-25-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-19-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-14-integer-overflow-will-lock-all-rewards-in-auralocker",
        "vulnerability": "Integer overflow will lock all rewards in `AuraLocker`"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-10-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-17-convexmasterchefs-deposit-and-withdraw-can-be-reentered-drawing-all-reward-funds-from-the-contract-if-reward-token-allows-for-transfer-flow-control",
        "vulnerability": "`ConvexMasterChef`\u2019s deposit and withdraw can be reentered drawing all reward funds from the contract if reward token allows for transfer flow control"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-27-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once",
        "vulnerability": "Stack variable used as a cheaper cache for a state variable is only used once"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-10-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-26-multiplicationdivision-by-two-should-use-bit-shifting",
        "vulnerability": "Multiplication/division by two should use bit shifting"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-19-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-22-duplicate-lp-token-could-lead-to-incorrect-reward-distribution",
        "vulnerability": "Duplicate LP token could lead to incorrect reward distribution"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-11-users-may-lose-rewards-to-other-users-if-rewards-are-given-as-fee-on-transfer-tokens",
        "vulnerability": "Users may lose rewards to other users if rewards are given as fee-on-transfer tokens"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-29-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-11-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-05-users-can-grief-reward-distribution",
        "vulnerability": "Users can grief reward distribution"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-03-function-reverts-if-called-a-second-time",
        "vulnerability": "Function reverts if called a second time"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-21-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-09-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-12-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-20-massupdatepools-is-susceptible-to-dos-with-block-gas-limit",
        "vulnerability": "`massUpdatePools()` is susceptible to DoS with block gas limit"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-22-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-21-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "`abi.encode()` is less efficient than `abi.encodePacked()`"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-03-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-15-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-18-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-14-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-04-pragma-experimental-abiencoderv2-is-deprecated",
        "vulnerability": "`pragma experimental ABIEncoderV2` is deprecated"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-18-aurabalrewardpool-charges-a-penalty-to-all-users-in-the-pool-if-the-auralocker-has-been-shut-down",
        "vulnerability": "`AuraBalRewardPool` charges a penalty to all users in the pool if the `AuraLocker` has been shut down"
    },
    {
        "name": "2022-05-aura",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-aura#l-06-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-15-convexmasterchef-saferewardtransfer-can-cause-loss-of-funds",
        "vulnerability": "`ConvexMasterChef`: `safeRewardTransfer` can cause loss of funds"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-08-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-03-remove-tautological-code",
        "vulnerability": "Remove tautological code"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-11-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-16-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-21-convexmasterchef-when-using-add-and-set--it-should-always-call-massupdatepools-to-update-all-pools",
        "vulnerability": "`ConvexMasterChef`: When using `add()` and `set()`, it should always call `massUpdatePools()` to update all pools"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-12-user-will-lose-funds",
        "vulnerability": "User will lose funds"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-08-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-16-ddos-in-balliquidityprovider",
        "vulnerability": "DDOS in `BalLiquidityProvider`"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-20-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-aura",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-aura#m-10-increase-voting-power-by-tokenizing-the-address-that-locks-the-token",
        "vulnerability": "Increase voting power by tokenizing the address that locks the token"
    },
    {
        "name": "2022-05-aura",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-aura#g-32-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-aura",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-aura#n-06-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-03-system-will-not-work-anymore-after-eip-4758",
        "vulnerability": "System will not work anymore after EIP-4758"
    },
    {
        "name": "2022-07-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-axelar#l-01-unused-receive-function",
        "vulnerability": "Unused receive() function"
    },
    {
        "name": "2022-07-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-axelar#n-01-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-07-axelar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-axelar#n-02-unspecific-compiler-version-pragma",
        "vulnerability": "Unspecific Compiler Version Pragma"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-02-xc20wrapper-may-lose-received-token-forever-if-localassetxc20mint-is-reverted-indefinitely",
        "vulnerability": "`XC20Wrapper` may lose received token forever if `LocalAsset(xc20).mint` is reverted indefinitely"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-06-add-cancel-and-refund-option-for-transaction-recovery",
        "vulnerability": "Add cancel and refund option for Transaction Recovery"
    },
    {
        "name": "2022-07-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-axelar#l-04-missing-checks-for-zero-address",
        "vulnerability": "Missing checks for zero address"
    },
    {
        "name": "2022-07-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-axelar#l-02-decimals-not-part-of-erc20-standard",
        "vulnerability": "decimals() not part of ERC20 standard"
    },
    {
        "name": "2022-07-axelar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-axelar#l-03-unsafe-use-of-transfertransferfrom-with-ierc20",
        "vulnerability": "Unsafe use of transfer()/transferFrom() with IERC20"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-05-change-of-operators-possible-from-old-operators",
        "vulnerability": "Change of operators possible from old operators"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-04-previous-{operatorsweightsthreshold}-are-still-able-to-sign-off-new-commands-after-operatorship-is-transferred",
        "vulnerability": "Previous {Operators/Weights/Threshold} Are Still Able To Sign Off New Commands After Operatorship Is Transferred"
    },
    {
        "name": "2022-07-axelar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-axelar#m-01-removewrapping-can-be-called-when-there-are-still-wrapped-tokens",
        "vulnerability": "`removeWrapping` can be called when there are still wrapped tokens"
    },
    {
        "name": "2022-06-badger",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-badger#g-02-use-assembly-when-getting-a-contracts-balance-of-eth",
        "vulnerability": "Use assembly when getting a contract\u2019s balance of ETH."
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-11-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-06-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-03-using-vulnerable-version-of-openzeppelin",
        "vulnerability": "Using vulnerable version of OpenZeppelin"
    },
    {
        "name": "2022-06-badger",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-badger#m-02-badger-rewards-from-hidden-hand-can-permanently-prevent-strategy-from-receiving-bribes",
        "vulnerability": "Badger rewards from Hidden Hand can permanently prevent Strategy from receiving bribes"
    },
    {
        "name": "2022-06-badger",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-badger#l-02-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-01-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-06-badger",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-badger#h-02-aurabal-can-be-stuck-into-the-strategy-contract",
        "vulnerability": "auraBAL can be stuck into the Strategy contract"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-09-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-06-badger",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-badger#l-01-require-should-be-used-instead-of-assert",
        "vulnerability": "`require()` should be used instead of `assert()`"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-05-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-10-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-06-badger",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-badger#m-03-withdrawing-all-funds-at-once-to-vault-can-be-dos-attacked-by-frontrunning-and-locking-dust",
        "vulnerability": "Withdrawing all funds at once to vault can be DoS attacked by frontrunning and locking dust"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-04-missing-initializer-modifier-on-constructor",
        "vulnerability": "Missing `initializer` modifier on constructor"
    },
    {
        "name": "2022-06-badger",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-badger#h-01-attacker-can-call-sweeprewardtoken-when-bribesprocessor==0-and-reward-funds-will-be-lost-because-there-is-no-check-in-sweeprewardtoken-and-handlerewardtransfer-and-sendtokentobribesprocessor",
        "vulnerability": "Attacker can call sweepRewardToken() when `bribesProcessor==0` and reward funds will be lost because there is no check in sweepRewardToken() and _handleRewardTransfer() and _sendTokenToBribesProcessor()"
    },
    {
        "name": "2022-06-badger",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-badger#g-05-use-assembly-to-check-for-address0",
        "vulnerability": "Use assembly to check for address(0)"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-02-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-12-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-06-badger",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-badger#g-01-use-assembly-to-write-storage-values",
        "vulnerability": "Use assembly to write storage values"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-08-missing-event-and-timelock-for-critical-parameter-change",
        "vulnerability": "Missing event and timelock for critical parameter change"
    },
    {
        "name": "2022-06-badger",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-badger#n-07-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-06-badger",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-badger#g-04-use-multiple-require-statments-insted-of-requireexpression-&&-expression-&&-",
        "vulnerability": "Use multiple `require()` statments insted of `require(expression && expression && ...)`"
    },
    {
        "name": "2022-06-badger",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-badger#m-01-harvest-has-no-slippage-protection-when-swapping-aurabal-for-aura",
        "vulnerability": "`_harvest` has no slippage protection when swapping `auraBAL` for `AURA`"
    },
    {
        "name": "2022-06-badger",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-badger#g-03-unchecked{++i}-instead-of-i++-or-use-assembly-when-applicable",
        "vulnerability": "`unchecked{++i}` instead of `i++` (or use assembly when applicable)"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-08-getfirstsample-returns-wrong-sample-if-count-<-samplememory",
        "vulnerability": "`_getFirstSample` returns wrong sample if count < sampleMemory"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-21-stabilizernode-will-mint-an-incentive-for-triggering-an-auction-even-if-an-auction-exists-already",
        "vulnerability": "`StabilizerNode` Will Mint An Incentive For Triggering An Auction Even If An Auction Exists Already"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-20-users-can-contribute-to-an-auction-without-directly-committing-collateral-tokens",
        "vulnerability": "Users Can Contribute To An Auction Without Directly Committing Collateral Tokens"
    },
    {
        "name": "2021-11-malt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-malt#h-04-auctionburnreserveskewgetpegdeltafrequency-wrong-implementation-can-result-in-an-improper-amount-of-excess-liquidity-extension-balance-to-be-used-at-the-end-of-an-auction",
        "vulnerability": "`AuctionBurnReserveSkew.getPegDeltaFrequency()` Wrong implementation can result in an improper amount of excess Liquidity Extension balance to be used at the end of an auction"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-07-movingaveragesetsamplememory-may-broke-movingaverage--making-the-value-of-exchangerate-in-stabilizernodestabilize-being-extremely-wrong",
        "vulnerability": "`MovingAverage.setSampleMemory()` may broke MovingAverage, making the value of `exchangeRate` in `StabilizerNode.stabilize()` being extremely wrong"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-02-frontrunning-in-uniswaphandler-calls-to-uniswapv2router",
        "vulnerability": "Frontrunning in UniswapHandler calls to UniswapV2Router"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-05-notsameblock-can-be-circumvented-in-bondtoaccount",
        "vulnerability": "_notSameBlock() can be circumvented in bondToAccount()"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-15-bonding-doesnt-work-with-fee-on-transfer-tokens",
        "vulnerability": "Bonding doesn\u2019t work with fee-on transfer tokens"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-06-abstractrewardmine---re-entrancy-attack-during-withdrawal",
        "vulnerability": "AbstractRewardMine - Re-entrancy attack during withdrawal"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-11-no-max-for-advanceincentive",
        "vulnerability": "No max for advanceIncentive"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-26-dutch-auction-can-be-manipulated",
        "vulnerability": "Dutch auction can be manipulated"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-09-uniswaphandlermaltmarketprice-returns-wrong-decimals",
        "vulnerability": "`UniswapHandler.maltMarketPrice` returns wrong decimals"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-25-amm-pool-can-be-drained-using-a-flashloan-and-calling-stabilize",
        "vulnerability": "AMM pool can be drained using a flashloan and calling `stabilize`"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-24-distributerewards-does-not-reset-approval-if-not-all-tokens-were-allocated",
        "vulnerability": "`_distributeRewards` Does Not Reset Approval If Not All Tokens Were Allocated"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-28-bondingsol-unbondandbreak-does-not-account-for-edge-case-where-no-tokens-are-returned",
        "vulnerability": "Bonding.sol _unbondAndBreak does not account for edge case where no tokens are returned"
    },
    {
        "name": "2021-11-malt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-malt#h-03-getauctioncore-function-returns-wrong-values-out-of-order",
        "vulnerability": "getAuctionCore function returns wrong values out of order"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-01-timelockrole-has-absolute-power-to-withdraw-all-fund-may-raise-red-flags-for-investors",
        "vulnerability": "TIMELOCK_ROLE Has Absolute Power to Withdraw All FUND May Raise Red Flags for Investors"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-04-the-power-structure-is-too-centralized-and-protocol-may-break-if-anything-happen-to-admin",
        "vulnerability": "The Power Structure is Too Centralized And Protocol May Break If Anything Happen to Admin"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-03-abstractrewardminesolsetrewardtoken-is-dangerous",
        "vulnerability": "AbstractRewardMine.sol#setRewardToken is dangerous"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-14-wrong-permissions-on-reassignglobaladmin",
        "vulnerability": "Wrong permissions on `reassignGlobalAdmin`"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-19-miningservicesetbonding-should-use-bonding-role-instead-of-reinvestor-one",
        "vulnerability": "MiningService.setBonding should use BONDING role instead of REINVESTOR one"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-27-slippage-checks-when-adding-liquidity-are-too-strict",
        "vulnerability": "Slippage checks when adding liquidity are too strict"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-23-addliquidity-does-not-reset-approval-if-not-all-tokens-were-added-to-liquidity-pool",
        "vulnerability": "`addLiquidity` Does Not Reset Approval If Not All Tokens Were Added To Liquidity Pool"
    },
    {
        "name": "2021-11-malt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-malt#h-02-unable-to-remove-liquidity-in-recovery-mode",
        "vulnerability": "Unable to remove liquidity in Recovery Mode"
    },
    {
        "name": "2021-11-malt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-malt#h-01-timelock-can-be-bypassed",
        "vulnerability": "Timelock can be bypassed"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-18-auctionparticipantsol-purchasearbitragetokens-should-not-push-duplicate-auctions",
        "vulnerability": "AuctionParticipant.sol: `purchaseArbitrageTokens` should not push duplicate auctions"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-30-malt-protocol-uses-stale-results-from-maltdatalab-which-can-be-abused-by-users",
        "vulnerability": "Malt Protocol Uses Stale Results From `MaltDataLab` Which Can Be Abused By Users"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-16-theft-of-system-profit",
        "vulnerability": "theft of system profit"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-17-auction-collateraltoken-wont-work-if-token-is-fee-on-transfer-token",
        "vulnerability": "Auction collateralToken won\u2019t work if token is fee-on-transfer token"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-22-calculatemaltrequiredforexit-uses-spot-price-to-calculate-malt-quantity-in-exitearly",
        "vulnerability": "`_calculateMaltRequiredForExit` Uses Spot Price To Calculate Malt Quantity In `exitEarly`"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-12-permissions---return-values-not-checked-when-sending-eth",
        "vulnerability": "Permissions - return values not checked when sending ETH"
    },
    {
        "name": "2021-11-malt",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-malt#h-05-auctioneschapehatchsolexitearly-updates-state-of-the-auction-wrongly",
        "vulnerability": "AuctionEschapeHatch.sol#exitEarly updates state of the auction wrongly"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-29-user-can-bypass-recovery-mode-via-uniswaphandler-to-buy-malt",
        "vulnerability": "User can bypass Recovery Mode via UniswapHandler to buy Malt"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-10-auctionparticipantsol-setreplenishingindex-mistake-could-freeze-unclaimed-tokens",
        "vulnerability": "AuctionParticipant.sol: `setReplenishingIndex` mistake could freeze unclaimed tokens"
    },
    {
        "name": "2021-11-malt",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-malt#m-13-reducing-the-epoch-length-results-in-leaking-value-from-advancement-incentives",
        "vulnerability": "Reducing the epoch length results in leaking value from advancement incentives"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-06-misleading-comment-in-wfcashlogicburn-function",
        "vulnerability": "Misleading comment in `wfCashLogic._burn` function"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-08-dos-set-token-through-erc777-hook",
        "vulnerability": "DOS set token through erc777 hook"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-02-use-of-floating-pragma",
        "vulnerability": "Use of floating pragma"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-02-deposit-and-mint-and-redeeminternal-in-wfcasherc4626-will-revert-for-all-fcash-that-asset-token-is-underlying-token-because-they-always-call-mintinternal-with-useunderlying==true",
        "vulnerability": "deposit() and mint() and _redeemInternal() in wfCashERC4626() will revert for all fcash that asset token is underlying token because they always call _mintInternal() with useUnderlying==True"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-04-matured-fcash-positions-not-automatically-redeemed-in-notionaltrademoduleinitialize",
        "vulnerability": "Matured fCash positions not automatically redeemed in `NotionalTradeModule.initialize`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-03-the-logic-of-isunderlying-in-notionaltrademodule-is-wrong-which-will-cause-mintfcashposition-and-redeemfcashposition-revert-on-fcash-tokens-which-asset-token-is-underlying-token-assettokentype-==-tokentypenonmintable",
        "vulnerability": "The logic of _isUnderlying() in NotionalTradeModule is wrong which will cause mintFCashPosition() and redeemFCashPosition() revert on `fcash` tokens which asset token is underlying token (asset.tokenType == TokenType.NonMintable)"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#n-01-use-the-iseth-return-value-from-wfcashbasegettoken-instead-of-checking-equality-with-ethaddress",
        "vulnerability": "Use the `isETH` return value from `wfCashBase.getToken` instead of checking equality with `ETH_ADDRESS`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-07-residual-allowance-might-allow-tokens-in-settoken-to-be-stolen",
        "vulnerability": "Residual Allowance Might Allow Tokens In SetToken To Be Stolen"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-05-transferfcash-does-not-work-as-expected",
        "vulnerability": "transferfCash does not work as expected"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-06-users-might-not-be-able-to-purchase-or-redeem-settoken",
        "vulnerability": "Users Might Not Be Able To Purchase Or Redeem SetToken"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-03-events-not-emitted-for-important-state-changes",
        "vulnerability": "Events not emitted for important state changes"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-01-zero-address-checks-are-missing",
        "vulnerability": "Zero-address checks are missing"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-08-contracts-are-using-outdated-openzeppelin-version-342-solc-07",
        "vulnerability": "Contracts are using outdated OpenZeppelin version `^3.4.2-solc-0.7`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-10-user-can-alter-amount-returned-by-redeem-function-due-to-control-transfer",
        "vulnerability": "User can alter amount returned by redeem function due to control transfer"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-09-wfcasherc4626-contract-does-not-conform-to-eip4626",
        "vulnerability": "`wfCashERC4626` contract does not conform to `EIP4626`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-01-fcash-of-the-wrong-maturity-and-asset-can-be-sent-to-wrapper-address-before-wrapper-is-deployed",
        "vulnerability": "fCash of the wrong maturity and asset can be sent to wrapper address before wrapper is deployed"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#h-01-rounding-issues-in-certain-functions",
        "vulnerability": "Rounding Issues In Certain Functions"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-05-misleading-notionaltrademodulemintfcashposition-function-comments",
        "vulnerability": "Misleading `NotionalTradeModule._mintFCashPosition` function comments"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-09-silent-overflow-of-fcashamount",
        "vulnerability": "Silent overflow of `_fCashAmount`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#l-07-matured-fcash-can-still-be-wrapped-via-erc1155-transfer",
        "vulnerability": "Matured fCash can still be wrapped via `ERC1155` `transfer`"
    },
    {
        "name": "2022-06-notional-coop",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-notional-coop#m-04-iswrappedfcash-check-is-a-gas-bomb",
        "vulnerability": "`IsWrappedFcash` check is a gas bomb"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#l-02-owner-can-frontrun-buy-function",
        "vulnerability": "Owner can frontrun `buy` function"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#m-02-salerecipient-can-rug-buyers",
        "vulnerability": "`saleRecipient` can rug buyers"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#n-01-open-todo",
        "vulnerability": "Open TODO"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#g-01-use-!=-0-rather-than->-0-for-unsigned-integers-in-require-statements",
        "vulnerability": "Use `!= 0` rather than `> 0` for unsigned integers in `require()` statements"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#g-02---use-local-variables-to-cache-results-of-storage-reads",
        "vulnerability": "- Use local variables to cache results of storage reads"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#m-01-the-owner-and-proxy-admin-can-make-users-lose-funds-\u201crug-vectors\u201d",
        "vulnerability": "The Owner and Proxy Admin can make users lose funds (\u201crug vectors\u201d)"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#g-04---use-unchecked-for-operations-not-expected-to-overflow",
        "vulnerability": "- Use `unchecked` for operations not expected to overflow"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#l-01-ambiguous-usage-of--operator",
        "vulnerability": "Ambiguous usage of `^` operator"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#m-03-owner-can-steal-input-tokens",
        "vulnerability": "Owner can steal input tokens"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#n-02-inconsistent-naming-conventions",
        "vulnerability": "Inconsistent naming conventions"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#g-03---pre-calculate-repeatedly-checked-offsets",
        "vulnerability": "- Pre-calculate repeatedly-checked offsets"
    },
    {
        "name": "2022-02-badger-citadel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-badger-citadel#g-05---pull-tokens-rather-than-pushing-them",
        "vulnerability": "- Pull tokens rather than pushing them"
    },
    {
        "name": "2021-09-bvecvx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-bvecvx#m-02-cvxlockersetboost-wrong-validation",
        "vulnerability": "`CvxLocker.setBoost` wrong validation"
    },
    {
        "name": "2021-09-bvecvx",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-bvecvx#m-01-settv3transferfrom-block-lock-can-be-circumvented",
        "vulnerability": "`SettV3.transferFrom` block lock can be circumvented"
    },
    {
        "name": "2021-09-bvecvx",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-bvecvx#h-01-vecvxstrategymanualrebalance-has-wrong-logic",
        "vulnerability": "`veCVXStrategy.manualRebalance` has wrong logic"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-09-auth-only-works-well-with-external-functions",
        "vulnerability": "auth only works well with external functions"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-07-possible-dos-attack-when-creating-joins-in-wand",
        "vulnerability": "Possible DoS attack when creating `Joins` in `Wand`"
    },
    {
        "name": "2021-05-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-yield#h-03-yieldmathsol--log2->=-or->-",
        "vulnerability": "YieldMath.sol / Log2: >= or > ?"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-06-violation-of-implicit-constraints-in-batched-operations-may-break-protocol-assumptions",
        "vulnerability": "Violation of implicit constraints in batched operations may break protocol assumptions"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-08-users-can-avoid-paying-borrowing-interest-after-the-fytoken-matures",
        "vulnerability": "Users can avoid paying borrowing interest after the fyToken matures"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-02-uniswap-oracle-uses-wrong-prices",
        "vulnerability": "Uniswap Oracle uses wrong prices"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-01-potential-griefing-with-dos-by-front-running-vault-creation-with-same-vaultid",
        "vulnerability": "Potential griefing with DoS by front-running vault creation with same `vaultID`"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-03-witch-cant-give-back-vault-after-2x-grab",
        "vulnerability": "Witch can\u2019t give back vault after 2x grab"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-05-uninitialized-or-incorrectly-set-auctioninterval-may-lead-to-liquidation-engine-livelock",
        "vulnerability": "Uninitialized or Incorrectly set `auctionInterval` may lead to liquidation engine livelock"
    },
    {
        "name": "2021-05-yield",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-05-yield#m-04-user-can-redeem-more-tokens-by-artificially-increasing-the-chi-accrual",
        "vulnerability": "User can redeem more tokens by artificially increasing the chi accrual"
    },
    {
        "name": "2021-05-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-yield#h-02-auth-collision-possible",
        "vulnerability": "auth collision possible"
    },
    {
        "name": "2021-05-yield",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-05-yield#h-01-duplication-of-balance",
        "vulnerability": "Duplication of Balance"
    },
    {
        "name": "2021-12-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-maple#m-02-unsafe-implementation-of-fundloan-allows-attacker-to-steal-collateral-from-an-unfunded-loan",
        "vulnerability": "Unsafe implementation of `fundLoan()` allows attacker to steal collateral from an unfunded loan"
    },
    {
        "name": "2021-12-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-maple#m-01-anyone-can-call-closeloan-to-close-the-loan",
        "vulnerability": "Anyone can call `closeLoan()` to close the loan"
    },
    {
        "name": "2021-12-maple",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-maple#h-01-makepayment-lack-of-access-control-allows-malicious-lender-to-retrieve-a-large-portion-of-the-funds-earlier--making-the-borrower-suffer-fund-loss",
        "vulnerability": "`makePayment()` Lack of access control allows malicious `lender` to retrieve a large portion of the funds earlier, making the borrower suffer fund loss"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-17-nftvaultshowposition-l659-should-be-unchecked-due-to-l649",
        "vulnerability": "`NFTVault.showPosition()`: L659 should be unchecked due to L649"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-05-rewards-will-be-locked-if-user-transfer-directly-to-pool-without-using-deposit-function",
        "vulnerability": "Rewards will be locked if user transfer directly to pool without using deposit function"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-05-yvaultlpfarming-no-guarantee-jpeg-currentbalance->-previousbalance",
        "vulnerability": "`yVaultLPFarming`: No guarantee JPEG currentBalance > previousBalance"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-16-nftvaultsol-struct-positionpreview-can-be-tightly-packed-to-save-1-storage-slot",
        "vulnerability": "`NFTVault.sol`: `struct PositionPreview` can be tightly packed to save 1 storage slot"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-20-nftvaultborrow-totaldebtportion-should-get-cached",
        "vulnerability": "`NFTVault.borrow()`: `totalDebtPortion` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-07-controller-strategy-migration-will-fail",
        "vulnerability": "Controller: Strategy migration will fail"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-27-strategypusdconvexharvest-l362-should-be-unchecked-due-to-l359-l360-and-how-performancefee-is-set-l183",
        "vulnerability": "`StrategyPUSDConvex.harvest()`: L362 should be unchecked due to L359-L360 and how performanceFee is set L183"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-15-nftvaultcalculateadditionalinterest-totaldebtamount-should-get-cached",
        "vulnerability": "`NFTVault._calculateAdditionalInterest()`: `totalDebtAmount` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-19-nftvaultshowposition-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it-positions[nftindex]",
        "vulnerability": "`NFTVault.showPosition()`: Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it (`positions[_nftIndex]`)"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-36-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-04-setdebtinterestapr-should-accrue-debt-first",
        "vulnerability": "`setDebtInterestApr` should accrue debt first"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-24-strategypusdconvexbalanceofjpeg-jpeg-should-get-cached",
        "vulnerability": "`StrategyPUSDConvex.balanceOfJPEG()`: `jpeg` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-39-use-calldata-instead-of-memory",
        "vulnerability": "Use `calldata` instead of `memory`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-03-lpfarmingwithdraw-l248-should-be-unchecked-due-to-l243",
        "vulnerability": "`LPFarming.withdraw()`: L248 should be unchecked due to L243"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-22-nftvaultrepay-totaldebtportion-and-totaldebtamount-should-get-cached",
        "vulnerability": "`NFTVault.repay()`: `totalDebtPortion` and `totalDebtAmount` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-04-lpfarmingwithdrawreward-poolinfo[pid]accrewardpershare-should-get-cached",
        "vulnerability": "`LPFarming._withdrawReward()`: `poolInfo[_pid].accRewardPerShare` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-25-strategypusdconvexbalanceofjpeg-use-a-return-statement-instead-of-break",
        "vulnerability": "`StrategyPUSDConvex.balanceOfJPEG()`: use a `return` statement instead of `break`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-29-yvaultwithdraw-l178-should-be-unchecked-due-to-l177",
        "vulnerability": "`yVault.withdraw()`: L178 should be unchecked due to L177"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-02-nfthelper-contract-allows-owner-to-burn-nfts",
        "vulnerability": "NFTHelper Contract Allows Owner to Burn NFTs"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-02-existing-users-locked-jpeg-could-be-overwritten-by-new-user--causing-permanent-loss-of-jpeg-funds",
        "vulnerability": "Existing user\u2019s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-06-oracle-data-feed-is-insufficiently-validated",
        "vulnerability": "Oracle data feed is insufficiently validated."
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-10-fungibleassetvaultfordaodeposit-collateralasset-should-get-cached",
        "vulnerability": "`FungibleAssetVaultForDAO.deposit()`: `collateralAsset` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-11-fungibleassetvaultfordaorepay-l184-should-be-unchecked-due-to-l182",
        "vulnerability": "`FungibleAssetVaultForDAO.repay)`: L184 should be unchecked due to L182"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-30-yvaultwithdraw-token-should-get-cached",
        "vulnerability": "`yVault.withdraw()`: `token` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-31-yvaultwithdrawjpeg-farm-should-get-cached",
        "vulnerability": "`yVault.withdrawJPEG()`: `farm` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-23-controllersetstrategy-boolean-comparison-l87",
        "vulnerability": "`Controller.setStrategy()`: boolean comparison L87"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-40-consider-making-some-constants-as-non-public-to-save-gas",
        "vulnerability": "Consider making some constants as non-public to save gas"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-03-update-initializer-modifier-to-prevent-reentrancy-during-initialization",
        "vulnerability": "Update initializer modifier to prevent reentrancy during initialization"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-01-yvault-first-depositor-can-break-minting-of-shares",
        "vulnerability": "yVault: First depositor can break minting of shares"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-07-wrong-calculation-for-yvault-price-per-share-if-decimals-!=-18",
        "vulnerability": "Wrong calculation for `yVault` price per share if decimals != 18"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-21-nftvaultrepay-l781-should-be-unchecked-due-to-ternary-operator",
        "vulnerability": "`NFTVault.repay()`: L781 should be unchecked due to ternary operator"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-08-fungibleassetvaultfordaocollateralpriceusd-oracle-should-get-cached",
        "vulnerability": "`FungibleAssetVaultForDAO._collateralPriceUsd()`: `oracle` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-26-strategypusdconvexwithdraw-l281-should-be-unchecked-due-to-l279",
        "vulnerability": "`StrategyPUSDConvex.withdraw()`: L281 should be unchecked due to L279"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-06-yvaultlpfarmingwithdrawreward-accrewardpershare-should-get-cached",
        "vulnerability": "`yVaultLPFarming._withdrawReward()`: `accRewardPerShare` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-32-upgrade-pragma-to-at-least-084",
        "vulnerability": "Upgrade pragma to at least 0.8.4"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-06-setting-new-controller-can-break-yvaultlpfarming",
        "vulnerability": "Setting new controller can break `YVaultLPFarming`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-35->=-is-cheaper-than->",
        "vulnerability": "`>=` is cheaper than `>`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-01-nftescrowexecutetransfer-cheap-contract-deployment-through-clones",
        "vulnerability": "`NFTEscrow._executeTransfer()`: Cheap Contract Deployment Through Clones"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-09-fungibleassetvaultfordaocollateralpriceusd-return-statement-should-be-unchecked",
        "vulnerability": "`FungibleAssetVaultForDAO._collateralPriceUsd()`: return statement should be unchecked"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-41-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-01-when-lptoken-is-jpeg--reward-calculation-is-incorrect",
        "vulnerability": "When _lpToken is jpeg, reward calculation is incorrect"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-08-strategypusdconvexbalanceofjpeg-uses-incorrect-function-signature-while-calling-extrarewardearned--causing-the-function-to-unexpectedly-revert-everytime",
        "vulnerability": "`StrategyPUSDConvex.balanceOfJPEG` uses incorrect function signature while calling `extraReward.earned`, causing the function to unexpectedly revert everytime"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-05-yvaultlpfarmingwithdraw-l124-should-be-unchecked-due-to-l119",
        "vulnerability": "`yVaultLPFarming.withdraw()`: L124 should be unchecked due to L119"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-38-increments-can-be-unchecked",
        "vulnerability": "Increments can be unchecked"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-33-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-14-nftvaultnormalizeaggregatoranswer-return-statement-should-be-unchecked",
        "vulnerability": "`NFTVault._normalizeAggregatorAnswer()`: return statement should be unchecked"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-42-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-13-fungibleassetvaultfordaowithdraw-collateralamount-should-get-cached",
        "vulnerability": "`FungibleAssetVaultForDAO.withdraw()`: `collateralAmount` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-28-yvaultearn-token-and-controller-should-get-cached",
        "vulnerability": "`yVault.earn()`: `token` and `controller` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-03-reward-will-be-locked-in-the-farm-if-no-lp-join-the-pool-at-epochstartblock",
        "vulnerability": "reward will be locked in the farm if no LP join the pool at epoch.startBlock"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-10-chainlink-pricer-is-using-a-deprecated-api",
        "vulnerability": "Chainlink pricer is using a deprecated API"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-02-lpfarmingnewepoch-l128-and-l133-should-be-unchecked-due-to-parent-ifelse-condition",
        "vulnerability": "`LPFarming.newEpoch()`: L128 and L133 should be unchecked due to parent if/else condition"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-07-jpeglockunlock-use-storage-instead-of-copying-struct-in-memory-l69",
        "vulnerability": "`JPEGLock.unlock()`: use `storage` instead of copying struct in memory L69"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-43-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-11-division-before-multiplication-may-result-in-no-interest-being-accrued",
        "vulnerability": "Division before Multiplication May Result In No Interest Being Accrued"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-18-nftvaultshowposition-positions[nftindex]liquidatedat-should-get-cached",
        "vulnerability": "`NFTVault.showPosition()`: `positions[_nftIndex].liquidatedAt` should get cached"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-04-reentrancy-issue-in-yvaultdeposit",
        "vulnerability": "Reentrancy issue in `yVault.deposit`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-34->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "`> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-09-the-nocontract-modifier-does-not-work-as-expected",
        "vulnerability": "The noContract modifier does not work as expected."
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-12-fungibleassetvaultfordaowithdraw-l196-should-be-unchecked-due-to-l194",
        "vulnerability": "`FungibleAssetVaultForDAO.withdraw()`: L196 should be unchecked due to L194"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-jpegd#g-37-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-jpegd#h-09-bad-debts-should-not-continue-to-accrue-interest",
        "vulnerability": "Bad debts should not continue to accrue interest"
    },
    {
        "name": "2022-04-jpegd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-jpegd#m-08-swapuniswapv2-may-use-an-improper-path-which-can-cause-a-loss-of-the-majority-of-the-rewardtokens",
        "vulnerability": "`_swapUniswapV2` may use an improper `path` which can cause a loss of the majority of the rewardTokens"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-10-hardcode-the-address-causes-no-future-updates",
        "vulnerability": "Hardcode the address causes no future updates"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-03-malicious-users-can-drain-the-assets-of-auto-compound-vault",
        "vulnerability": "Malicious Users Can Drain The Assets Of Auto Compound Vault"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-02-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing",
        "vulnerability": "Not using the named return variables anywhere in the function is confusing"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-19-lack-of-event-emission-after-critical-initialize-functions",
        "vulnerability": "Lack of event emission after critical `initialize()` functions"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-06-assets-may-be-lost-when-calling-unprotected-autopxglpcompound-function",
        "vulnerability": "Assets may be lost when calling unprotected `AutoPxGlp::compound` function"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-01-pirexerc4626s-implmentation-is-not-fully-up-to-eip-4626s-specification",
        "vulnerability": "PirexERC4626\u2019s implmentation is not fully up to EIP-4626\u2019s specification"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-09-broken-logic-in-configuregmxstate-of-pirexgmx-contract-because-it-doesnt-properly-call-safeapprove-for-stakedgmx-address",
        "vulnerability": "broken logic in `configureGmxState()` of PirexGmx contract because it doesn\u2019t properly call `safeApprove()` for stakedGmx address"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-20-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-05-add-parameter-to-event-emit",
        "vulnerability": "Add parameter to Event-Emit"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-08-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-11-mark-visibility-of-initialize\u2026-functions-as-external",
        "vulnerability": "Mark visibility of initialize(\u2026) functions as `external`"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-05-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-04-autopxgmxmaxwithdraw-and-autopxglpmaxwithdraw-functions-calculate-asset-amount-that-is-too-big-and-cannot-be-withdrawn",
        "vulnerability": "AutoPxGmx.maxWithdraw and AutoPxGlp.maxWithdraw functions calculate asset amount that is too big and cannot be withdrawn"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-04-use-ownable2stepupgradeable-instead-of-ownableupgradeable-contract",
        "vulnerability": "Use `Ownable2StepUpgradeable` instead of `OwnableUpgradeable` contract"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-04-users-accrued-rewards-will-be-lost",
        "vulnerability": "User\u2019s Accrued Rewards Will Be Lost"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-09-first-value-check-of-argument-of-type-enum-in-setfee-function-is-missing",
        "vulnerability": "First value check of argument of type enum in setFee function is missing"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-12-reward-tokens-mismanagement-can-cause-users-losing-rewards",
        "vulnerability": "Reward tokens mismanagement can cause users losing rewards"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-01-insufficient-coverage",
        "vulnerability": "Insufficient coverage"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-09-constant-values-such-as-a-call-to-keccak256--should-used-to-immutable-rather-than-constant",
        "vulnerability": "Constant values such as a call to `keccak256()`, should used to immutable rather than constant"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-08-implement-some-type-of-version-counter-that-will-be-incremented-automatically-for-contract-upgrades",
        "vulnerability": "Implement some type of version counter that will be incremented automatically for contract upgrades"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-02-preventing-any-user-from-calling-the-functions-withdraw--redeem--or-depositgmx-in-contract-autopxgmx",
        "vulnerability": "Preventing any user from calling the functions `withdraw`, `redeem`, or `depositGmx` in contract `AutoPxGmx`"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-05-swaprouter-in-autopxgmxsol-is-hardcoded-and-not-compatible-on-avalanche",
        "vulnerability": "`SWAP_ROUTER` in `AutoPxGmx.sol` is hardcoded and not compatible on Avalanche"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-01-pirexgmxinitiatemigration-can-be-blocked",
        "vulnerability": "`PirexGmx.initiateMigration` can be blocked"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-02-initialize-function-can-be-called-by-anybody",
        "vulnerability": "`initialize()` function can be called by anybody"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-11-lack-of-input-validation",
        "vulnerability": "Lack of Input Validation"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-06-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-07-depositglp-event-arguments-names-are-confusing",
        "vulnerability": "`DepositGlp` Event arguments names are confusing"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-04-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-11-pirexgmxmigratereward-may-cause-users-to-lose-reward",
        "vulnerability": "PirexGmx#migrateReward() may cause users to lose Reward."
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-01-the-redeem-related-functions-are-likely-to-be-blocked",
        "vulnerability": "The `redeem` related functions are likely to be blocked"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-08-tokens-with-fees-will-break-the-depositglp-logic",
        "vulnerability": "Tokens with fees will break the `depositGlp()` logic"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-18-no-need-assert-check-in-computeassetamounts",
        "vulnerability": "No need `assert` check in `_computeAssetAmounts()`"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-12-no-same-value-input-control",
        "vulnerability": "No same value input control"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-02-users-receive-less-rewards-due-to-miscalculations",
        "vulnerability": "Users Receive Less Rewards Due To Miscalculations"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-07-use-require-instead-of-assert",
        "vulnerability": "Use `require` instead of `assert`"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-03-same-constant-redefined-elsewhere",
        "vulnerability": "Same Constant redefined elsewhere"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#l-03-solmates-safetransferlib-doesnt-check-whether-the-erc20-contract-exists",
        "vulnerability": "Solmate\u2019s SafeTransferLib doesn\u2019t check whether the ERC20 contract exists"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-07-deposit-feature-of-the-vault-will-break-if-update-to-a-new-platform",
        "vulnerability": "Deposit Feature Of The Vault Will Break If Update To A New Platform"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-13-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include `return parameters` in _NatSpec comments_"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-14-0-address-check-for-asset",
        "vulnerability": "`0 address` check for `asset`"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-06-fee-loss-in-autopxgmx-and-autopxglp-and-reward-loss-in-autopxglp-by-calling-pirexrewardsclaimpxgmxpxgpl--autopx*-directly-which-transfers-rewards-to-autopx*-pool-without-compound-logic-get-executed-and-fee-calculation-logic-and-pxgmx-wouldnt-be-executed-for-those-rewards",
        "vulnerability": "fee loss in AutoPxGmx and AutoPxGlp and reward loss in AutoPxGlp by calling `PirexRewards.claim(pxGmx/pxGpl, AutoPx*)` directly which transfers rewards to AutoPx* pool without compound logic get executed and fee calculation logic and pxGmx wouldn\u2019t be executed for those rewards"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-06-natspec-is-missing",
        "vulnerability": "NatSpec is missing"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-17-missing-upgrade-path-for-pirexrewards-implementation",
        "vulnerability": "Missing Upgrade Path for `PirexRewards` Implementation"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-10-calculaterewards-in-pirexgmx-dont-handle-reward-calculation-properly--and-it-would-revert-when-totalsupply-is-zero-which-will-cause-claimrewards-to-revert-if-one-of-4-rewardtrackers-totalsupply-was-zero",
        "vulnerability": "`_calculateRewards()` in PirexGmx don\u2019t handle reward calculation properly, and it would revert when `totalSupply()` is zero which will cause `claimRewards()` to revert if one of 4 rewardTracker\u2019s totalSupply was zero"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-15-use-a-single-file-for-all-system-wide-constants",
        "vulnerability": "Use a single file for all system-wide constants"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#m-03-anyone-can-call-autopxgmxcompound-and-perform-sandwich-attacks-with-control-parameters",
        "vulnerability": "Anyone can call AutoPxGmx.compound and perform sandwich attacks with control parameters"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#n-10-for-functions--follow-solidity-standard-naming-conventions",
        "vulnerability": "For functions, follow Solidity standard naming conventions"
    },
    {
        "name": "2022-11-redactedcartel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-redactedcartel#h-05-underlying-assets-stealing-in-autopxgmx-and-autopxglp-via-share-price-manipulation",
        "vulnerability": "Underlying assets stealing in `AutoPxGmx` and `AutoPxGlp` via share price manipulation"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-09-typeuint<n>max-should-be-used-instead-of-uint<n>-1",
        "vulnerability": "`type(uint<n>).max` should be used instead of `uint<n>(-1)`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-02-no-use-of-two-phase-ownership-transfers",
        "vulnerability": "No use of two-phase ownership transfers"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-19-strategist-can-transfer-user-funds-to-themselves",
        "vulnerability": "Strategist can transfer user funds to themselves"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-19-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-07-no-storage-gap-for-upgradeable-contracts",
        "vulnerability": "No Storage Gap for Upgradeable Contracts"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-16-strategists-can-take-more-rewards-than-they-should-using-the-function-strategistbootyclaim",
        "vulnerability": "Strategists can take more rewards than they should using the function strategistBootyClaim()."
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-10-bathtokensoldeposit-attacker-can-mint-more-shares-with-re-entrancy-from-hookable-tokens",
        "vulnerability": "`BathToken.sol#_deposit()` attacker can mint more shares with re-entrancy from hookable tokens"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-25-multiple-unsafe-arithmetic-operations",
        "vulnerability": "Multiple Unsafe Arithmetic Operations"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-18-centralized-risks-allows-rogue-pool-behavior-in-bathtoken",
        "vulnerability": "Centralized risks allows rogue pool behavior in BathToken."
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-10-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-11-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-21-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing",
        "vulnerability": "Not using the named return variables anywhere in the function is confusing"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-14-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-23-possible-token-reentrancy-in-release-of-bathbuddysol",
        "vulnerability": "Possible token reentrancy in release() of BathBuddy.sol"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-21-user-will-loose-funds",
        "vulnerability": "User will loose funds"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-24-rubiconmarketsolisclosed-always-returns-false--making-the-market-can-not-be-stopped-as-designed",
        "vulnerability": "`RubiconMarket.sol#isClosed()` always returns false, making the market can not be stopped as designed"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-31-lack-of-access-control-for-offeruint--erc20--uint--erc20-and-insertuint--unint",
        "vulnerability": "Lack of Access Control for offer(uint, ERC20, uint, ERC20) and insert(uint, unint)"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-04-front-runable-initializer",
        "vulnerability": "Front-runable initializer"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-05-vulnerable-to-cross-chain-replay-attacks-due-to-static-domainseparator",
        "vulnerability": "Vulnerable to cross-chain replay attacks due to static DOMAIN_SEPARATOR"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-03-migrations-should-do-some-validation",
        "vulnerability": "Migrations should do some validation"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-09-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-06-cannot-deposit-to-bathtoken-if-token-is-deflationary-token-bathhousesol",
        "vulnerability": "Cannot deposit to BathToken if token is Deflationary Token (BathHouse.sol)"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-01-consider-addings-checks-for-signature-malleability",
        "vulnerability": "Consider addings checks for signature malleability"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-06-rubiconrouter-swap-does-not-pass-whole-amount-to-rubiconmarket",
        "vulnerability": "RubiconRouter _swap does not pass whole amount to RubiconMarket"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-15-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-10**18",
        "vulnerability": "Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-27-rubiconmarketfeeto-set-to-zero-address-can-dos-buy-function",
        "vulnerability": "`RubiconMarket.feeTo` set to zero-address can DoS `buy` function"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-05-bathtoken-lps-unable-to-receive-bonus-token-due-to-lack-of-wallet-setter-method",
        "vulnerability": "BathToken LPs Unable To Receive Bonus Token Due To Lack Of Wallet Setter Method"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-17-missing-checks-allow-strategists-to-steal-all-fund-via-tailoff",
        "vulnerability": "Missing checks allow strategists to steal all fund via `tailOff`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-08-ineffective-reserveratio-enforcement",
        "vulnerability": "Ineffective ReserveRatio Enforcement"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-22-deprecated-variables-may-cause-dos",
        "vulnerability": "Deprecated variables may cause DoS"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-02-rubiconrouter-offers-created-through-offerforeth-cannot-be-cancelled",
        "vulnerability": "RubiconRouter: Offers created through offerForETH cannot be cancelled"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-32-changing-matchingenabled-in-rubiconmarket-breaks-protocol",
        "vulnerability": "Changing `matchingEnabled` in `RubiconMarket` breaks protocol"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-06-contracts-should-extend-interfaces-they-extend",
        "vulnerability": "Contracts should extend interfaces they extend"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-05-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-17-variable-names-that-consist-of-all-capital-letters-should-be-reserved-for-constimmutable-variables",
        "vulnerability": "Variable names that consist of all capital letters should be reserved for `const`/`immutable` variables"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-12-admin-rug-vectors",
        "vulnerability": "Admin rug vectors"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-08-2**<n>---1-should-be-re-written-as-typeuint<n>max",
        "vulnerability": "`2**<n> - 1` should be re-written as `type(uint<n>).max`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-11-previewwithdraw-calculates-shares-wrongly",
        "vulnerability": "previewWithdraw calculates shares wrongly"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-08-misleading-function-name",
        "vulnerability": "Misleading function name"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-30-bathbuddy-contracts-vestedamount-function-includes-fees-leading-to-users-being-disproportionately-rewarded-after-whale-withdraws",
        "vulnerability": "`BathBuddy` contract\u2019s `vestedAmount` function includes fees leading to users being disproportionately rewarded after whale withdraws"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-20-strategists-cant-be-removed",
        "vulnerability": "Strategists can\u2019t be removed"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-13-early-funds-withdrawers-can-get-bonus-in-multiples-of-vested-bonus-tokens-eg-2-times--3-times--etc",
        "vulnerability": "Early funds withdrawers can get bonus in multiples of vested bonus tokens (e.g. 2-times, 3-times, etc.)"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-01-use-call-instead-of-transfer-when-transferring-eth-in-rubiconrouter",
        "vulnerability": "Use `call()` instead of `transfer()` when transferring ETH in RubiconRouter"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-03-use-safetransfersafetransferfrom-instead-of-transfertransferfrom",
        "vulnerability": "Use `safeTransfer()`/`safeTransferFrom()` instead of `transfer()`/`transferFrom()`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-09-bathbuddy-locks-up-ether-it-receives",
        "vulnerability": "BathBuddy locks up Ether it receives"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-04-first-depositor-can-break-minting-of-shares",
        "vulnerability": "First depositor can break minting of shares"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-07-rubiconrouterswapentirebalance-doesnt-handle-the-slippage-check-properly",
        "vulnerability": "RubiconRouter.swapEntireBalance() doesn\u2019t handle the slippage check properly"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-15-outstanding-amount-of-a-pool-reduced-although-tokens-are-not-repaid",
        "vulnerability": "Outstanding Amount Of A Pool Reduced Although Tokens Are Not Repaid"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-10-wrong-domainseparator",
        "vulnerability": "Wrong DOMAIN_SEPARATOR"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-02-return-unused-fees",
        "vulnerability": "Return unused fees"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-16-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-07-non-assembly-method-available",
        "vulnerability": "Non-assembly method available"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-34-rubiconmarket-buys-can-not-be-disabled-if-offer-matching-is-disabled",
        "vulnerability": "`RubiconMarket` buys can not be disabled if offer matching is disabled"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-28-rubiconrouter-maxsellallamount-does-not-transfer-users-fund-into-its-address--causing-calls-to-always-revert",
        "vulnerability": "RubiconRouter maxSellAllAmount does not transfer user\u2019s fund into its address, causing calls to always revert"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-04-rubiconrouter-excess-ether-did-not-return-to-the-user",
        "vulnerability": "RubiconRouter: Excess ether did not return to the user"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-09-bathpairsolrebalancepair-can-be-front-run-to-steal-the-pending-rebalancing-amount",
        "vulnerability": "`BathPair.sol#rebalancePair()` can be front run to steal the pending rebalancing amount"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-14-no-cap-on-fees-can-result-in-a-dos-in-bathtokenwithdraw",
        "vulnerability": "No cap on fees can result in a DOS in BathToken.withdraw()"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-01-rubiconrouter-offers-created-through-offerwitheth-can-be-cancelled-by-anyone",
        "vulnerability": "RubiconRouter: Offers created through offerWithETH() can be cancelled by anyone"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-13-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-18-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-03-return-values-of-approve-not-checked",
        "vulnerability": "Return values of `approve()` not checked"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-29-maxsellallamount-and-maxbuyallamount-functions-can-be-unintentionally-paused-always-revert",
        "vulnerability": "maxSellAllAmount and maxBuyAllAmount functions can be unintentionally paused (always revert)."
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-04-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-08-usdt-is-not-supported-because-of-approval-mechanism",
        "vulnerability": "USDT is not supported because of approval mechanism"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-20-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-26-malicious-pools-can-be-deployed-through-bathhouse",
        "vulnerability": "Malicious pools can be deployed through `BathHouse`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-01-unusedempty-receivefallback-function",
        "vulnerability": "Unused/empty `receive()`/`fallback()` function"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-rubicon#l-07-natspec-incorrect",
        "vulnerability": "NatSpec incorrect"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-05-rubicon#h-03-attacker-could-steal-almost-all-the-bonus-tokens-in-bathbuddy-vesting-wallet",
        "vulnerability": "Attacker could steal almost all the bonus tokens in BathBuddy Vesting Wallet"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-33-rubiconmarketaddress-in-bathpair-cant-be-updated",
        "vulnerability": "RubiconMarketAddress in BathPair can\u2019t be updated"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-02-withdrawforeth-could-be-used-to-drain-the-weth-in-rubiconroutersol",
        "vulnerability": "`withdrawForETH` could be used to drain the WETH in `RubiconRouter.sol`"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-12-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-rubicon#m-05-inconsistent-order-book-accounting-when-working-with-transfer-on-fee-or-deflationary-tokens",
        "vulnerability": "Inconsistent Order Book Accounting When Working With Transfer-On-Fee or Deflationary Tokens"
    },
    {
        "name": "2022-05-rubicon",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-rubicon#n-06-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-05-fee-double-counting-for-underwater-positions",
        "vulnerability": "Fee double counting for underwater positions"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-06-timelock-and-events-for-governor-functions",
        "vulnerability": "Timelock and events for governor functions"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-01-isunderwater-returns-opposite-boolean-for-short-positions",
        "vulnerability": "isUnderwater returns opposite boolean for short positions"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-03-cant-enablecollateral-after-a-disablecollateral",
        "vulnerability": "Can\u2019t enableCollateral after a disableCollateral"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-09-improper-upper-bound-definition-on-the-fee",
        "vulnerability": "Improper Upper Bound Definition on the Fee"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-07-cached-version-of-ovl-may-be-outdated",
        "vulnerability": "Cached version of ovl may be outdated"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-04-totalsupply-not-updated-in-transfermint-and-transferburn",
        "vulnerability": "_totalSupply not updated in _transferMint() and _transferBurn()"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-02-pow-is-missing-check-on-input-parameters-with-0-value",
        "vulnerability": "pow() is missing check on input parameters with 0 value"
    },
    {
        "name": "2021-11-overlay",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-overlay#h-01-overlayv1uniswapv3market-computes-wrong-market-liquidity",
        "vulnerability": "`OverlayV1UniswapV3Market` computes wrong market liquidity"
    },
    {
        "name": "2021-11-overlay",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-overlay#m-08-overlaytokenburn-function-could-burn-tokens-of-any-user",
        "vulnerability": "OverlayToken.burn function could burn tokens of any user"
    },
    {
        "name": "2021-11-overlay",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-overlay#h-02-oz-erc1155supply-vulnerability",
        "vulnerability": "OZ ERC1155Supply vulnerability"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-01-createpromotion-lack-of-input-validation-for-epochduration-can-potentially-freeze-promotion-creators-funds",
        "vulnerability": "`createPromotion()` Lack of input validation for `_epochDuration` can potentially freeze promotion creator\u2019s funds"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-03-continue-claiming-reqrds-after-numberofepochs-are-over",
        "vulnerability": "Continue claiming reqrds after numberOfEpochs are over"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#m-02-getrewardsamount-doesnt-check-epochs-havent-been-claimed",
        "vulnerability": "getRewardsAmount doesn\u2019t check epochs haven\u2019t been claimed"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#m-05-missing-check-when-transferring-tokens-out-for-a-given-promotion",
        "vulnerability": "Missing Check When Transferring Tokens Out For A Given Promotion"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-06-rewards-can-be-claimed-multiple-times",
        "vulnerability": "Rewards can be claimed multiple times"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#m-03-dust-token-balances-cannot-be-claimed-by-an-admin-account",
        "vulnerability": "Dust Token Balances Cannot Be Claimed By An `admin` Account"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#m-01-cancelpromotion-unable-to-cancel-unstarted-promotions",
        "vulnerability": "`cancelPromotion()` Unable to cancel unstarted promotions"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-07-contract-does-not-work-with-fee-on-transfer-tokens",
        "vulnerability": "Contract does not work with fee-on transfer tokens"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-04-cancelpromotion-is-too-rigorous",
        "vulnerability": "cancelPromotion is too rigorous"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#m-04-unsafe-uint64-casting-may-overflow",
        "vulnerability": "Unsafe uint64 casting may overflow"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-05-malicious-tickets-can-lead-to-the-loss-of-all-tokens",
        "vulnerability": "Malicious tickets can lead to the loss of all tokens"
    },
    {
        "name": "2021-12-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-pooltogether#h-02-backdated-starttimestamp-can-lead-to-loss-of-funds",
        "vulnerability": "Backdated _startTimestamp can lead to loss of funds"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-06-user-can-free-from-liquidation-fee-if-its-escrow-balance-is-less-than-the-calculated-liquidation-fee",
        "vulnerability": "User can free from liquidation fee if its escrow balance is less than the calculated liquidation fee"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-04-erc777-reentrancy-when-withdrawing-can-be-used-to-withdraw-all-collateral",
        "vulnerability": "ERC777 reentrancy when withdrawing can be used to withdraw all collateral"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-18-protocols-usability-becomes-very-limited-when-access-to-chainlink-oracle-data-feed-is-blocked",
        "vulnerability": "Protocol\u2019s usability becomes very limited when access to Chainlink oracle data feed is blocked"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-13-marketforcereplenish-can-be-dosed",
        "vulnerability": "`Market::forceReplenish` can be DoSed"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-02-users-can-avoid-paying-fees-if-they-manage-to-update-their-accrued-fees-periodically",
        "vulnerability": "Users can avoid paying fees if they manage to update their accrued fees periodically"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-17-chainlink-oracle-data-feed-is-not-sufficiently-validated-and-can-return-stale-price",
        "vulnerability": "Chainlink oracle data feed is not sufficiently validated and can return stale `price`"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-10-liquidation-should-make-a-borrower-healthier",
        "vulnerability": "Liquidation should make a borrower _healthier_"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-12-users-could-get-some-dola-even-if-they-are-on-liquidation-position",
        "vulnerability": "Users could get some `DOLA` even if they are on liquidation position"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-11-viewprice-doesnt-always-report-dampened-price",
        "vulnerability": "`viewPrice` doesn\u2019t always report dampened price"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-14-two-day-low-oracle-used-in-marketliquidate-makes-the-system-highly-at-risk-in-an-oracle-attack",
        "vulnerability": "Two day low oracle used in `Market.liquidate()` makes the system highly at risk in an oracle attack"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-03-user-can-borrow-dola-indefinitely-without-settling-dbr-deficit-by-keeping-their-debt-close-to-the-allowed-maximum",
        "vulnerability": "User can borrow DOLA indefinitely without settling DBR deficit by keeping their debt close to the allowed maximum"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-07-oracles-two-day-feature-can-be-gamed",
        "vulnerability": "Oracle\u2019s two-day feature can be gamed"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-15-oracle-assumes-token-and-feed-decimals-will-be-limited-to-18-decimals",
        "vulnerability": "Oracle assumes token and feed decimals will be limited to 18 decimals"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-01-unhandled-return-values-of-transfer-and-transferfrom",
        "vulnerability": "Unhandled return values of `transfer` and `transferFrom`"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-08-protocol-withdrawals-of-collateral-can-be-unexpectedly-locked-if-governance-sets-the-collateralfactorbps-to-0",
        "vulnerability": "Protocol withdrawals of collateral can be unexpectedly locked if governance sets the `collateralFactorBps` to 0"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-09-avoidable-misconfiguration-could-lead-to-invescrow-contract-not-minting-xinv-tokens",
        "vulnerability": "Avoidable misconfiguration could lead to `INVEscrow` contract not minting `xINV` tokens"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-16-calling-repay-function-sends-less-dola-to-market-contract-when-forcereplenish-function-is-not-called-while-it-could-be-called",
        "vulnerability": "Calling `repay` function sends less DOLA to `Market` contract when `forceReplenish` function is not called while it could be called"
    },
    {
        "name": "2022-10-inverse",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-inverse#m-05-repay-function-can-be-dosed",
        "vulnerability": "`repay` function can be DOSed"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-15-malicious-pausing-the-contract",
        "vulnerability": "Malicious pausing the contract"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#h-04-erc721votes-token-owners-can-double-voting-power-through-self-delegation",
        "vulnerability": "`ERC721Votes`: Token owners can double voting power through self delegation"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-17-a-proposal-can-pass-with-0-votes-in-favor-at-early-dao-stages",
        "vulnerability": "A proposal can pass with 0 votes in favor at early DAO stages"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-07-nft-owner-can-block-token-burning-and-transfer-by-delegating-to-zero-address",
        "vulnerability": "NFT owner can block token burning and transfer by delegating to zero address"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-14-creating-a-new-governance-proposal-can-be-prevented-by-anyone",
        "vulnerability": "Creating a new governance proposal can be prevented by anyone"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-18-precision-is-not-enough-for-proposalthreshold-and-quorum-collections-with-at-least-20000-nfts-in-total-supply-may-have-some-trouble",
        "vulnerability": "Precision is not enough for `proposalThreshold` and quorum. Collections with at least 20000 NFTs in total supply may have some trouble."
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-08-delegation-should-not-be-allowed-to-address0",
        "vulnerability": "Delegation should not be allowed to address(0)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-26-minting-is-not-possible-when-a-property-has-no-items",
        "vulnerability": "Minting is not possible when a property has no items"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-22-owners-receive-more-percentage-of-total-nft-if-some-nfts-were-burnedbecause-were-not-sold",
        "vulnerability": "Owners receive more percentage of total nft if some nfts were burned(because were not sold)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-02-highest-bid-in-first-auction-can-get-irretrievably-stuck-in-the-protocol",
        "vulnerability": "Highest bid in first auction can get irretrievably stuck in the protocol"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-09-index-out-of-bounds-error-when-properties-length-is-more-than-attributes-length-breaks-minting",
        "vulnerability": "Index out of bounds error when properties length is more than attributes length breaks minting"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-04-using-bools-for-storage-incurs-overhead-5-instances",
        "vulnerability": "Using bools for storage incurs overhead (5 instances)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-04-founders-can-receive-less-tokens-that-expected",
        "vulnerability": "Founders can receive less tokens that expected"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-24-token-founder-percentages-not-always-respected",
        "vulnerability": "Token: Founder percentages not always respected"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-25-metadatarenderer-contract-raise-error-when-minting",
        "vulnerability": "MetadataRenderer contract raise error when minting"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-21-truncation-in-casting-can-lead-to-a-founder-receiving-all-the-base-tokens",
        "vulnerability": "Truncation in casting can lead to a founder receiving all the base tokens"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-27-tokens-without-properties-can-be-minted-and-cannot-be-rendered",
        "vulnerability": "Tokens without properties can be minted and cannot be rendered"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#h-01-user-can-get-unlimited-votes",
        "vulnerability": "User can get unlimited votes"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-03-tokenmint-infinite-loop-if-the-founders-shares-sum-up-to-100",
        "vulnerability": "`Token:mint`: infinite loop if the founders\u2019 shares sum up to 100"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#h-02-erc721votess-delegation-disables-nft-transfers-and-burning",
        "vulnerability": "ERC721Votes\u2019s delegation disables NFT transfers and burning"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-16-auction-parameters-can-be-changed-during-ongoing-auction",
        "vulnerability": "Auction parameters can be changed during ongoing auction"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-01-quorum-votes-have-no-effect-for-determining-whether-proposal-is-defeated-or-succeeded-when-token-supply-is-low",
        "vulnerability": "Quorum votes have no effect for determining whether proposal is defeated or succeeded when token supply is low"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-06-proposals-can-be-bricked-and-auctions-stalled-by-bad-settings",
        "vulnerability": "Proposals can be bricked and Auctions stalled by bad settings"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-12-try-catch-block-at-auctioncreateauction-will-only-catch-string-errors",
        "vulnerability": "Try-catch block at `Auction._createAuction()` will only catch string errors"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-23-changing-treasury-owner-through-transferownership-can-break-governersol-and-auctionsol",
        "vulnerability": "Changing treasury owner through `transferOwnership()` can break `Governer.sol` and `Auction.sol`"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-19-governor-\\--quorum-could-be-less-than-intended",
        "vulnerability": "`Governor` \\- Quorum could be less than intended"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-06-use-named-returns-where-appropriate-3-instances",
        "vulnerability": "Use named returns where appropriate (3 instances)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-28-state-function-does-not-require-majority-of-votes-for-supporting-and-passing-a-proposal",
        "vulnerability": "State function does not require majority of votes for supporting and passing a proposal"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-05-a-proposal-can-be-cancelled-by-anyone-if-the-proposal-has-exactly-proposalthreshold-votes",
        "vulnerability": "A proposal can be cancelled by anyone if the proposal has exactly proposalThreshold votes"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#h-03-multiple-vote-checkpoints-per-block-will-lead-to-incorrect-vote-accounting",
        "vulnerability": "Multiple vote checkpoints per block will lead to incorrect vote accounting"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-13-compromised-or-malicious-vetoer-can-veto-any-proposals-with-unrestricted-power",
        "vulnerability": "Compromised or malicious vetoer can veto any proposals with unrestricted power"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-20-attackers-can-increase-voting-power-by-incentivizing",
        "vulnerability": "Attackers can increase voting power by incentivizing"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-03-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-5-instances",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage (5 instances)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-11-loss-of-veto-power-can-lead-to-51%-attack",
        "vulnerability": "Loss of Veto Power can Lead to 51% Attack"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#h-05-transferfrom-can-be-used-to-indefinitely-increase-voting-power",
        "vulnerability": "`_transferFrom()` can be used to indefinitely increase voting power"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-05-storage-variable-is-used-when-local-exists-2-instances",
        "vulnerability": "Storage variable is used when local exists (2 instances)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-02-state-variables-can-be-packed-into-fewer-storage-slots-1-instances",
        "vulnerability": "State variables can be packed into fewer storage slots (1 instances)"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#m-10-the-quorum-votes-calculations-dont-take-into-account-burned-tokens",
        "vulnerability": "The quorum votes calculations don\u2019t take into account burned tokens"
    },
    {
        "name": "2022-09-nouns-builder",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-09-nouns-builder#g-01-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory--same-for-array-and-mapping-5-instances",
        "vulnerability": "`storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` (5 instances)"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-03-nestedfactory-ensure-zero-msgvalue-if-transferring-from-user-and-inputtoken-is-not-eth",
        "vulnerability": "NestedFactory: Ensure zero msg.value if transferring from user and `inputToken` is not ETH"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-08-passing-multiple-eth-deposits-in-orders-array-will-use-the-same-msgvalue-many-times",
        "vulnerability": "Passing multiple ETH deposits in orders array will use the same `msg.value` many times"
    },
    {
        "name": "2021-11-nested",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-nested#h-01-copy-your-own-portfolio-to-keep-earning-royalties",
        "vulnerability": "Copy your own portfolio to keep earning royalties"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-05-isresolvercached-will-always-return-false-after-removing-operator",
        "vulnerability": "isResolverCached() will always return false after removing operator"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-06-nestedfactorysolsubmitinorders-wrong-implementation-cause-users-to-be-overcharged",
        "vulnerability": "`NestedFactory.sol#_submitInOrders()` Wrong implementation cause users to be overcharged"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-04-feesplitter-unbounded-number-of-shareholders-can-cause-dos",
        "vulnerability": "FeeSplitter: Unbounded number of shareholders can cause DOS"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-02-feesplitter-no-sanity-check-to-prevent-shareholder-from-being-added-twice",
        "vulnerability": "FeeSplitter: No sanity check to prevent shareholder from being added twice."
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-07-ensure-on-chain-that-cache-is-synced",
        "vulnerability": "Ensure on-chain that cache is synced"
    },
    {
        "name": "2021-11-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-nested#m-01-setreserve-can-be-front-run",
        "vulnerability": "`setReserve()` can be front-run"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-04-deposit-resetting-user-rewards-can-be-used-to-grief-them-and-make-them-loose-rewards-via-depositformember",
        "vulnerability": "_deposit resetting user rewards can be used to grief them and make them loose rewards via `depositForMember`"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-04-members-lose-sparta-tokens-in-removeliquiditysingle",
        "vulnerability": "Members lose SPARTA tokens in `removeLiquiditySingle()`"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-06-synthvault-rewards-can-be-gamed",
        "vulnerability": "`SynthVault` rewards can be gamed"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-01-daosol-insufficient-validation-for-proposal-creation",
        "vulnerability": "`Dao.sol`: Insufficient validation for proposal creation"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-02-poolsol-&-synthsol-failing-max-value-allowance",
        "vulnerability": "`Pool.sol` & `Synth.sol`: Failing Max Value Allowance"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-06-pool-approveandcall-sets-unnecessary-approval",
        "vulnerability": "Pool: `approveAndCall` sets unnecessary approval"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-03-result-of-transfer--transferfrom-not-checked",
        "vulnerability": "Result of `transfer` / `transferFrom` not checked"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-08-dividend-reward-can-be-gamed",
        "vulnerability": "Dividend reward can be gamed"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-12-wrong-calcliquidityholdings-that-leads-to-dead-fund-in-the-pool",
        "vulnerability": "wrong `calcLiquidityHoldings` that leads to dead fund in the Pool"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-13-flash-loan-manipulation-on-getpoolshareweight-of-utils",
        "vulnerability": "Flash loan manipulation on `getPoolShareWeight` of `Utils`"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-05-synth-realise-is-vulnerable-to-flash-loan-attacks",
        "vulnerability": "Synth `realise` is vulnerable to flash loan attacks"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-05-pools-can-be-created-without-initial-liquidity",
        "vulnerability": "Pools can be created without initial liquidity"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-09-arbitrary-synth-mintburn-from-pool",
        "vulnerability": "arbitrary synth mint/burn from pool"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-10-grantfunds-will-revert-after-a-dao-upgrade",
        "vulnerability": "`grantFunds` will revert after a DAO upgrade."
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-13-vulnerable-pool-initial-rate",
        "vulnerability": "Vulnerable Pool initial rate."
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-12-bondvaultsol-possibly-unwithdrawable-bondedlp-funds-in-claimformember-\\+-claimrate-never-zeros-after-full-withdrawals",
        "vulnerability": "`BondVault.sol`: Possibly unwithdrawable bondedLP funds in `claimForMember()` \\+ `claimRate` never zeros after full withdrawals"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-11-block-usage-of-addcuratedpool",
        "vulnerability": "Block usage of `addCuratedPool`"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-14-bondvault-base-incentive-can-be-gamed",
        "vulnerability": "BondVault `BASE` incentive can be gamed"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-11-misuse-of-amm-model-on-minting-synth-resubmit-to-add-more-detail",
        "vulnerability": "Misuse of AMM model on minting `Synth` (resubmit to add more detail)"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-10-hijack-token-pool-by-burning-liquidity-token",
        "vulnerability": "Hijack token pool by burning liquidity token"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-07-synth-approveandcall-sets-unnecessary-approval",
        "vulnerability": "Synth: `approveAndCall` sets unnecessary approval"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-01-synthvault-withdraw-forfeits-rewards",
        "vulnerability": "`SynthVault` withdraw forfeits rewards"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-08-synthvault-deposit-lockup-bypass",
        "vulnerability": "`SynthVault` deposit lockup bypass"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-09-in-the-beginning-its-relatively-easy-to-gain-majority-share",
        "vulnerability": "In the beginning its relatively easy to gain majority share"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-02-missleading-onlydao-modifiers",
        "vulnerability": "Missleading `onlyDAO` modifiers"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-15-deployer-can-drain-daovault-funds-+-manipulate-proposal-results",
        "vulnerability": "`DEPLOYER` can drain DAOVault funds + manipulate proposal results"
    },
    {
        "name": "2021-07-spartan",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-spartan#m-03-improper-access-control-of-claimallformember-allows-anyone-to-reduce-the-weight-of-a-member",
        "vulnerability": "Improper access control of `claimAllForMember` allows anyone to reduce the weight of a member"
    },
    {
        "name": "2021-07-spartan",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-spartan#h-07-missing-slippage-checks",
        "vulnerability": "Missing slippage checks"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-01-very-critical-onlyowner-privileges-can-cause-damage-of-the-project-in-a-possible-privatekey-exploit",
        "vulnerability": "Very critical `onlyOwner` privileges can cause damage of the project in a possible privateKey exploit"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-06-no-check-if-onerc721received-is-implemented",
        "vulnerability": "No Check if OnErc721Received is implemented"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-04-0-address-check-for-asset",
        "vulnerability": "`0 address` check for `asset`"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-01-for-modern-and-more-readable-code;-update-import-usages",
        "vulnerability": "For modern and more readable code; update import usages"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-06-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-03-no-same-value-input-control",
        "vulnerability": "No same value input control"
    },
    {
        "name": "2022-11-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-canto#m-03-there-is-no-re-register-or-re-assign-function",
        "vulnerability": "There is no re-register or re-assign function"
    },
    {
        "name": "2022-11-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-canto#g-01-remove-registered-flag",
        "vulnerability": "Remove `registered` flag."
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-08-using-vulnerable-version-of-openzeppelin",
        "vulnerability": "Using Vulnerable Version of OpenZeppelin"
    },
    {
        "name": "2022-11-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-canto#g-03-leave-1-wei-in-balance-after-withdraw",
        "vulnerability": "Leave 1 wei in `balance` after `withdraw`"
    },
    {
        "name": "2022-11-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-canto#h-02-a-registered-contract-wont-earn-fees-if-recipient-is-a-fresh-address",
        "vulnerability": "A registered contract won\u2019t earn fees if `_recipient` is a fresh address"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-05-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "`Function writing` that does not comply with the `Solidity Style Guide`"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-03-owner-can-renounce-ownership",
        "vulnerability": "Owner can renounce Ownership"
    },
    {
        "name": "2022-11-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-11-canto#h-01-user-can-redirect-fees-by-using-a-proxy-contract",
        "vulnerability": "User can redirect fees by using a proxy contract"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-05-missing-re-entrancy-guard-to-withdraw-function",
        "vulnerability": "Missing Re-Entrancy Guard to `withdraw` function"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-02-natspec-is-missing",
        "vulnerability": "NatSpec is missing"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-04-critical-address-changes-should-use-two-step-procedure",
        "vulnerability": "Critical Address Changes Should Use Two-step Procedure"
    },
    {
        "name": "2022-11-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-11-canto#l-02-use-safetransferownership-instead-of-transferownership-function",
        "vulnerability": "Use `safeTransferOwnership` instead of `transferOwnership` function"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-07-take-advantage-of-custom-errors-return-value-property",
        "vulnerability": "Take advantage of Custom Error\u2019s return value property"
    },
    {
        "name": "2022-11-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-canto#m-02-posttxprocessing-can-revert-user-transactions-not-interacting-with-turnstile",
        "vulnerability": "`PostTxProcessing` can revert user transactions not interacting with Turnstile"
    },
    {
        "name": "2022-11-canto",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-11-canto#g-02-use-erc721-instead-of-erc721enumerable",
        "vulnerability": "Use `ERC721` instead of `ERC721Enumerable`"
    },
    {
        "name": "2022-11-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-11-canto#n-09-import-only-the-parts-you-use",
        "vulnerability": "Import only the parts you use"
    },
    {
        "name": "2022-11-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-11-canto#m-01-evmhooks-ignores-some-important-errors",
        "vulnerability": "evm_hooks ignores some important errors"
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-06-non-cudos-erc20-funds-sent-through-sendtocosmos-will-be-lost",
        "vulnerability": "Non-Cudos Erc20 funds sent through `sendToCosmos()` will be lost."
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-05-calls-inside-loops-that-may-address-dos",
        "vulnerability": "Calls inside loops that may address DoS"
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-02-admin-drains-all-erc-based-user-funds-using-withdrawerc20",
        "vulnerability": "Admin drains all ERC based user funds using `withdrawERC20()`"
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-03-the-gravitysol-should-have-pauseunpause-functionality",
        "vulnerability": "The `Gravity.sol` should have pause/unpause functionality"
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-04-protocol-doesnt-handle-fee-on-transfer-tokens",
        "vulnerability": "Protocol doesn\u2019t handle fee on transfer tokens"
    },
    {
        "name": "2022-05-cudos",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-cudos#m-01-missing-check-in-the-updatevalset-function",
        "vulnerability": "Missing check in the `updateValset` function"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#h-04-swappableyieldsource-missing-same-deposit-token-check-in-transferfunds",
        "vulnerability": "`SwappableYieldSource`: Missing same deposit token check in `transferFunds()`"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#h-01-onlyownerorassetmanager-can-swap-yield-source-in-swappableyieldsource-at-any-time--immediately-rugging-all-funds-from-old-yield-source",
        "vulnerability": "`onlyOwnerOrAssetManager` can swap Yield Source in `SwappableYieldSource` at any time, immediately rugging all funds from old yield source"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#h-02-redeemtoken-can-fail-for-certain-tokens",
        "vulnerability": "`redeemToken` can fail for certain tokens"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#h-03-setyieldsource-leads-to-temporary-wrong-results",
        "vulnerability": "`setYieldSource` leads to temporary wrong results"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#m-02-use-of-safeapprove-will-always-cause-approvemax-to-revert",
        "vulnerability": "Use of `safeApprove` will always cause `approveMax` to revert"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#m-01-single-step-process-for-critical-ownership-transferrenounce-is-risky",
        "vulnerability": "Single-step process for critical ownership transfer/renounce is risky"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#m-04-old-yield-source-still-has-infinite-approval",
        "vulnerability": "Old yield source still has infinite approval"
    },
    {
        "name": "2021-07-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-pooltogether#m-03-inconsistent-balance-when-supplying-transfer-on-fee-or-deflationary-tokens",
        "vulnerability": "Inconsistent balance when supplying transfer-on-fee or deflationary tokens"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-08-transaction-can-fail-due-to-batchid-collision",
        "vulnerability": "Transaction can fail due to batchId collision"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-17-use-underscores-for-number-literals",
        "vulnerability": "Use underscores for number literals"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-18-use-nested-if-and--avoid-multiple-check-combinations",
        "vulnerability": "Use nested if and, avoid multiple check combinations"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-24-x-+=-y-x--=-y-costs-more-gas-than-x-=-x-+-y-x-=-x---y-for-state-variables",
        "vulnerability": "`x += y (x -= y)` costs more gas than `x = x + y (x = x - y)` for state variables"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-27-upgrade-soliditys-optimizer",
        "vulnerability": "Upgrade Solidity\u2019s optimizer"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-05-paymaster-eth-can-be-drained-with-malicious-sender",
        "vulnerability": "Paymaster ETH can be drained with malicious sender"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-05-front-running-attacks-by-the-onlyowner",
        "vulnerability": "Front running attacks by the `onlyOwner`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-06-doesnt-follow-erc1271-standard",
        "vulnerability": "Doesn\u2019t Follow ERC1271 Standard"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-04-depositinfo-and-paymasterdata-structs-can-be-rearranged",
        "vulnerability": "`DepositInfo` and `PaymasterData` structs can be rearranged"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-08-unnecessary-computation",
        "vulnerability": "Unnecessary computation"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-01-prevent-division-by-0",
        "vulnerability": "Prevent division by 0"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-03-structs-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "Structs can be packed into fewer storage slots"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-12-use-of-bytesconcat-instead-of-abiencodepacked",
        "vulnerability": "Use of bytes.concat() instead of abi.encodePacked()"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-22-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for--and-while-loops",
        "vulnerability": "++i/i++ should be unchecked{++i}/unchecked{i++} when it is not possible for them to overflow, as is the case when used in for- and while-loops"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-13-use-constants-instead-of-typeuintxmax",
        "vulnerability": "Use constants instead of type(uintx).max"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-21-use-assembly-to-write-address-storage-values",
        "vulnerability": "Use `assembly` to write _address storage values_"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-09-long-lines-are-not-suitable-for-the-\u2018solidity-style-guide",
        "vulnerability": "Long lines are not suitable for the \u2018Solidity Style Guide\u2019"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-03-attacker-can-gain-control-of-counterfactual-wallet",
        "vulnerability": "Attacker can gain control of counterfactual wallet"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-01-griefing-attacks-on-handleops-and-multisend-logic",
        "vulnerability": "Griefing attacks on `handleOps` and `multiSend` logic"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-23-sort-solidity-operations-using-short-circuit-mode",
        "vulnerability": "Sort Solidity operations using short-circuit mode"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-05-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "`Function writing` that does not comply with the `Solidity Style Guide`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-15-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of uints/ints smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-14-add-unchecked-{}-for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement",
        "vulnerability": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require` or `if` statement"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-19-use-require-instead-of-assert",
        "vulnerability": "Use `require` instead of `assert`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-06-a-single-point-of-failure",
        "vulnerability": "A single point of failure"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-16-mark-visibility-of-init\u2026-functions-as-external",
        "vulnerability": "Mark visibility of init(\u2026) functions as `external`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-10-need-fuzzing-test",
        "vulnerability": "Need Fuzzing test"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-02-non-compliance-with-eip-4337",
        "vulnerability": "Non-compliance with EIP-4337"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-21-tokens-accidentally-sent-to-the-contract-cannot-be-recovered",
        "vulnerability": "Tokens accidentally sent to the contract cannot be recovered"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-01-destruction-of-the-smartaccount-implementation",
        "vulnerability": "Destruction of the `SmartAccount` implementation"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-16-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-01-with-assembly--call-bool-success-transfer-can-be-done-gas-optimized",
        "vulnerability": "With assembly, `.call (bool success)` transfer can be done gas-optimized"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-20-implement-some-type-of-version-counter-that-will-be-incremented-automatically-for-contract-upgrades",
        "vulnerability": "Implement some type of version counter that will be incremented automatically for contract upgrades"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-02-use-of-eip-4337--which-is-likely-to-change--not-recommended-for-general-use-or-application",
        "vulnerability": "Use of EIP 4337, which is likely to change, not recommended for general use or application"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-17-use-double-require-instead-of-using-&&",
        "vulnerability": "Use `double require` instead of using `&&`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-20-setting-the-constructor-to-payable",
        "vulnerability": "Setting the _constructor_ to `payable`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-07-instead-of-emit-executionsuccess-and-emit-executionfailure-a-single-emit-execution-is-gas-efficient",
        "vulnerability": "Instead of `emit ExecutionSuccess` and `emit ExecutionFailure` a single `emit Execution` is gas efficient"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-11-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using `storage` instead of `memory` for `structs/arrays` saves gas"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-26-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-22-use-a-single-file-for-all-system-wide-constants",
        "vulnerability": "Use a single file for all system-wide constants"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-05-duplicated-requireif-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated require()/if() checks should be refactored to a modifier or function"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-09-missing-event-for-critical-parameters-init-and-change",
        "vulnerability": "Missing Event for critical parameters init and change"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-06-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-02-remove-the-initializer-modifier",
        "vulnerability": "Remove the `initializer` modifier"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-01-insufficient-coverage",
        "vulnerability": "Insufficient coverage"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-10-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-10-use-2stepsetowner-instead-of-setowner",
        "vulnerability": "Use `2StepSetOwner` instead of `setOwner`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-04-arbitrary-transactions-possible-due-to-insufficient-signature-validation",
        "vulnerability": "Arbitrary transactions possible due to insufficient signature validation"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-04-methods-used-by-entrypoint-has-onlyowner-modifier",
        "vulnerability": "Methods used by EntryPoint has `onlyOwner` modifier"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-03-initial-value-check-is-missing-in-set-functions",
        "vulnerability": "Initial value check is missing in Set Functions"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-14-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-07-replay-attack-eip712-signed-transaction",
        "vulnerability": "Replay attack (EIP712 signed transaction)"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-07-for-modern-and-more-readable-code;-update-import-usages",
        "vulnerability": "For modern and more readable code; update import usages"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-04-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-23-assembly-codes-specific-\u2013-should-have-comments",
        "vulnerability": "Assembly Codes Specific \u2013 Should Have Comments"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-02-unused-function-parameter-and-local-variable",
        "vulnerability": "Unused function parameter and local variable"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-06-feerefundtokengaspricefactor-is-not-included-in-signed-transaction-data-allowing-the-submitter-to-steal-funds",
        "vulnerability": "`FeeRefund.tokenGasPriceFactor` is not included in signed transaction data allowing the submitter to steal funds"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-04-gas-griefingtheft-is-possible-on-unsafe-external-call",
        "vulnerability": "Gas griefing/theft is possible on unsafe external call"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-19-functions-guaranteed-to-revert-when-callled-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert_ when callled by normal users can be marked `payable`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-13-for-functions--follow-solidity-standard-naming-conventions-internal-function-style-rule",
        "vulnerability": "For functions, follow Solidity standard naming conventions (internal function style rule)"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-25-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-07-smartaccountsol-is-intended-to-be-upgradable-but-inherits-from-contracts-that-contain-storage-and-no-gaps",
        "vulnerability": "`SmartAccount.sol` is intended to be upgradable but inherits from contracts that contain storage and no gaps"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-03-cross-chain-signature-replay-attack",
        "vulnerability": "Cross-Chain Signature Replay Attack"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-08-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include return parameters in NatSpec comments"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-07-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-03-consider-using-openzeppelins-safecast-library-to-prevent-unexpected-overflows-when-casting-from-uint256",
        "vulnerability": "Consider using OpenZeppelin\u2019s SafeCast library to prevent unexpected overflows when casting from uint256"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2023-01-biconomy#m-05-dos-of-user-operations-and-loss-of-user-transaction-fee-due-to-insufficient-gas-value-submission-by-malicious-bundler",
        "vulnerability": "DoS of user operations and loss of user transaction fee due to insufficient gas value submission by malicious bundler"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-12-the-minimum-transaction-value-of-21-000-gas-may-change-in-the-future",
        "vulnerability": "The minimum transaction value of 21,000 gas may change in the future"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-08-no-storage-gap-for-basesmartaccount-and-modulemanager",
        "vulnerability": "No Storage Gap for `BaseSmartAccount` and `ModuleManager`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-06-can-be-removed-to-assert-in-function-setimplementation",
        "vulnerability": "Can be removed to `assert` in function `_setImplementation`"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2023-01-biconomy#h-02-theft-of-funds-under-relaying-the-transaction",
        "vulnerability": "Theft of funds under relaying the transaction"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-18-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "`Empty blocks` should be _removed_ or _Emit_ something"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2023-01-biconomy#l-11-init-function-can-be-called-by-anybody",
        "vulnerability": "init() function can be called by anybody"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-09-using-delete-instead-of-setting-info-struct-to-0-saves-gas",
        "vulnerability": "Using delete instead of setting `info` struct to 0 saves gas"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-15-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "G",
        "link": "https://code4rena.com/reports/2023-01-biconomy#g-12-use-shift-rightleft-instead-of-divisionmultiplication",
        "vulnerability": "Use Shift Right/Left instead of Division/Multiplication"
    },
    {
        "name": "2023-01-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2023-01-biconomy#n-11-test-environment-comments-and-codes-should-not-be-in-the-main-version",
        "vulnerability": "Test environment comments and codes should not be in the main version"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-06-possibility-of-minting-rjoe-tokens-before-ownership-is-changed-to-rocketjoestaking",
        "vulnerability": "possibility of minting rJOE tokens before ownership is changed to RocketJoeStaking"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#h-01-users-can-lose-value-in-emergency-state",
        "vulnerability": "Users can lose value in emergency state"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-02-owner-of-launchevent-token-has-the-ability-to-dos-attack-the-event",
        "vulnerability": "Owner of LaunchEvent token has the ability to DOS attack the event"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-09-createpair-expects-zero-slippage",
        "vulnerability": "`createPair()` expects zero slippage"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-10-use-safetransfersafetransferfrom-consistently-instead-of-transfertransferfrom",
        "vulnerability": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-14-incompatibility-with-rebasingdeflationaryinflationary-tokens",
        "vulnerability": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-08-lp-tokens-may-be-locked-in-contract-due-to-allowemergencywithdraw-in-stage-3",
        "vulnerability": "LP Tokens May Be Locked in Contract Due to `allowEmergencyWithdraw()` in Stage 3"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-01-improper-upper-bound-definition-on-the-fee",
        "vulnerability": "Improper Upper Bound Definition on the Fee"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-03-createrjlaunchevent-can-be-called-by-anyone-with-1-wei-of-token-and-stop-others-from-creating-rjlaunchevent-with-the-same-token-anymore",
        "vulnerability": "`createRJLaunchEvent()` can be called by anyone with 1 Wei of `_token` and stop others from creating RJLaunchEvent with the same token anymore"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-11-re-enterable-code-when-making-a-deposit-to-stake",
        "vulnerability": "Re-enterable Code When Making a Deposit to Stake"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-12-pair-creation-can-be-denied",
        "vulnerability": "Pair creation can be denied"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-13-erc20-return-values-not-checked",
        "vulnerability": "ERC20 return values not checked"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-15-lack-of-input-checks-withrawal-penalties-should-always-be-greater-than-0",
        "vulnerability": "Lack of input checks (withrawal penalties should always be greater than 0)"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-05-failed-transfer-with-low-level-call-could-be-overlooked",
        "vulnerability": "Failed transfer with low level call could be overlooked"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-07-withdrawavax-function-has-call-to-sender-without-reentrancy-protection",
        "vulnerability": "withdrawAVAX() function has call to sender without reentrancy protection"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#h-02-wrong-token-allocation-computation-for-token-decimals-!=-18-if-floor-price-not-reached",
        "vulnerability": "Wrong token allocation computation for token decimals != 18 if floor price not reached"
    },
    {
        "name": "2022-01-trader-joe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-trader-joe#m-04-uninitialized-rocketjoestakinglastrewardtimestamp-can-inflate-rjoe-supply",
        "vulnerability": "Uninitialized `RocketJoeStaking.lastRewardTimestamp` can inflate `rJoe` supply"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-10-putty-position-tokens-may-be-minted-to-non-erc721-receivers",
        "vulnerability": "Putty position tokens may be minted to non ERC721 receivers"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-13-fixed-by-requiring-the-minimal-order-duration-of-15-minutes-on-filling",
        "vulnerability": "Fixed by requiring the minimal order duration of 15 minutes on filling."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-06-[denial-of-service]-contract-owner-could-block-users-from-withdrawing-their-strike",
        "vulnerability": "[Denial-of-Service] Contract Owner Could Block Users From Withdrawing Their Strike"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-10-natspec-is-missing",
        "vulnerability": "NatSpec Is Missing"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-05-fixed-with-native-funds-amount-control-added-to-strike-transfer-logic-of-fillorder-zero-strike-and-zero-premium-corner-cases-are-yet-unhandled-as-described-below-in-mm-01-and-mm-02",
        "vulnerability": "Fixed with native funds amount control added to strike transfer logic of `fillOrder`. Zero strike and zero premium corner cases are yet unhandled as described below in M.M-01 and M.M-02."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-11-the-same-fix-as-in-[h-01]",
        "vulnerability": "The same fix as in [H-01]."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-15-zero-strike-call-options-will-avoid-paying-system-fee",
        "vulnerability": "Zero strike call options will avoid paying system fee"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-02-acceptcounteroffer-may-result-in-both-orders-being-filled",
        "vulnerability": "`acceptCounterOffer()` May Result In Both Orders Being Filled"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-05-fillorder-and-exercise-may-lock-ether-sent-to-the-contract--forever",
        "vulnerability": "`fillOrder()` and `exercise()` may lock Ether sent to the contract, forever"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-04-owner-can-renounce-ownership",
        "vulnerability": "Owner Can Renounce Ownership"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-08-unused-imports",
        "vulnerability": "Unused imports"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-07-acknowledged--similar-to-[m-01]--[m-02]",
        "vulnerability": "Acknowledged, similar to [M-01], [M-02]."
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-05-consider-two-phase-ownership-transfer",
        "vulnerability": "Consider two-phase ownership transfer"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-02-unbounded-loops-may-cause-exercises-and-withdraws-to-fail",
        "vulnerability": "Unbounded loops may cause `exercise()`s and `withdraw()`s to fail"
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-04-order-cannot-be-filled-due-to-unbounded-whitelist-within-an-order",
        "vulnerability": "Order Cannot Be Filled Due To Unbounded Whitelist Within An Order"
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-01-lack-of-reentrancy-guards-on-external-functions",
        "vulnerability": "Lack Of Reentrancy Guards On External Functions"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-01-fixed-by-changing-the-fee-base-to-be-orderpremium-[pr4]httpsgithubcomoutdotethputty-v2pull4--which-is-now-paid-uniformly-for-all-option-types-on-order-filling-utilizing-orderstrike-as-the-fee-base-was-the-root-cause-for-[m-04]--[m-06]--[m-11]--[m-15]--so-the-change-to-orderpremium-was-a-shared-mitigation-for-all-of-them",
        "vulnerability": "Fixed by changing the fee base to be `order.premium` [`PR#4`](https://github.com/outdoteth/putty-v2/pull/4), which is now paid uniformly for all option types on order filling. Utilizing `order.strike` as the fee base was the root cause for [M-04], [M-06], [M-11], [M-15], so the change to `order.premium` was a shared mitigation for all of them."
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-04-fixed-by-conditioning-calls-logic-on-orderstrike->-0-there-is-no-use-case-for-zero-strike-puts-and-so-this-case-remains-unconditioned--ie-still-always-require-successful-orderstrike-transfer",
        "vulnerability": "Fixed by conditioning call\u2019s logic on `order.strike > 0`. There is no use case for zero strike puts and so this case remains unconditioned, i.e. still always require successful `order.strike` transfer."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-13-order-duration-can-be-set-to-0-by-malicious-maker",
        "vulnerability": "Order duration can be set to 0 by Malicious maker"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-01-malicious-token-contracts-may-lead-to-locking-orders",
        "vulnerability": "Malicious Token Contracts May Lead To Locking Orders"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-03-create-a-short-call-order-with-non-empty-floor-makes-the-option-impossible-to-exercise-and-withdraw",
        "vulnerability": "Create a short call order with non empty floor makes the option impossible to exercise and withdraw"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-02-draft-openzeppelin-dependencies",
        "vulnerability": "Draft OpenZeppelin Dependencies"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-01-omissions-in-events",
        "vulnerability": "Omissions in events"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-15-the-same-fix-as-in-[h-01]",
        "vulnerability": "The same fix as in [H-01]."
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-07-inconsistent-use-of-named-return-variables",
        "vulnerability": "Inconsistent use of named return variables"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-10-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-12-options-with-a-small-strike-price-will-round-down-to-0-and-can-prevent-assets-to-be-withdrawn",
        "vulnerability": "Options with a small strike price will round down to 0 and can prevent assets to be withdrawn"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-06-code-can-be-refactored-to-be-more-readable",
        "vulnerability": "Code Can Be Refactored To Be More Readable"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-02-fixed-by-requiring-that-order-cant-be-in-the-filled-state-on-cancel-this-fully-adheres-to-the-original-logic--but-wasnt-controlled-for-before",
        "vulnerability": "Fixed by requiring that order can\u2019t be in the filled state on cancel. This fully adheres to the original logic, but wasn\u2019t controlled for before."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-06-the-same-fix-as-in-[h-01]-as-the-platform-fee-is-now-transferred-on-order-filling--any-owner-griefing-can-only-yield-a-denial-of-service-there-will-be-no-loss-of-funds-as-this-way-position-is-only-about-to-be-created-when-the-fee-is-transferred",
        "vulnerability": "The same fix as in [H-01]: as the platform fee is now transferred on order filling, any owner griefing can only yield a denial of service. There will be no loss of funds as this way position is only about to be created when the fee is transferred."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-12-fixed-along-with-[h-01]-in-[pr4]httpsgithubcomoutdotethputty-v2pull4",
        "vulnerability": "Fixed along with [H-01] in [`PR#4`](https://github.com/outdoteth/putty-v2/pull/4)."
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-07-no-check-if-onerc721received-is-implemented",
        "vulnerability": "No Check if onERC721Received Is Implemented"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-03-fixed-by-prohibiting-non-empty-orderfloortokens-for-short-calls-other-option-types-do-need-floortokens-long-calls-taker-provides-floor-tokens-on-filling--while-long-put-owner-brings-in-the-floor-tokens-on-exercise--taking-the-strike-short-put-owner-can-thereafter-retrieve-the-tokens-on-withdraw",
        "vulnerability": "Fixed by prohibiting non-empty `order.floorTokens` for short calls. Other option types do need `floorTokens`: long calls\u2019 taker provides floor tokens on filling, while long put owner brings in the floor tokens on exercise, taking the strike. Short put owner can thereafter retrieve the tokens on withdraw."
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-09-incorrect-functions-visibility",
        "vulnerability": "Incorrect functions visibility"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-01-fee-is-being-deducted-when-put-is-expired-and-not-when-it-is-exercised",
        "vulnerability": "Fee is being deducted when Put is expired and not when it is exercised."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-04-put-options-are-free-of-any-fees",
        "vulnerability": "Put options are free of any fees"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-09-the-contract-serves-as-a-flashloan-pool-without-fee",
        "vulnerability": "The contract serves as a flashloan pool without fee"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-16-use-of-solidity-version-0813-which-has-two-known-issues-applicable-to-puttyv2",
        "vulnerability": "Use of Solidity version 0.8.13 which has two known issues applicable to PuttyV2"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-16-fixed-by-bumping-the-solidity-version",
        "vulnerability": "Fixed by bumping the solidity version."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-08-overlap-between-erc721transferfrom-and-erc20transferfrom-allows-ordererc20assets-or-orderbaseasset-to-be-erc721-rather-than-erc20",
        "vulnerability": "Overlap Between `ERC721.transferFrom()` and `ERC20.transferFrom()` Allows `order.erc20Assets` or `order.baseAsset` To Be ERC721 Rather Than ERC20"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-08-acknowledged--requires-asset-whitelisting--now-addressed-on-uidb-level",
        "vulnerability": "Acknowledged, requires asset whitelisting, now addressed on UI/DB level."
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-03-insufficient-input-validation",
        "vulnerability": "Insufficient Input Validation"
    },
    {
        "name": "2022-06-putty",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-putty#n-03-insufficient-tests",
        "vulnerability": "Insufficient Tests"
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-06-order-can-be-cancelled-even-after-being-filled",
        "vulnerability": "Order Can Be Cancelled Even After Being Filled"
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-05-order-cannot-be-filled-due-to-unbounded-floortokens--erc20asset-or-erc721asset-within-an-order",
        "vulnerability": "Order Cannot Be Filled Due To Unbounded floorTokens, ERC20Asset Or ERC721Asset Within An Order"
    },
    {
        "name": "2022-06-putty",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-putty#h-04-zero-strike-call-options-can-be-systemically-used-to-steal-premium-from-the-taker",
        "vulnerability": "Zero strike call options can be systemically used to steal premium from the taker"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-07-an-attacker-can-create-a-short-put-option-order-on-an-nft-that-does-not-support-erc721-like-cryptopunk--and-the-user-can-fulfill-the-order--but-cannot-exercise-the-option",
        "vulnerability": "An attacker can create a short put option order on an NFT that does not support ERC721 (like cryptopunk), and the user can fulfill the order, but cannot exercise the option"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-04-the-same-fix-as-in-[h-01]",
        "vulnerability": "The same fix as in [H-01]."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-03-put-option-sellers-can-prevent-exercise-by-specifying-zero-amounts--or-non-existant-tokens",
        "vulnerability": "Put option sellers can prevent exercise by specifying zero amounts, or non-existant tokens"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-03-fixed-zero-amount-part-by-introducing-the-noop-for-zero-amount-transfers-in-both-transfererc20sin-and-transfererc20sout-erc20-transfer-functions-the-second-part-of-the-issue--fake-tokens--is-similar-to-[m-01]--[m-02]",
        "vulnerability": "Fixed zero amount part by introducing the noop for zero amount transfers in both `_transferERC20sIn` and `_transferERC20sOut` ERC20 transfer functions. The second part of the issue, fake tokens, is similar to [M-01], [M-02]."
    },
    {
        "name": "2022-06-putty",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-putty#l-02-discontinuity-in-exercise-period",
        "vulnerability": "Discontinuity in Exercise Period"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-14-fixed-by-the-introduction-of-setminimumvalidnonce-function-and-the-corresponding-control-on-order-filling-see-mm-04-below",
        "vulnerability": "Fixed by the introduction of `setMinimumValidNonce` function and the corresponding control on order filling. See M.M-04 below."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-09-acknowledged",
        "vulnerability": "Acknowledged."
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-14-order-cancellation-is-prone-to-frontrunning-and-is-dependent-on-a-centralized-database",
        "vulnerability": "Order cancellation is prone to frontrunning and is dependent on a centralized database"
    },
    {
        "name": "2022-06-putty",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-putty#m-11-fee-can-change-without-the-consent-of-users",
        "vulnerability": "`fee` can change without the consent of users"
    },
    {
        "name": "2022-03-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-prepo#m-03-getsharesforamount-returns-wrong-value-when-totalassets-==-0",
        "vulnerability": "`getSharesForAmount` returns wrong value when `totalAssets == 0`"
    },
    {
        "name": "2022-03-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-prepo#m-01-duplicate-tokennamesuffix-and-tokensymbolsuffix-will-incorrectly-update-current-market",
        "vulnerability": "Duplicate `_tokenNameSuffix` and `_tokenSymbolSuffix` will incorrectly update current Market"
    },
    {
        "name": "2022-03-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-prepo#l-01-transferownership-should-be-two-step-process",
        "vulnerability": "`transferOwnership` should be two step process"
    },
    {
        "name": "2022-03-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-prepo#l-04-use-safetransfersafetransferfrom-consistently-instead-of-transfertransferfrom",
        "vulnerability": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"
    },
    {
        "name": "2022-03-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-prepo#m-02-market-expiry-behaviour-differs-in-implementation-and-documentation",
        "vulnerability": "Market expiry behaviour differs in implementation and documentation"
    },
    {
        "name": "2022-03-prepo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-prepo#h-02-first-depositor-can-break-minting-of-shares",
        "vulnerability": "First depositor can break minting of shares"
    },
    {
        "name": "2022-03-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-prepo#n-02-consider-making-contracts-pausable",
        "vulnerability": "Consider making contracts Pausable"
    },
    {
        "name": "2022-03-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-prepo#l-03-front-runnable-initializers",
        "vulnerability": "Front-runnable Initializers"
    },
    {
        "name": "2022-03-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-prepo#n-01-missing-zero-address-check-in-constructors-and-the-setter-functions",
        "vulnerability": "Missing zero-address check in constructors and the setter functions"
    },
    {
        "name": "2022-03-prepo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-prepo#h-01-strategy-migration-may-leave-tokens-in-the-old-strategy-impacting-share-calculations",
        "vulnerability": "Strategy Migration May Leave Tokens in the Old Strategy Impacting Share Calculations"
    },
    {
        "name": "2022-03-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-prepo#m-05-wrong-formula-of-getsharesforamount-can-potentially-cause-fund-loss-when-being-used-to-calculate-the-shares-to-be-used-in-withdraw",
        "vulnerability": "Wrong formula of `getSharesForAmount()` can potentially cause fund loss when being used to calculate the `shares` to be used in `withdraw()`"
    },
    {
        "name": "2022-03-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-prepo#l-02-the-contract-should-approve0-first",
        "vulnerability": "The Contract Should Approve(0) first"
    },
    {
        "name": "2022-03-prepo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-prepo#l-05-use-safeerc20safeapprove-instead-of-approve",
        "vulnerability": "USE SAFEERC20.SAFEAPPROVE INSTEAD OF APPROVE"
    },
    {
        "name": "2022-03-prepo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-prepo#n-03-missing-vault-input-validation",
        "vulnerability": "Missing Vault Input Validation"
    },
    {
        "name": "2022-03-prepo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-prepo#h-03-withdrawal-delay-can-be-circumvented",
        "vulnerability": "Withdrawal delay can be circumvented"
    },
    {
        "name": "2022-03-prepo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-prepo#m-04-singlestrategycontroller-doesnt-verify-that-new-strategy-uses-the-same-base-token",
        "vulnerability": "SingleStrategyController doesn\u2019t verify that new strategy uses the same base token"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-01-wrong-lastbuybackprice",
        "vulnerability": "Wrong `lastBuyBackPrice`"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-04-out-of-gas",
        "vulnerability": "Out of gas."
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-08-wrong-comment-in-getfee",
        "vulnerability": "Wrong comment in `getFee`"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#h-02-yeti-token-rebase-checks-the-additional-token-amount-incorrectly",
        "vulnerability": "Yeti token rebase checks the additional token amount incorrectly"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#h-01-receivecollateral-can-be-called-by-anyone",
        "vulnerability": "receiveCollateral() can be called by anyone"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-03-unwhitelisted-token-can-cause-disaster",
        "vulnerability": "Unwhitelisted token can cause disaster"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-02-should-check-return-data-from-chainlink-aggregators",
        "vulnerability": "Should check return data from Chainlink aggregators"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-09-fee-not-decayed-if-past-decaytime",
        "vulnerability": "Fee not decayed if past `decayTime`"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-05-reentrancy-in-contractsborroweroperationssol",
        "vulnerability": "Reentrancy in contracts/BorrowerOperations.sol"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-06-collateral-parameters-can-be-overwritten",
        "vulnerability": "Collateral parameters can be overwritten"
    },
    {
        "name": "2021-12-yetifinance",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-yetifinance#m-07-cannot-use-most-piecewise-linear-functions-with-current-implementation",
        "vulnerability": "Cannot use most piecewise linear functions with current implementation"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-01-copying-a-full-array-from-storage-to-memory-isnt-optimal",
        "vulnerability": "Copying a full array from storage to memory isn\u2019t optimal"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-16-upgrade-pragma-to-at-least-084",
        "vulnerability": "Upgrade pragma to at least 0.8.4"
    },
    {
        "name": "2022-05-bunker",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-bunker#m-01-cnftsol-\\--revert-inside-safetransferfrom-will-break-composability-&-standard-behaviour",
        "vulnerability": "`CNft.sol` \\- revert inside `safeTransferFrom` will break composability & standard behaviour"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-07-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-15-no-need-to-explicitly-initialize-variables-with-default-values",
        "vulnerability": "No need to explicitly initialize variables with default values"
    },
    {
        "name": "2022-05-bunker",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-bunker#m-03-call-should-be-used-instead-of-transfer-on-an-address-payable",
        "vulnerability": "`call()` should be used instead of `transfer()` on an `address payable`"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-13-increments-can-be-unchecked",
        "vulnerability": "Increments can be unchecked"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-18-reduce-the-size-of-error-messages-long-revert-strings",
        "vulnerability": "Reduce the size of error messages (Long revert Strings)"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-19-use-custom-errors-instead-of-revert-strings-to-save-gas",
        "vulnerability": "Use Custom Errors instead of Revert Strings to save Gas"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-05-boolean-comparisons",
        "vulnerability": "Boolean comparisons"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-04-unchecking-arithmetics-operations-that-cant-underflowoverflow",
        "vulnerability": "Unchecking arithmetics operations that can\u2019t underflow/overflow"
    },
    {
        "name": "2022-05-bunker",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-bunker#m-04-comp-distributions-can-be-manipulated-and-duplicated-across-any-number-of-accounts",
        "vulnerability": "`COMP` Distributions Can Be Manipulated And Duplicated Across Any Number Of Accounts"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-11-++i-costs-less-gas-compared-to-i++-or-i-+=-1",
        "vulnerability": "`++i` costs less gas compared to `i++` or `i += 1`"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-03-caching-storage-values-in-memory",
        "vulnerability": "Caching storage values in memory"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-12-do-not-pre-declare-variable-with-default-values",
        "vulnerability": "Do not pre-declare variable with default values"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-17-priceoracleimplementationcetheraddress-variable-should-be-immutable",
        "vulnerability": "`PriceOracleImplementation.cEtherAddress` variable should be immutable"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-10-an-arrays-length-should-be-cached-to-save-gas-in-for-loops",
        "vulnerability": "An array\u2019s length should be cached to save gas in for-loops"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-02-help-the-optimizer-by-saving-a-storage-variables-reference-instead-of-repeatedly-fetching-it",
        "vulnerability": "Help the optimizer by saving a storage variable\u2019s reference instead of repeatedly fetching it"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-06->-0-is-less-efficient-than-!=-0-for-unsigned-integers-with-proof",
        "vulnerability": "`> 0` is less efficient than `!= 0` for unsigned integers (with proof)"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-08-usage-of-assert-instead-of-require",
        "vulnerability": "Usage of assert() instead of require()"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-14-public-functions-to-external",
        "vulnerability": "Public functions to external"
    },
    {
        "name": "2022-05-bunker",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-bunker#g-09-amounts-should-be-checked-for-0-before-calling-a-transfer",
        "vulnerability": "Amounts should be checked for 0 before calling a transfer"
    },
    {
        "name": "2022-05-bunker",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-bunker#m-02-chainlink-pricer-is-using-a-deprecated-api",
        "vulnerability": "Chainlink pricer is using a deprecated API"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-biconomy#h-01-can-deposit-native-token-for-free-and-steal-funds",
        "vulnerability": "Can deposit native token for free and steal funds"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-06-dos-by-gas-limit",
        "vulnerability": "DoS by gas limit"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-15-whitelistperiodmanager-improper-state-handling-of-exclusion-removals",
        "vulnerability": "`WhitelistPeriodManager`: Improper state handling of exclusion removals"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-16-whitelistperiodmanager-improper-state-handling-of-exclusion-additions",
        "vulnerability": "`WhitelistPeriodManager`: Improper state handling of exclusion additions"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-biconomy#h-03-wrong-formula-when-add-fee-incentivepool-can-lead-to-loss-of-funds",
        "vulnerability": "Wrong formula when add fee `incentivePool` can lead to loss of funds."
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-20-liquidity-providers-unable-to-remove-liquidity-when-the-pool-is-in-deficit-state",
        "vulnerability": "Liquidity providers unable to remove liquidity when the pool is in deficit state"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-03-unbounded-iterations-for-getmaxcommunitylppositon",
        "vulnerability": "Unbounded iterations for `getMaxCommunityLpPositon()`"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-05-senderc20andgetsentamount-uses-recipient-instead-of-sender-balance-difference",
        "vulnerability": "`_sendErc20AndGetSentAmount()` uses recipient instead of sender balance difference"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-08-clarify-reserve-variable-descriptions",
        "vulnerability": "Clarify reserve variable descriptions"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-02-missing-underscore-for-error",
        "vulnerability": "Missing underscore for error"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-04-owners-have-absolute-control-over-protocol",
        "vulnerability": "Owners have absolute control over protocol"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-19-sharestotokenamount-division-by-zero",
        "vulnerability": "`sharesToTokenAmount`: Division by zero"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-07-consider-having-limit-on-gas-fee-charged",
        "vulnerability": "Consider having limit on gas fee charged"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-06-add-constructor-initializer-in-implementation-contracts",
        "vulnerability": "Add constructor initializer in implementation contracts"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-09-improper-upper-bound-definition-on-the-fee",
        "vulnerability": "Improper Upper Bound Definition on the Fee"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-01-conflicting-values-of-basedivisor",
        "vulnerability": "Conflicting values of `BASE_DIVISOR`"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-biconomy#h-04-deleting-nft-info-can-cause-users-nftunpaidrewards-to-be-permanently-erased",
        "vulnerability": "Deleting `nft Info` can cause users\u2019 `nft.unpaidRewards` to be permanently erased"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-01-typo-errors",
        "vulnerability": "Typo errors"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-05-frontrunning-of-setpertokenwalletcap-edge-case",
        "vulnerability": "Frontrunning of `setPerTokenWalletCap` edge case"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-07-sending-tokens-close-to-the-maximum-will-fail-and-user-will-lose-tokens",
        "vulnerability": "Sending tokens close to the maximum will fail and user will lose tokens"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-17-wrong-condition-checking-in-price-calculation",
        "vulnerability": "wrong condition checking in price calculation"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-03-swap-comment-order",
        "vulnerability": "Swap comment order"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-10-call-to-non-existing-contracts-returns-success",
        "vulnerability": "Call to non-existing contracts returns success"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-13-improper-tokengasprice-design-can-overcharge-user-for-the-gas-cost-by-a-huge-margin",
        "vulnerability": "Improper `tokenGasPrice` design can overcharge user for the gas cost by a huge margin"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-02-a-pauser-can-brick-the-contracts",
        "vulnerability": "A `pauser` can brick the contracts"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-05-incorrect-comment-for-description-of-basedivisor",
        "vulnerability": "Incorrect comment for description of `BASE_DIVISOR`"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-02-sub-optimal-calculations-in-getamounttotransfer-results-in-wei-losses",
        "vulnerability": "Sub-optimal calculations in `getAmountToTransfer()` results in wei losses"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-11-liquidityproviders-setting-new-liquidity-pool-will-break-contract",
        "vulnerability": "`LiquidityProviders`: Setting new liquidity pool will break contract"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-biconomy#h-02-liquidityproviderssol-the-share-price-of-the-lp-can-be-manipulated-and-making-future-liquidityproviders-unable-to-removeliquidity",
        "vulnerability": "`LiquidityProviders.sol` The share price of the LP can be manipulated and making future liquidityProviders unable to `removeLiquidity()`"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-08-incentive-pool-can-be-drained-without-rebalancing-the-pool",
        "vulnerability": "Incentive Pool can be drained without rebalancing the pool"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-biconomy#l-04-addsupportedtoken-allows-zero-fees-to-be-set--but-changefee-doesnt",
        "vulnerability": "`addSupportedToken()` allows zero fees to be set, but `changeFee()` doesn\u2019t"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-04-deep-factor-not-customisable",
        "vulnerability": "Deep factor not customisable"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-07-incorrect-comment-for-address-to-use-for-withdrawing-native-token",
        "vulnerability": "Incorrect comment for address to use for withdrawing native token"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-03-incompatibility-with-rebasingdeflationaryinflationary-token",
        "vulnerability": "Incompatibility With Rebasing/Deflationary/Inflationary token"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-14-liquidityfarmingsol-unbounded-for-loops-can-potentially-freeze-users-funds-in-edge-cases",
        "vulnerability": "`LiquidityFarming.sol` Unbounded for loops can potentially freeze users\u2019 funds in edge cases"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-biconomy#n-06-standardize-fee-denomination",
        "vulnerability": "Standardize fee denomination"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-18-possible-frontrun-on-deposits-on-liquiditypool",
        "vulnerability": "Possible frontrun on deposits on `LiquidityPool`"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-01-unsupported-tokens-cannot-be-withdrawn",
        "vulnerability": "Unsupported tokens cannot be withdrawn"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-biconomy#h-05-users-will-lose-a-majority-or-even-all-of-the-rewards-when-the-amount-of-total-shares-is-too-large--due-to-precision-loss",
        "vulnerability": "Users will lose a majority or even all of the rewards when the amount of total shares is too large, due to precision loss"
    },
    {
        "name": "2022-03-biconomy",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-biconomy#m-12-liquidityproviders-setting-new-lp-token-will-break-contract",
        "vulnerability": "`LiquidityProviders`: Setting new LP token will break contract"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-02-wrong-returns-of-savingsaccountutildepositfromsavingsaccount-can-cause-fund-loss",
        "vulnerability": "Wrong returns of `SavingsAccountUtil.depositFromSavingsAccount()` can cause fund loss"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-09-priceoracle-does-not-filter-price-feed-outliers",
        "vulnerability": "`PriceOracle` Does Not Filter Price Feed Outliers"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-01-ether-can-be-locked-in-the-poolfactory-contract-without-a-way-to-retrieve-it",
        "vulnerability": "Ether can be locked in the `PoolFactory` contract without a way to retrieve it"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-04-yearn-token-<>-shares-conversion-decimal-issue",
        "vulnerability": "Yearn token <> shares conversion decimal issue"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-07-aaveyield-misspelled-external-function-name-making-functions-fail",
        "vulnerability": "AaveYield: Misspelled external function name making functions fail"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-03-denial-of-service",
        "vulnerability": "denial of service"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-05-aaves-share-tokens-are-rebasing-breaking-current-strategy-code",
        "vulnerability": "Aave\u2019s share tokens are rebasing breaking current strategy code"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-03-collateral-can-be-deposited-in-a-finished-pool",
        "vulnerability": "Collateral can be deposited in a finished pool"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-05-extension-voting-threshold-check-needs-to-rerun-on-each-transfer",
        "vulnerability": "Extension voting threshold check needs to rerun on each transfer"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-10-wrong-implementation-of-noyieldsolemergencywithdraw",
        "vulnerability": "Wrong implementation of `NoYield.sol#emergencyWithdraw()`"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-02-creditlineliquidate-doesnt-transfer-borrowed-eth-to-a-lender",
        "vulnerability": "CreditLine.liquidate doesn\u2019t transfer borrowed ETH to a lender"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-04-unlinked-address-can-link-immediately-again",
        "vulnerability": "Unlinked address can link immediately again"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-07-savingsaccount-withdrawall-and-switchstrategy-can-freeze-user-funds-by-ignoring-possible-strategy-liquidity-issues",
        "vulnerability": "SavingsAccount withdrawAll and switchStrategy can freeze user funds by ignoring possible strategy liquidity issues"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-01-in-creditlineborrowtokenstoliquidate--oracle-is-used-wrong-way",
        "vulnerability": "In `CreditLine#_borrowTokensToLiquidate`, oracle is used wrong way"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-06-noyieldsol-tokens-with-fee-on-transfer-are-not-supported",
        "vulnerability": "`NoYield.sol` Tokens with fee on transfer are not supported"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-08-possibility-to-drain-savingsaccount-contract-assets",
        "vulnerability": "Possibility to drain SavingsAccount contract assets"
    },
    {
        "name": "2021-12-sublime",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-12-sublime#m-08-missing-approve0",
        "vulnerability": "Missing approve(0)"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-11-unable-to-call-emergencywithdraw-eth-in-noyield-contract",
        "vulnerability": "Unable To Call `emergencyWithdraw` ETH in `NoYield` Contract"
    },
    {
        "name": "2021-12-sublime",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-12-sublime#h-06-anyone-can-liquidate-credit-line-when-autoliquidation-is-false-without-supplying-borrow-tokens",
        "vulnerability": "Anyone can liquidate credit line when autoLiquidation is false without supplying borrow tokens"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-07-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-06-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-11-++i-costs-less-gas-than-++i--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `++i`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-15-remove-unused-variables",
        "vulnerability": "Remove unused variables"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-02-splitter-anyone-can-call-incrementwindow-to-steal-the-tokens-in-the-contract",
        "vulnerability": "Splitter: Anyone can call incrementWindow to steal the tokens in the contract"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-04-createproject-can-be-frontrun",
        "vulnerability": "createProject can be frontrun"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-05-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-20-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-01-erc20-transferfrom-return-values-not-checked",
        "vulnerability": "ERC20 transferFrom return values not checked"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-12-corecollectionsetroyaltyvault-doesnt-check-royaltyvaultroyaltyasset-against-payabletoken--resulting-in-potential-permanent-lock-of-payabletokens-in-royaltyvault",
        "vulnerability": "`CoreCollection.setRoyaltyVault` doesn\u2019t check `royaltyVault.royaltyAsset` against `payableToken`, resulting in potential permanent lock of `payableTokens` in royaltyVault"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-01-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-09-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-12-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-07-ineffective-handling-of-fot-or-rebasing-tokens",
        "vulnerability": "Ineffective Handling of FoT or Rebasing Tokens"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-03-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-06-storage-collision-between-proxy-and-implementation-lack-eip-1967",
        "vulnerability": "STORAGE COLLISION BETWEEN PROXY AND IMPLEMENTATION (LACK EIP 1967)"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-14-dont-compare-boolean-expressions-to-boolean-literals",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-10-add-a-timelock-to-setplatformfee",
        "vulnerability": "Add a timelock to `setPlatformFee()`"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-02-fixed-amount-of-gas-sent-in-call-may-be-insufficient",
        "vulnerability": "Fixed Amount of Gas Sent in Call May Be Insufficient"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-05-gas-costs-will-likely-result-in-any-fees-sent-to-the-splitter-being-economically-unviable-to-recover",
        "vulnerability": "Gas costs will likely result in any fees sent to the Splitter being economically unviable to recover."
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-07-duplicate-nfts-can-be-minted-if-payabletoken-has-a-callback-attached-to-it",
        "vulnerability": "Duplicate NFTs Can Be Minted if `payableToken` Has a Callback Attached to it"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-02-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-04-corecollection-can-be-reinitialized",
        "vulnerability": "CoreCollection can be reinitialized"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-19-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-13-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-21-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-06-corecollections-token-transfer-can-be-disabled",
        "vulnerability": "CoreCollection\u2019s token transfer can be disabled"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-08-funds-cannot-be-withdrawn-in-corecollectionwithdraw",
        "vulnerability": "Funds cannot be withdrawn in `CoreCollection.withdraw`"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-03-dos-claimforallwindows-may-be-made-unusable-by-an-attacker",
        "vulnerability": "DoS: `claimForAllWindows()` May Be Made Unusable By An Attacker"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-04-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-08-corecollection-starting-index-is-pseudo-randomly-generated--allowing-for-gameable-nft-launches",
        "vulnerability": "CoreCollection: Starting index is pseudo-randomly generated, allowing for gameable NFT launches"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-01-dos-attacker-may-front-run-createsplit-with-a-merkleroot-causing-future-transactions-with-the-same-merkleroot-to-revert",
        "vulnerability": "DoS: Attacker May Front-Run `createSplit()` With A `merkleRoot` Causing Future Transactions With The Same `merkleRoot` to Revert"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-09-erc20-tokens-with-no-return-value-will-fail-to-transfer",
        "vulnerability": "ERC20 tokens with no return value will fail to transfer"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-16-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-03-joyn",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-joyn#h-05-centralisation-risk-owner-of-royaltyvault-can-take-all-funds",
        "vulnerability": "Centralisation RIsk: Owner Of `RoyaltyVault` Can Take All Funds"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-11-not-handling-return-value-of-transferfrom-command-can-create-inconsistency",
        "vulnerability": "Not handling return value of transferFrom command can create inconsistency"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-18-private-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "`private` functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-03-royaltyvaultsol-is-not-equipped-to-handle-on-chain-royalties-from-secondary-sales",
        "vulnerability": "`RoyaltyVault.sol` is Not Equipped to Handle On-Chain Royalties From Secondary Sales"
    },
    {
        "name": "2022-03-joyn",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-joyn#m-09-differing-percentage-denominators-causes-confusion-and-potentially-brick-claims",
        "vulnerability": "Differing percentage denominators causes confusion and potentially brick claims"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-17-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-03-joyn",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-joyn#g-10-++ii++-should-be-unchecked{++i}unchecked{++i}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{++i}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2021-11-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-fairside#h-04-erc20convictionscorewritecheckpoint-does-not-write-to-storage-on-same-block",
        "vulnerability": "ERC20ConvictionScore._writeCheckpoint` does not write to storage on same block"
    },
    {
        "name": "2021-11-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-fairside#h-03-beneficiary-cant-get-fairsideconviction-nft-unless-they-only-claim-once--and-only-after-its-fully-vested",
        "vulnerability": "Beneficiary cant get `fairSideConviction` NFT unless they only claim once, and only after it\u2019s fully vested"
    },
    {
        "name": "2021-11-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-fairside#m-02-usercreation-is-updated-incorrectly-when-the-user-tries-to-extend-membership",
        "vulnerability": "`user.creation` is updated incorrectly when the user tries to extend membership"
    },
    {
        "name": "2021-11-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-fairside#h-01-anyone-can-arbitrarily-call-fsdvestingupdatevestedtokens",
        "vulnerability": "Anyone Can Arbitrarily Call `FSDVesting.updateVestedTokens()`"
    },
    {
        "name": "2021-11-fairside",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-fairside#m-01-tributeaccrualavailabletribute-&-tributeaccrualavailablegovernancetribute-distributes-tributes-unfairly",
        "vulnerability": "`TributeAccrual.availableTribute()` & `TributeAccrual.availableGovernanceTribute()` Distributes Tributes Unfairly"
    },
    {
        "name": "2021-11-fairside",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-fairside#h-02-fsdvesting-claiming-tributes-should-call-fsd-tokens-corresponding-functions",
        "vulnerability": "`FSDVesting`: Claiming tributes should call FSD token\u2019s corresponding functions"
    },
    {
        "name": "2022-01-elasticswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-elasticswap#h-02-transferring-quotetoken-to-the-exchange-pool-contract-will-cause-future-liquidity-providers-to-lose-funds",
        "vulnerability": "Transferring `quoteToken` to the exchange pool contract will cause future liquidity providers to lose funds"
    },
    {
        "name": "2022-01-elasticswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-elasticswap#m-01-the-value-of-lp-token-can-be-manipulated-by-the-first-minister--which-allows-the-attacker-to-dilute-future-liquidity-providers-shares",
        "vulnerability": "The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers\u2019 shares"
    },
    {
        "name": "2022-01-elasticswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-elasticswap#h-01-in-the-case-of-single-asset-entry--new-liquidity-providers-will-suffer-fund-loss-due-to-wrong-formula-of-\u03b4ro",
        "vulnerability": "In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of \u0394Ro"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-01-processestablishmentfees-should-emit-events-when-fee-processing-fails",
        "vulnerability": "`_processEstablishmentFees()` should emit events when fee processing fails"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-03-incorrect-revert-string-in-setendingprincipal",
        "vulnerability": "Incorrect revert string in `setEndingPrincipal()`"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-05-ierc20-incorrectly-includes-permittypehash",
        "vulnerability": "IERC20 incorrectly includes `PERMIT_TYPEHASH`"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-02-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-08-incorrect-natspec",
        "vulnerability": "Incorrect Natspec"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-02-inconsistent-approve-behavior-between-erc20-and-revenuedistributiontoken",
        "vulnerability": "Inconsistent `approve()` behavior between `ERC20` and `RevenueDistributionToken`"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-06-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-07-grammar",
        "vulnerability": "Grammar"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-04-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-03-maple",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-maple#g-03-validation-can-be-done-earlier-to-save-gas",
        "vulnerability": "Validation can be done earlier to save gas"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-05-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-03-use-scientific-notation-eg-10e18-rather-than-exponentiation-eg-10**18",
        "vulnerability": "Use scientific notation (e.g. `10e18`) rather than exponentiation (e.g. `10**18`)"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-04-ierc20-should-be-named-ierc20permit",
        "vulnerability": "IERC20 should be named IERC20Permit"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-07-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-03-maple",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-maple#g-02-use-immutable-variables-can-save-gas",
        "vulnerability": "Use immutable variables can save gas"
    },
    {
        "name": "2022-03-maple",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-03-maple#g-01-erc20soltransferfrom-do-not-reduce-approval-on-transferfrom-if-current-allowance-is-typeuint256max",
        "vulnerability": "`ERC20.sol#transferFrom()` Do not reduce approval on transferFrom if current allowance is type(uint256).max"
    },
    {
        "name": "2022-03-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-maple#m-02-processes-refinance-operations-may-call-malicious-code-by-re-created-refinancer-contract",
        "vulnerability": "Processes refinance operations may call malicious code by re-created refinancer contract"
    },
    {
        "name": "2022-03-maple",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-03-maple#n-06-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-03-maple",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-maple#m-01-incorrect-implementation-of-lender-can-result-in-lost-tokens",
        "vulnerability": "Incorrect implementation of Lender can result in lost tokens"
    },
    {
        "name": "2022-03-maple",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-03-maple#l-01-treasury-fees-are-given-to-the-lender-on-failure--rather-than-reverting",
        "vulnerability": "Treasury fees are given to the lender on failure, rather than reverting"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-04-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-01-xerc4626sol-some-users-may-not-be-able-to-withdraw-until-rewardscycleend-the-due-to-underflow-in-beforewithdraw",
        "vulnerability": "`xERC4626.sol` Some users may not be able to withdraw until `rewardsCycleEnd` the due to underflow in `beforeWithdraw()`"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-08-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-07-incorrect-accounting-of-free-weight-in-decrementweightuntilfree",
        "vulnerability": "Incorrect accounting of free weight in `_decrementWeightUntilFree`"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-04-in-erc20gauges--contribution-to-total-weight-is-double-counted-when-incrementgauge-is-called-before-addgauge-for-a-given-gauge",
        "vulnerability": "In `ERC20Gauges`, contribution to total weight is double-counted when `incrementGauge` is called before `addGauge` for a given gauge."
    },
    {
        "name": "2022-04-xtribe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-xtribe#l-01-nonce-used-for-multiple-purposes",
        "vulnerability": "Nonce used for multiple purposes"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-02-first-xerc4626-deposit-exploit-can-break-share-calculation",
        "vulnerability": "First xERC4626 deposit exploit can break share calculation"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-06-flywheelcoresetbooster-can-be-used-to-steal-unclaimed-rewards",
        "vulnerability": "`FlywheelCore.setBooster()` can be used to steal unclaimed rewards"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-03-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-xtribe#l-04-require-should-be-used-instead-of-assert",
        "vulnerability": "`require()` should be used instead of `assert()`"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-xtribe#l-02-multicalls-involving-permit-and-delegatebysig-can-be-dosed",
        "vulnerability": "`multicall()`s involving `permit()` and `delegateBySig()` can be DOSed"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-07-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-09-consider-addings-checks-for-signature-malleability",
        "vulnerability": "Consider addings checks for signature malleability"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-03-erc20gauges-the-incrementgaugeweight-function-does-not-check-the-gauge-parameter-enough--so-the-user-may-lose-rewards",
        "vulnerability": "`ERC20Gauges`: The `_incrementGaugeWeight` function does not check the gauge parameter enough, so the user may lose rewards"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-xtribe#m-05-flywheelcores-setflywheelrewards-can-remove-access-to-reward-funds-from-current-users",
        "vulnerability": "`FlywheelCore`\u2019s `setFlywheelRewards` can remove access to reward funds from current users"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-02-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-06-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-01-requirerevert-statements-should-have-descriptive-reason-strings",
        "vulnerability": "`require()`/`revert()` statements should have descriptive reason strings"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-xtribe#n-05-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-04-xtribe",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-xtribe#l-03-misleading-comments",
        "vulnerability": "Misleading comments"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-06-incorrect-burn-address-in-vadersol",
        "vulnerability": "Incorrect burn address in Vader.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-21-anyone-can-avoid-all-vether-transfer-fees-by-adding-their-address-to-the-vether-excludedaddresses-list",
        "vulnerability": "Anyone Can Avoid All Vether Transfer Fees By Adding Their Address to the Vether `ExcludedAddresses` List."
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-22-users-may-unintentionally-remove-liquidity-under-a-phishing-attack",
        "vulnerability": "Users may unintentionally remove liquidity under a phishing attack."
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-05-interest-debt-is-capped-after-a-year",
        "vulnerability": "Interest debt is capped after a year"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-13-init-function-can-be-called-by-everyone",
        "vulnerability": "Init function can be called by everyone"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-14-pool-functions-can-be-called-before-initialization-in-init--of-poolssol",
        "vulnerability": "Pool functions can be called before initialization in _`init_ ()` of Pools.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-02-undefined-behavior-for-dao-and-grant-vote-proposals-in-daosol",
        "vulnerability": "Undefined behavior for DAO and GRANT vote proposals in `DAO.sol`"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-08-wrong-liquidity-units-calculation",
        "vulnerability": "Wrong liquidity units calculation"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-10-incorrect-operator-used-in-deploysynth-of-poolssol",
        "vulnerability": "Incorrect operator used in `deploySynth()` of `Pools.sol`"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-02-flash-attack-mitigation-does-not-work-as-intended-in-usdvsol",
        "vulnerability": "Flash attack mitigation does not work as intended in USDV.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-18-vault-rewards-can-be-gamed",
        "vulnerability": "Vault rewards can be gamed"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-12-getaddedamount-can-return-wrong-results",
        "vulnerability": "`getAddedAmount` can return wrong results"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-07-completed-proposals-can-be-voted-on-and-executed-again",
        "vulnerability": "Completed proposals can be voted on and executed again"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-13-4-synths-can-be-minted-with-fake-base-token",
        "vulnerability": "4 Synths can be minted with fake base token"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-23-anyone-can-curate-pools-and-steal-rewards",
        "vulnerability": "Anyone can curate pools and steal rewards"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-03-missing-dao-functionality-to-call-changedao-function-in-vadersol",
        "vulnerability": "Missing DAO functionality to call `changeDAO()` function in Vader.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-10-anyone-can-list-anchors--curate-tokens",
        "vulnerability": "Anyone can list anchors / curate tokens"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-06-canceled-proposals-can-still-be-executed",
        "vulnerability": "Canceled proposals can still be executed"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-12-transfer-fee-avoidance",
        "vulnerability": "Transfer fee avoidance"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-11-swap-token-can-be-traded-as-fake-base-token",
        "vulnerability": "Swap token can be traded as fake base token"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-04-proposals-can-be-cancelled",
        "vulnerability": "Proposals can be cancelled"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-15-wrong-slippage-protection-on-token-->-token-trades",
        "vulnerability": "Wrong slippage protection on Token -> Token trades"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-09-divide-before-multiply",
        "vulnerability": "Divide before multiply"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-16-copy-paste-bug-leading-to-incorrect-harvest-rewards-in-vaultsol",
        "vulnerability": "Copy-paste bug leading to incorrect harvest rewards in Vault.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-05-flash-loans-can-affect-governance-voting-in-daosol",
        "vulnerability": "Flash loans can affect governance voting in DAO.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-01-unhandled-return-value-of-transfer-in-transferout-of-poolssol",
        "vulnerability": "Unhandled return value of transfer in `transferOut()` of Pools.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-04-flashproof-is-not-flash-proof",
        "vulnerability": "`flashProof` is not flash-proof"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-07-wrong-calcasymmetricshare-calculation",
        "vulnerability": "Wrong `calcAsymmetricShare` calculation"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-17-vaderredeemtomember-vulnerable-to-front-running",
        "vulnerability": "`Vader.redeemToMember()` vulnerable to front running"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-15-changedao-should-be-a-two-step-process-in-vadersol",
        "vulnerability": "`changeDAO` should be a two-step process in Vader.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-25-incorrect-initialization-causes-vader-emission-rate-of-1-second-instead-of-1-day-in-vadersol",
        "vulnerability": "Incorrect initialization causes VADER emission rate of 1 second instead of 1 day in Vader.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-16-tokens-can-be-stolen-through-transferto",
        "vulnerability": "Tokens can be stolen through `transferTo`"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-17-transfer-fee-is-burned-on-wrong-accounts",
        "vulnerability": "Transfer fee is burned on wrong accounts"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-11-allowing-duplicated-anchors-could-cause-bias-on-anchor-price",
        "vulnerability": "Allowing duplicated anchors could cause bias on anchor price."
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-14-missing-access-restriction-on-lockunitsunlockunits",
        "vulnerability": "Missing access restriction on `lockUnits/unlockUnits`"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-19-vault-rewards-last-claim-time-not-always-initialized",
        "vulnerability": "Vault rewards last claim time not always initialized"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-20-vault-weight-accounting-is-wrong-for-withdrawals",
        "vulnerability": "Vault Weight accounting is wrong for withdrawals"
    },
    {
        "name": "2021-04-vader",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-04-vader#h-09-incorrect-initialization-gives-il-protection-of-only-1-second-instead-of-100-days-in-routersol",
        "vulnerability": "Incorrect initialization gives IL protection of only 1 second instead of 100 days in Router.sol"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-01-user-may-not-get-il-protection-if-certain-functions-are-called-directly-in-poolssol",
        "vulnerability": "User may not get IL protection if certain functions are called directly in `Pools.sol`"
    },
    {
        "name": "2021-04-vader",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-04-vader#m-03-lack-of-input-validation-in-replacepool-allows-curated-pool-limit-bypass-in-routersol",
        "vulnerability": "Lack of input validation in `replacePool()` allows curated pool limit bypass in `Router.sol`"
    },
    {
        "name": "2021-09-sushimiso",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushimiso#h-02-sushitoken-transfers-are-broken-due-to-wrong-delegates-accounting-on-transfers",
        "vulnerability": "SushiToken transfers are broken due to wrong delegates accounting on transfers"
    },
    {
        "name": "2021-09-sushimiso",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-sushimiso#m-01-use-of-transfer-instead-of-call-to-send-eth",
        "vulnerability": "use of transfer() instead of call() to send eth"
    },
    {
        "name": "2021-09-sushimiso",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushimiso#h-01-postauctionlaunchersolfinalize-adding-liquidity-to-an-existing-pool-may-allows-the-attacker-to-steal-most-of-the-tokens",
        "vulnerability": "`PostAuctionLauncher.sol#finalize()` Adding liquidity to an existing pool may allows the attacker to steal most of the tokens"
    },
    {
        "name": "2021-09-sushimiso",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-sushimiso#h-03-last-person-to-withdraw-his-tokens-might-not-be-able-to-do-this--in-crowdsale-edge-case",
        "vulnerability": "Last person to withdraw his tokens might not be able to do this, in Crowdsale (edge case)"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-04-safesymbol-can-revert-causing-dos",
        "vulnerability": "`safeSymbol()` can revert causing DoS"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-01-burn-doesnt-call-erc721-burn",
        "vulnerability": "`burn()` doesn\u2019t call ERC721 `_burn()`"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-08-users-might-pay-enormous-amounts-of-gas",
        "vulnerability": "users might pay enormous amounts of gas"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-09-dos-pay-function",
        "vulnerability": "DOS pay function"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-04-important-state-updates-are-made-after-the-callback-in-the-mint-function",
        "vulnerability": "Important state updates are made after the callback in the mint() function"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-05-xss-via-svg-construction-contract",
        "vulnerability": "XSS via SVG Construction contract"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-03-safename-can-revert-causing-dos",
        "vulnerability": "`safeName()` can revert causing DoS"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-01-timeswappairsolborrow-improper-implementation-allows-attacker-to-increase-poolstatez-to-a-large-value",
        "vulnerability": "`TimeswapPair.sol#borrow()` Improper implementation allows attacker to increase `pool.state.z` to a large value"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-02-timeswapconveniencesolborrowgivendebt-attacker-can-increase-statey-to-an-extremely-large-value-with-a-dust-amount-of-assetout",
        "vulnerability": "`TimeswapConvenience.sol#borrowGivenDebt()` Attacker can increase `state.y` to an extremely large value with a dust amount of `assetOut`"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-07-no-reentrancy-guard-on-mint-function-that-has-a-callback",
        "vulnerability": "no reentrancy guard on mint() function that has a callback"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-05-in-the-lend-function-state-updates-are-made-after-the-callback",
        "vulnerability": "In the lend() function state updates are made after the callback"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-02-safedecimals-can-revert-causing-dos",
        "vulnerability": "safeDecimals can revert causing DoS"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-06-borrow-function-has-state-updates-after-a-callback-to-msgsender",
        "vulnerability": "borrow() function has state updates after a callback to msg.sender"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-10-convenience-contract-fails-to-function-if-asset-or-collateral-is-an-erc20-token-with-fees",
        "vulnerability": "Convenience contract fails to function if asset or collateral is an ERC20 token with fees"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-07-pay-function-has-callback-to-msgsender-before-important-state-updates",
        "vulnerability": "pay() function has callback to msg.sender before important state updates"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-timeswap#h-03-manipulation-of-the-y-state-results-in-interest-rate-manipulation",
        "vulnerability": "Manipulation of the Y State Results in Interest Rate Manipulation"
    },
    {
        "name": "2022-01-timeswap",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-timeswap#m-06-timeswappairsolmint-malicious-userattacker-can-mint-new-liquidity-with-an-extremely-small-amount-of-yincrease-and-malfunction-the-pair-with-the-maturity",
        "vulnerability": "`TimeswapPair.sol#mint()` Malicious user/attacker can mint new liquidity with an extremely small amount of `yIncrease` and malfunction the pair with the maturity"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-01-improper-implementation-of-slippage-check",
        "vulnerability": "Improper implementation of slippage check"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-04-excessive-require-makes-the-transaction-fail-unexpectedly",
        "vulnerability": "Excessive `require` makes the transaction fail unexpectedly"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-02-missing-tokenapprove-to-curvepool-in-setzapconfig",
        "vulnerability": "Missing `_token.approve()` to `curvePool` in `setZapConfig`"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#h-01-setguardian-wrong-implementation",
        "vulnerability": "`setGuardian()` Wrong implementation"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-06-calcmint-always-return-poolid=0-and-idx=0",
        "vulnerability": "`calcMint` always return poolId=0 and idx=0"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-05-no-slippage-control-on-deposit-of-ibbtcvaultzapsol",
        "vulnerability": "No slippage control on `deposit` of `IbbtcVaultZap.sol`"
    },
    {
        "name": "2021-11-badgerzaps",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-11-badgerzaps#m-03-zap-contracts-redeem-function-doesnt-check-which-token-the-user-wants-to-receive",
        "vulnerability": "Zap contract\u2019s `redeem()` function doesn\u2019t check which token the user wants to receive"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-02-snotesolmintfromassets-lack-of-slippage-control",
        "vulnerability": "`sNOTE.sol#_mintFromAssets()` Lack of slippage control"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-01-usage-of-deprecated-chainlink-api-in-eip1271wallet",
        "vulnerability": "Usage of deprecated ChainLink API in `EIP1271Wallet`"
    },
    {
        "name": "2022-01-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-notional#h-02-cooldown-and-redeem-windows-can-be-rendered-useless",
        "vulnerability": "Cooldown and redeem windows can be rendered useless"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-07-validateorder-does-not-allow-anyone-to-be-a-taker-of-an-off-chain-order",
        "vulnerability": "`_validateOrder` Does Not Allow Anyone To Be A Taker Of An Off-Chain Order"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-06-getvotingpower-is-not-equipped-to-handle-on-chain-voting",
        "vulnerability": "`getVotingPower` Is Not Equipped To Handle On-Chain Voting"
    },
    {
        "name": "2022-01-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-notional#h-01-treasury-cannot-claim-comp-tokens-&-comp-tokens-are-stuck",
        "vulnerability": "Treasury cannot claim COMP tokens & COMP tokens are stuck"
    },
    {
        "name": "2022-01-notional",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-notional#h-03-a-malicious-treasury-manager-can-burn-treasury-tokens-by-setting-makerfee-to-the-amount-the-maker-receives",
        "vulnerability": "A Malicious Treasury Manager Can Burn Treasury Tokens By Setting `makerFee` To The Amount The Maker Receives"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-03-no-upper-limit-on-cooldowntimeinseconds-allows-funds-to-be-locked-snote-owner",
        "vulnerability": "No upper limit on `coolDownTimeInSeconds` allows funds to be locked sNOTE owner"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-05-snote-holders-are-not-incetivized-to-vote-on-proposals-to-call-extracttokensforcollateralshortfall",
        "vulnerability": "`sNOTE` Holders Are Not Incetivized To Vote On Proposals To Call `extractTokensForCollateralShortfall`"
    },
    {
        "name": "2022-01-notional",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-notional#m-04-max-shortfall-withdraw-limit-on-btp-extraction-is-not-enforced",
        "vulnerability": "MAX _SHORTFALL_ WITHDRAW limit on BTP extraction is not enforced"
    },
    {
        "name": "2021-09-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-wildcredit#m-01-use-of-deprecated-chainlink-api",
        "vulnerability": "Use of deprecated Chainlink API"
    },
    {
        "name": "2021-09-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-wildcredit#m-02-lendingpairwithdrawuniposition-should-accrue-debt-first",
        "vulnerability": "`LendingPair.withdrawUniPosition` should accrue debt first"
    },
    {
        "name": "2021-09-wildcredit",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-wildcredit#h-01-use-of-tokenbs-price-instead-of-tokena-in-determining-account-health-will-lead-to-protocol-mis-accounting-and-insolvency",
        "vulnerability": "Use of tokenB\u2019s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency"
    },
    {
        "name": "2021-09-wildcredit",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-09-wildcredit#h-02-liquidation-can-be-escaped-by-depositing-a-uni-v3-position-with-0-liquidity",
        "vulnerability": "Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity"
    },
    {
        "name": "2021-09-wildcredit",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-09-wildcredit#m-03-supply-part-of-the-accrued-debt-can-be-stolen",
        "vulnerability": "Supply part of the accrued debt can be stolen"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-06-incorrect-calculation-of-new-price-while-adding-position",
        "vulnerability": "Incorrect calculation of new price while adding position"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-05-failure-in-endpoint-can-cause-minting-more-than-one-nft-with-the-same-token-id-in-different-chains",
        "vulnerability": "Failure in `endpoint` can cause minting more than one NFT with the same token id in different chains"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-09-safetransfermany-doesnt-actually-use-safe-transfer",
        "vulnerability": "`safeTransferMany()` doesn\u2019t actually use safe transfer"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-09-users-can-bypass-the-maxwinpercent-limit-using-a-partially-closing",
        "vulnerability": "Users can bypass the `maxWinPercent` limit using a partially closing"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-07-trading-will-not-work-on-ethereum-if-usdt-is-used",
        "vulnerability": "Trading will not work on Ethereum if USDT is used"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-08-govnft-maxbridge-has-no-effect",
        "vulnerability": "GovNFT: maxBridge has no effect"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-10-bondnftextendlock-force-a-user-to-extend-the-bond-at-least-for-current-bondperiod",
        "vulnerability": "`BondNFT.extendLock` force a user to extend the bond at least for current bond.period"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-23-governance-nft-holder--whose-nft-was-minted-before-tradinghandleopenfees-function-is-called--can-lose-deserved-rewards-after-tradinghandleopenfees-function-is-called",
        "vulnerability": "Governance NFT holder, whose NFT was minted before `Trading._handleOpenFees` function is called, can lose deserved rewards after `Trading._handleOpenFees` function is called"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-11-not-enough-margin-pulled-or-burned-from-user-when-adding-to-a-position",
        "vulnerability": "Not enough margin pulled or burned from user when adding to a position"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-13-one-can-become-referral-of-hash-0x0-and-because-all-users-default-referral-hash-is-0x0-so-he-would-become-all-users-referral-by-default-and-earn-a-lot-of-fees-while-users-didnt-approve-it",
        "vulnerability": "One can become referral of hash 0x0 and because all users default referral hash is 0x0 so he would become all users referral by default and earn a lot of fees while users didn\u2019t approve it"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-21-executelimitorder-modifies-open-interest-with-a-wrong-position-value",
        "vulnerability": "`executeLimitOrder()` modifies open-interest with a wrong position value"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-19-handledeposit-and-handlewithdraw-do-not-account-for-tokens-with-decimals-higher-than-18",
        "vulnerability": "`_handleDeposit` and `_handleWithdraw` do not account for tokens with decimals higher than 18"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-01-locksol-assets-deposited-with-lockextendlock-function-are-lost",
        "vulnerability": "Lock.sol: assets deposited with Lock.extendLock function are lost"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-10-user-can-abuse-tight-stop-losses-and-high-leverage-to-make-risk-free-trades",
        "vulnerability": "User can abuse tight stop losses and high leverage to make risk free trades"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-08-incorrect-assumption-of-stablecoin-market-stability",
        "vulnerability": "Incorrect Assumption of Stablecoin Market Stability"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-22-unreleased-locks-cause-the-reward-distribution-to-be-flawed-in-bondnft",
        "vulnerability": "Unreleased locks cause the reward distribution to be flawed in BondNFT"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-06-bondnfts-can-revert-when-transferred",
        "vulnerability": "BondNFTs can revert when transferred"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-16-distribute-wont-update-epoch[tigasset]-when-totalshares[tigasset]==0-which-can-cause-later-created-bond-for-this-tigasset-to-have-wrong-mint-epoch",
        "vulnerability": "`distribute()` won\u2019t update `epoch[tigAsset]` when `totalShares[tigAsset]==0` which can cause later created bond for this tigAsset to have wrong mint epoch"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-14-bondnftsolclaim-needs-to-correct-all-the-missing-epochs",
        "vulnerability": "`BondNFT.sol#claim()` needs to correct all the missing epochs"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-02-riskless-trades-due-to-delay-check",
        "vulnerability": "Riskless trades due to delay check"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-02-must-approve-0-first",
        "vulnerability": "Must approve 0 first"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-04-bypass-the-maximum-pnl-check-to-take-extra-profit",
        "vulnerability": "Bypass the maximum PnL check to take extra profit"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-07-reentrancy-attack-during-mint-function-in-position-contract-which-can-lead-to-removing-of-the-other-users-limit-orders-or-stealing-contract-funds-because-initid-is-set-low-value",
        "vulnerability": "reentrancy attack during `mint()` function in Position contract which can lead to removing of the other user\u2019s limit orders or stealing contract funds because initId is set low value"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-03-certain-fee-configuration-enables-vaults-to-be-drained",
        "vulnerability": "Certain fee configuration enables vaults to be drained"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-18-stoplosstakeprofit-should-be-validated-again-for-the-new-price-in-tradingexecutelimitorder",
        "vulnerability": "StopLoss/TakeProfit should be validated again for the new price in `Trading.executeLimitOrder()`"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-12-centralization-risks-owner-can-freeze-withdraws-and-use-timelock-to-steal-all-funds",
        "vulnerability": "Centralization risks: owner can freeze withdraws and use timelock to steal all funds"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-20-tradinginitiatemarketorder-allows-to-open-a-position-with-more-margin-than-expected-due-to-handleopenfees-wrong-calculation-when-a-trade-is-referred",
        "vulnerability": "Trading#initiateMarketOrder allows to open a position with more margin than expected due to _handleOpenFees wrong calculation when a trade is referred"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-15-checkdelay-will-not-work-properly-for-arbitrum-or-optimism-due-to-blocknumber",
        "vulnerability": "`_checkDelay` will not work properly for Arbitrum or Optimism due to `block.number`"
    },
    {
        "name": "2022-12-tigris",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-tigris#h-05-malicious-user-can-steal-all-assets-in-bondnft",
        "vulnerability": "Malicious user can steal all assets in BondNFT"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-11-handleopenfees-returns-an-incorrect-value-for-feepaid-this-directly-impacts-margin-calculations",
        "vulnerability": "`_handleOpenFees` returns an incorrect value for `_feePaid`. This directly impacts margin calculations"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-01-locksol-claimgovfees-function-can-cause-assets-to-be-stuck-in-the-lock-contract",
        "vulnerability": "Lock.sol: claimGovFees function can cause assets to be stuck in the Lock contract"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-04-approved-operators-of-position-token-cant-call-tradinginitiatecloseorder",
        "vulnerability": "Approved operators of Position token can\u2019t call Trading.initiateCloseOrder"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-24-chainlink-price-feed-is-not-sufficiently-validated-and-can-return-stale-price",
        "vulnerability": "Chainlink price feed is not sufficiently validated and can return stale price"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-03-bypass-the-delay-security-check-to-win-risk-free-funds",
        "vulnerability": "Bypass the delay security check to win risk free funds"
    },
    {
        "name": "2022-12-tigris",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-tigris#m-17-user-can-close-an-order-via-limitclose--and-take-bot-fees-to-themselves",
        "vulnerability": "User can close an order via `limitClose()`, and take bot fees to themselves"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-14-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-18-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-11-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-10**18",
        "vulnerability": "Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-06-redundant-cast",
        "vulnerability": "Redundant cast"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-33-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-04-yearntokenadapter-allows-a-maximum-loss-of-100%-when-withdrawing",
        "vulnerability": "YearnTokenAdapter allows a maximum loss of 100% when withdrawing"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-16-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-09-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-10-abiencodepacked-should-not-be-used-with-dynamic-types-when-passing-the-result-to-a-hash-function-such-as-keccak256",
        "vulnerability": "`abi.encodePacked()` should not be used with dynamic types when passing the result to a hash function such as `keccak256()`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-18-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-02-override-function-arguments-that-are-unused-should-have-the-variable-name-removed-or-commented-out-to-avoid-compiler-warnings",
        "vulnerability": "`override` function arguments that are unused should have the variable name removed or commented out to avoid compiler warnings"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-07-autoleveragebase-must-approve-0-first",
        "vulnerability": "AutoleverageBase: Must approve 0 first"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-20-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-11-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-26-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-19-use-allowlistdenylist-rather-than-blacklistwhitelist",
        "vulnerability": "Use allowlist/denylist rather than blacklist/whitelist"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-06-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-19-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-17-debt-can-be-repaid-with-a-depegged-underlyingtoken--which-can-be-exploited-by-arbitrageurs-and-drives-the-market-price-of-altoken-to-match-the-worst-depegged-underlyingtoken",
        "vulnerability": "Debt can be repaid with a depegged underlyingToken, which can be exploited by arbitrageurs and drives the market price of alToken to match the worst depegged underlyingToken"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-05-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-21-internal-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "`internal` functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-03-dos-in-wrap-and-unwrap",
        "vulnerability": "DoS in wrap and unwrap"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-13-private-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "`private` functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-10-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-27-dont-use-safemath-once-the-solidity-version-is-080-or-greater",
        "vulnerability": "Don\u2019t use `SafeMath` once the solidity version is 0.8.0 or greater"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-17-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-13-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-09-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-08-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-11-[galcxsol]-attacker-can-make-the-contract-unusable-when-totalsupply-is-0",
        "vulnerability": "[gALCX.sol] Attacker can make the contract unusable when totalSupply is 0"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-01-alchemist-can-mint-altokens-above-their-assigned-ceiling-by-calling-lowerhasminted",
        "vulnerability": "Alchemist can mint `AlTokens` above their assigned ceiling by calling `lowerHasMinted()`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-05-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-04-behavior-described-by-comment-is-incomplete",
        "vulnerability": "Behavior described by comment is incomplete"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-15-remove-unused-local-variable",
        "vulnerability": "Remove unused local variable"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-32-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-14-a-well-financed-attacker-could-prevent-any-other-users-from-minting-synthetic-tokens",
        "vulnerability": "A well financed attacker could prevent any other users from minting synthetic tokens"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-03-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-15-lido-adapter-incorrectly-calculates-the-price-of-the-underlying-token",
        "vulnerability": "Lido adapter incorrectly calculates the price of the underlying token"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-06-ethassetmanager-and-threepoolassetmanager-dont-control-meta-tokens-decimals",
        "vulnerability": "EthAssetManager and ThreePoolAssetManager don\u2019t control Meta tokens decimals"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-02-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-23-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-01-remove-or-replace-unused-state-variables",
        "vulnerability": "Remove or replace unused state variables"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-04-structs-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "Structs can be packed into fewer storage slots"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-04-2**<n>---1-should-be-re-written-as-typeuint<n>max",
        "vulnerability": "`2**<n> - 1` should be re-written as `type(uint<n>).max`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-01-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-31-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save deployment gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-14-not-using-the-named-return-variables-when-a-function-returns--wastes-deployment-gas",
        "vulnerability": "Not using the named return variables when a function returns, wastes deployment gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-12-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-10-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-30-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-17-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-10-new-galcx-token-denomination-can-be-depressed-by-the-first-depositor",
        "vulnerability": "New gALCX token denomination can be depressed by the first depositor"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-06-return-values-of-transfertransferfrom-not-checked",
        "vulnerability": "Return values of `transfer()`/`transferFrom()` not checked"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-24-abiencode-is-less-efficient-than-abiencodepacked",
        "vulnerability": "`abi.encode()` is less efficient than `abi.encodePacked()`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-25-expressions-for-constant-values-such-as-a-call-to-keccak256--should-use-immutable-rather-than-constant",
        "vulnerability": "Expressions for constant values such as a call to `keccak256()`, should use `immutable` rather than `constant`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-08-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-15-file-does-not-contain-an-spdx-identifier",
        "vulnerability": "File does not contain an SPDX Identifier"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-01-latent-funds-can-be-stolen",
        "vulnerability": "Latent funds can be stolen"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-11-++ii++-should-be-unchecked{++i}unchecked{++i}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{++i}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-08-missing-event-for-critical-parameter-change",
        "vulnerability": "Missing event for critical parameter change"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-12-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-29-multiplicationdivision-by-two-should-use-bit-shifting",
        "vulnerability": "Multiplication/division by two should use bit shifting"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-16-if-totalshares-for-a-token-falls-to-zero-while-there-is-pendingcredit-the-contract-will-become-stuck",
        "vulnerability": "If `totalShares` for a token falls to zero while there is `pendingCredit` the contract will become stuck"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-05-no-storage-gap-for-upgradeable-contract-might-lead-to-storage-slot-collision",
        "vulnerability": "No Storage Gap for Upgradeable Contract Might Lead to Storage Slot Collision"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-22-++i-costs-less-gas-than-++i--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `++i`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-07-numeric-values-having-to-do-with-time-should-use-time-units-for-readability",
        "vulnerability": "Numeric values having to do with time should use time units for readability"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-02-low-level-calls-dont-check-for-contract-existence",
        "vulnerability": "Low level calls don\u2019t check for contract existence"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-03-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-09-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-05-alchemix#n-16-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-07-unusedempty-receive-function",
        "vulnerability": "Unused/empty `receive()` function"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-12-registerasset-misuse-can-permanently-disable-transmuterbuffer-and-break-the-system",
        "vulnerability": "registerAsset misuse can permanently disable TransmuterBuffer and break the system"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-28-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-03-set-sane-maximums-for-input-parameters",
        "vulnerability": "Set sane maximums for input parameters"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-13-transmuterbuffers-alchemistwithdraw-use-hard-coded-slippage-that-can-lead-to-user-losses",
        "vulnerability": "TransmuterBuffer\u2019s _alchemistWithdraw use hard coded slippage that can lead to user losses"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-05-alchemix#l-05-unsafe-use-of-transfertransferfrom-with-ierc20",
        "vulnerability": "Unsafe use of `transfer()`/`transferFrom()` with `IERC20`"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-05-alchemix#g-07-the-result-of-external-function-calls-should-be-cached-rather-than-re-calling-the-function",
        "vulnerability": "The result of external function calls should be cached rather than re-calling the function"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-09-transmuterbuffers-setalchemist-will-freeze-deposited-funds",
        "vulnerability": "TransmuterBuffer\u2019s setAlchemist will freeze deposited funds"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-02-transmuterbuffersol-calls-depositunderlying-with-no-slippage-bounds",
        "vulnerability": "TransmuterBuffer.sol calls depositUnderlying with no slippage bounds"
    },
    {
        "name": "2022-05-alchemix",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-05-alchemix#m-08-yearntokenadapters-wrap-can-become-stuck-as-it-uses-one-step-approval-for-an-arbitrary-underlying",
        "vulnerability": "YearnTokenAdapter\u2019s wrap can become stuck as it uses one step approval for an arbitrary underlying"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-03-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#h-01-a-malicious-early-userattacker-can-manipulate-the-vaults-pricepershare-to-take-an-unfair-share-of-future-users-deposits",
        "vulnerability": "A malicious early user/attacker can manipulate the vault\u2019s `pricePerShare` to take an unfair share of future users\u2019 deposits"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-09-method-ids-can-be-fiddled-with-to-reduce-gas-costs",
        "vulnerability": "Method IDs can be fiddled with to reduce gas costs"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#m-03-owner-or-managers-can-rug-aave-rewards",
        "vulnerability": "Owner or Managers can rug Aave rewards"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-05-dont-use-safemath-once-the-solidity-version-is-080-or-greater",
        "vulnerability": "Don\u2019t use `SafeMath` once the solidity version is 0.8.0 or greater"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#m-01-user-fund-loss-in-supplytokento-because-of-rounding",
        "vulnerability": "User fund loss in `supplyTokenTo()` because of rounding"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#m-04-rewardscontroller-emission-manager-can-authorize-users-to-claim-on-behalf-of-the-aavev3yieldsource-contract-and-siphon-yield",
        "vulnerability": "`RewardsController` Emission Manager Can Authorize Users to Claim on Behalf of the `AaveV3YieldSource` Contract and Siphon Yield"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-01-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-08-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-04-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-02-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-06-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#m-02-depositamount-requires-to-be-updated-to-contract-balance-increase",
        "vulnerability": "`_depositAmount` requires to be updated to contract balance increase"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#g-07-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-04-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-pooltogether#m-05-yield-source-does-not-correctly-calculate-share-conversions",
        "vulnerability": "Yield source does not correctly calculate share conversions"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-04-comparison-operators",
        "vulnerability": "Comparison Operators"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-11-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-02-calldata-instead-of-memory-for-ro-function-parameters",
        "vulnerability": "Calldata instead of memory for RO function parameters"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-06-erc777-tokens-can-bypass-depositcap-guard",
        "vulnerability": "ERC777 tokens can bypass `depositCap` guard"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-06-constants-should-be-defined-rather-than-using-magic-numbers",
        "vulnerability": "`constant`s should be defined rather than using magic numbers"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-07-prefix-increments",
        "vulnerability": "Prefix increments"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-08-decimalmultiplier-doesnt-account-for-tokens-with-decimals-higher-than-18",
        "vulnerability": "`_decimalMultiplier` doesn\u2019t account for tokens with decimals higher than 18"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-08-redundant-code",
        "vulnerability": "Redundant code"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-01-preparedeadline--setconfig--and-executedeadline-should-be-private",
        "vulnerability": "`_prepareDeadline()`, `_setConfig()`, and `_executeDeadline()` should be `private`"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-12-file-is-missing-natspec",
        "vulnerability": "File is missing NatSpec"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-14-event-is-missing-indexed-fields",
        "vulnerability": "Event is missing `indexed` fields"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-09-getnewcurrentfees-reverts-when-minfeepercentage->-feeratio",
        "vulnerability": "`getNewCurrentFees` reverts when `minFeePercentage` > `feeRatio`"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-01-call-should-be-used-instead-of-transfer-on-an-address-payable",
        "vulnerability": "`call()` should be used instead of `transfer()` on an `address payable`"
    },
    {
        "name": "2022-04-backd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backd#h-02-function-lockfunds-in-topupactionlibrary-can-cause-serious-fund-lose-fee-and-capped-bypass-its-not-calling-stakervaultincreaseactionlockedbalance-when-transfers-stakes",
        "vulnerability": "function `lockFunds` in `TopUpActionLibrary` can cause serious fund lose. fee and Capped bypass. It\u2019s not calling `stakerVault.increaseActionLockedBalance` when transfers stakes."
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-10-tight-variable-packing",
        "vulnerability": "Tight Variable Packing"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-14-cethinterfacemint-reading-non-existing-returns-makes-topup-with-native-token-always-revert",
        "vulnerability": "`CEthInterface#mint()` reading non-existing returns makes `topUp()` with native token always revert"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-03-lack-of-safeapprove0-prevents-some-registrations--and-the-changing-of-stakers-and-lp-tokens",
        "vulnerability": "Lack of `safeApprove(0)` prevents some registrations, and the changing of stakers and LP tokens"
    },
    {
        "name": "2022-04-backd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backd#h-03-customers-cannot-be-topuped-a-second-time",
        "vulnerability": "Customers cannot be `topUp()`ed a second time"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-10-math-library-unnecessarily-overflows-during-some-operations",
        "vulnerability": "Math library unnecessarily overflows during some operations"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-13-natspec-is-incomplete",
        "vulnerability": "NatSpec is incomplete"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-12-compoundhandlertopup-using-the-wrong-function-selector-makes-native-token-topup-always-revert",
        "vulnerability": "`CompoundHandler#topUp()` Using the wrong function selector makes native token `topUp()` always revert"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-11-position-owner-should-set-allowed-slippage",
        "vulnerability": "Position owner should set allowed slippage"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-05-chainlinks-latestrounddata-might-return-stale-or-incorrect-results",
        "vulnerability": "Chainlink\u2019s `latestRoundData` might return stale or incorrect results"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-05-public-functions-not-called-by-the-contract-should-be-declared-external-instead",
        "vulnerability": "`public` functions not called by the contract should be declared `external` instead"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-04-front-runable-initializer",
        "vulnerability": "Front-runable initializer"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-06-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables",
        "vulnerability": "Missing checks for `address(0x0)` when assigning values to `address` state variables"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-10-inconsistent-spacing-in-comments",
        "vulnerability": "Inconsistent spacing in comments"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-11-unchecked-arithmetic",
        "vulnerability": "Unchecked arithmetic"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-05-custom-errors",
        "vulnerability": "Custom Errors"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-01-caching-storage-variables-in-memory-to-save-gas",
        "vulnerability": "Caching storage variables in memory to save gas"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-09-require-instead-of-&&",
        "vulnerability": "Require instead of &&"
    },
    {
        "name": "2022-04-backd",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-04-backd#h-01-user-can-steal-all-rewards-due-to-checkpoint-after-transfer",
        "vulnerability": "User can steal all rewards due to checkpoint after transfer"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-03-unused-receive-function-will-lock-ether-in-contract",
        "vulnerability": "Unused `receive()` function will lock Ether in contract"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-02-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-02-its-possible-to-lose-total-governance-control-by-mistake",
        "vulnerability": "Its possible to lose total governance control by mistake"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-10-griefer-can-extend-period-of-higher-withdrawal-fees",
        "vulnerability": "Griefer can extend period of higher withdrawal fees"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-08-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-03-comparisons-with-zero-for-unsigned-integers",
        "vulnerability": "Comparisons with zero for unsigned integers"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-09-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-08-addresscall{valuex}-should-be-used-instead-of-payabletransfer",
        "vulnerability": "`address.call{value:x}()` should be used instead of `payable.transfer()`"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-13-cethinterfacerepayborrowbehalf-reading-non-existing-returns-makes-repayanydebt-with-cether-always-revert",
        "vulnerability": "`CEthInterface#repayBorrowBehalf()` reading non-existing returns makes `_repayAnyDebt()` with CEther always revert"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-07-abiencodepacked-should-not-be-used-with-dynamic-types-when-passing-the-result-to-a-hash-function-such-as-keccak256",
        "vulnerability": "`abi.encodePacked()` should not be used with dynamic types when passing the result to a hash function such as `keccak256()`"
    },
    {
        "name": "2022-04-backd",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-04-backd#g-06-default-value-initialization",
        "vulnerability": "Default value initialization"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-02-aavehandler-does-not-extend-basehandler",
        "vulnerability": "`AaveHandler` does not extend `BaseHandler`"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-03-payable-function-does-not-reject-payments-to-erc20-tokens",
        "vulnerability": "`payable` function does not reject payments to ERC20 tokens"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-04-cvxcrvrewardslocker-implements-a-swap-without-a-slippage-check-that-can-result-in-a-loss-of-funds-through-mev",
        "vulnerability": "`CvxCrvRewardsLocker` implements a swap without a slippage check that can result in a loss of funds through MEV"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-01-the-first-withdrawal-for-each-vault-from-the-vault-reserve-has-no-delay",
        "vulnerability": "The first withdrawal for each vault from the vault reserve has no delay"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-15-malicious-stakers-can-grief-keepers",
        "vulnerability": "Malicious Stakers can grief Keepers"
    },
    {
        "name": "2022-04-backd",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-04-backd#l-05-safeapprove-is-deprecated",
        "vulnerability": "`safeApprove()` is deprecated"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-04-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-07-large-multiples-of-ten-should-use-scientific-notation-eg-1e6-rather-than-decimal-literals-eg-1000000--for-readability",
        "vulnerability": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability"
    },
    {
        "name": "2022-04-backd",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-04-backd#n-09-constant-redefined-elsewhere",
        "vulnerability": "Constant redefined elsewhere"
    },
    {
        "name": "2022-04-backd",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-04-backd#m-07-inconsistency-between-constructor-and-setting-method-for-slippagetolerance",
        "vulnerability": "Inconsistency between constructor and setting method for `slippageTolerance`"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-07-its-possible-to-follow-deleted-profiles",
        "vulnerability": "It\u2019s possible to follow deleted profiles"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-03-profile-creation-can-be-frontrun",
        "vulnerability": "Profile creation can be frontrun"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-10-zero-collection-module-can-be-whitelisted-and-set-to-a-post--which-will-then-revert-all-collects-and-mirrors-with-publicationdoesnotexist",
        "vulnerability": "Zero collection module can be whitelisted and set to a post, which will then revert all collects and mirrors with `PublicationDoesNotExist"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-13-reentrancy-allows-commenter-to-overwrite-own-comments",
        "vulnerability": "Reentrancy allows commenter to overwrite own comments"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-04-name-squatting",
        "vulnerability": "Name squatting"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-05-cashback-on-referral",
        "vulnerability": "Cashback on referral"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#l-01-approvalfollowmodulesol-lack-of-transfer-check-make-it-possible-for-anyone-to-become-follower-without-approved-by-the-profile-owner",
        "vulnerability": "`ApprovalFollowModule.sol` lack of transfer check make it possible for anyone to become follower without approved by the profile owner"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-08-missing-whennotpaused",
        "vulnerability": "Missing whenNotPaused"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-01-basis-points-constant-bpsmax-is-used-as-minimal-fee-amount-requirement",
        "vulnerability": "Basis points constant BPS_MAX is used as minimal fee amount requirement"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-06-imprecise-management-of-users-allowance-allows-the-admin-of-the-upgradeable-proxy-contract-to-rug-users",
        "vulnerability": "Imprecise management of users\u2019 allowance allows the admin of the upgradeable proxy contract to rug users"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-09-collect-modules-can-fail-on-zero-amount-transfers-if-treasury-fee-is-set-to-zero",
        "vulnerability": "Collect modules can fail on zero amount transfers if treasury fee is set to zero"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-11-approvals-not-cleared-when-transferring-profile",
        "vulnerability": "Approvals not cleared when transferring profile"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-12-ineffective-whitelist",
        "vulnerability": "Ineffective Whitelist"
    },
    {
        "name": "2022-02-aave-lens",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-aave-lens#m-02-inappropriate-handling-of-referralfee-makes-collecting-mirror-fails-without-error-when-referrerprofileid-is-burned",
        "vulnerability": "Inappropriate handling of `referralFee` makes collecting Mirror fails without error when `referrerProfileId` is burned"
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-02-use-constants-for-variables-whose-value-is-known-beforehand-and-is-never-changed",
        "vulnerability": "Use constants for variables whose value is known beforehand and is never changed"
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-04-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-04-pledges-that-contain-delisted-tokens-can-be-extended-to-continue-using-delisted-reward-tokens",
        "vulnerability": "Pledges that contain delisted tokens can be extended to continue using delisted reward tokens"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-02-owner-can-transfer-all-erc20-reward-token-out-using-function-recovererc20",
        "vulnerability": "Owner can transfer all ERC20 reward token out using function recoverERC20"
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-01-using-immutable-on-variables-that-are-only-set-in-the-constructor-and-never-after",
        "vulnerability": "Using immutable on variables that are only set in the constructor and never after"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-07-fees-charged-from-entire-theoretical-pledge-amount-instead-of-actual-pledge-amount",
        "vulnerability": "Fees charged from entire theoretical pledge amount instead of actual pledge amount"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-05-wardenpledge-accidentally-inherits-ownable-instead-of-owner-which-removes-an-important-safeguard-without-sponsor-knowledge",
        "vulnerability": "WardenPledge accidentally inherits Ownable instead of Owner which removes an important safeguard without sponsor knowledge"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-01-due-to-loss-of-precision--targetvotes-may-not-reach",
        "vulnerability": "Due to loss of precision, targetVotes may not reach"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-08-pausing-wardenpledge-contract--which-takes-effect-immediately--by-its-owner-can-unexpectedly-block-pledge-creator-from-calling-closepledge-or-retrievepledgerewards-function",
        "vulnerability": "Pausing `WardenPledge` contract, which takes effect immediately, by its owner can unexpectedly block pledge creator from calling `closePledge` or `retrievePledgeRewards` function"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-03-pledge-may-be-out-of-reward-due-to-the-decay-in-vecrv-balance-targetvotes-is-never-reached",
        "vulnerability": "Pledge may be out of reward due to the decay in veCRV balance. targetVotes is never reached."
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-06-using-unchecked-blocks-to-save-gas",
        "vulnerability": "Using unchecked blocks to save gas"
    },
    {
        "name": "2022-10-paladin",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-paladin#m-06-reward-can-be-over--or-undercounted-in-extendpledge-and-increasepledgerewardpervote",
        "vulnerability": "Reward can be over- or undercounted in `extendPledge` and `increasePledgeRewardPerVote`"
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-03-cache-storage-values-in-memory-to-minimize-sloads",
        "vulnerability": "Cache storage values in memory to minimize SLOADs"
    },
    {
        "name": "2022-10-paladin",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-paladin#g-05-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using storage instead of memory for structs/arrays saves gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-10-add-eip-2981-nft-royalty-standart-support",
        "vulnerability": "Add EIP-2981 NFT Royalty Standart Support"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-12-using-unchecked-blocks-to-save-gas",
        "vulnerability": "Using `unchecked` blocks to save gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-caviar#h-03-first-depositor-can-break-minting-of-shares",
        "vulnerability": "First depositor can break minting of shares"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-06-lock-pragmas-to-specific-compiler-version",
        "vulnerability": "_Lock pragmas_ to specific compiler version"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-03-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` Strings Longer Than 32 Bytes Cost Extra Gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-caviar#m-03-rounding-error-in-buyquote-might-result-in-free-tokens",
        "vulnerability": "Rounding error in `buyQuote` might result in free tokens"
    },
    {
        "name": "2022-12-caviar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-caviar#m-05-pair-price-may-be-manipulated-by-direct-transfers",
        "vulnerability": "Pair price may be manipulated by direct transfers"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-09-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-09-pragma-version0817-version-too-recent-to-be-trusted",
        "vulnerability": "Pragma version^0.8.17 version too recent to be trusted."
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-12-missing-event-for-critical-parameters-init-and-change",
        "vulnerability": "Missing Event for critical parameters init and change"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-01-insufficient-coverage",
        "vulnerability": "Insufficient coverage"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-01-<x>-+=-<y>-costs-more-gas-than-<x>-=-<x>-+-<y>-for-state-variables",
        "vulnerability": "`<x> += <y>` Costs More Gas Than `<x> = <x> + <y>` For State Variables"
    },
    {
        "name": "2022-12-caviar",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-caviar#h-02-liquidity-providers-may-lose-funds-when-adding-liquidity",
        "vulnerability": "Liquidity providers may lose funds when adding liquidity"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-11-showing-the-actual-values-of-numbers-in-natspec-comments-makes-checking-and-reading-code-easier",
        "vulnerability": "Showing the actual values of numbers in NatSpec comments makes checking and reading code easier"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-11-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-04-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-caviar#m-01-missing-deadline-checks-allow-pending-transactions-to-be-maliciously-executed",
        "vulnerability": "Missing deadline checks allow pending transactions to be maliciously executed"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-05-for-modern-and-more-readable-code;-update-import-usages",
        "vulnerability": "For modern and more readable code; update import usages"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-06-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-07-use-underscores-for-number-literals",
        "vulnerability": "Use underscores for number literals"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-04-solidity-compiler-optimizations-can-be-problematic",
        "vulnerability": "Solidity compiler optimizations can be problematic"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-07-using-fixed-bytes-is-cheaper-than-using-string",
        "vulnerability": "Using fixed bytes is cheaper than using `string`"
    },
    {
        "name": "2022-12-caviar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-caviar#m-02-price-will-not-always-be-18-decimals--as-expected-and-outlined-in-the-comments",
        "vulnerability": "Price will not always be 18 decimals, as expected and outlined in the comments"
    },
    {
        "name": "2022-12-caviar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-caviar#l-05-should-an-airdrop-token-arrive-on-the-pairsol-contract--it-will-be-stuck",
        "vulnerability": "Should an airdrop token arrive on the `pair.sol` contract, it will be stuck"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-03-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "`Function writing` that does not comply with the `Solidity Style Guide`"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-08-use-of-bytesconcat-instead-of-abiencodepacked",
        "vulnerability": "Use of `bytes.concat()` instead of `abi.encodePacked()`"
    },
    {
        "name": "2022-12-caviar",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-caviar#m-04-its-possible-to-swap-nft-token-ids-without-fee-and-also-attacker-can-wrap-unwrap-all-the-nft-token-balance-of-the-pair-contract-and-steal-their-air-drops-for-those-token-ids",
        "vulnerability": "It\u2019s possible to swap NFT token ids without fee and also attacker can wrap unwrap all the NFT token balance of the Pair contract and steal their air drops for those token ids"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-02-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for--and-while-loops",
        "vulnerability": "`++i`/`i++` Should Be `unchecked{++i}`/`unchecked{i++}` When It Is Not Possible For Them To Overflow, As Is The Case When Used In For- And While-loops"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-13-add-to-blacklist-function",
        "vulnerability": "Add to _blacklist function_"
    },
    {
        "name": "2022-12-caviar",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-12-caviar#n-02-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2022-12-caviar",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-caviar#h-01-reentrancy-in-buy-function-for-erc777-tokens-allows-buying-funds-with-considerable-discount",
        "vulnerability": "Reentrancy in buy function for ERC777 tokens allows buying funds with considerable discount"
    },
    {
        "name": "2022-12-caviar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-caviar#l-03-loss-of-precision-due-to-rounding",
        "vulnerability": "Loss of precision due to rounding"
    },
    {
        "name": "2022-12-caviar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-caviar#l-01-missing-reentrancy-guard-to-withdraw-function",
        "vulnerability": "Missing ReEntrancy Guard to `withdraw` function"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-08-superfluous-event-fields",
        "vulnerability": "Superfluous event fields"
    },
    {
        "name": "2022-12-caviar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-caviar#l-02-use-safetransferownership-instead-of-transferownership-function",
        "vulnerability": "Use `safeTransferOwnership` instead of `transferOwnership` function"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-10-setting-the-constructor-to-payable",
        "vulnerability": "Setting the `constructor` to `payable`"
    },
    {
        "name": "2022-12-caviar",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-12-caviar#l-04-solmates-safetransferlib-doesnt-check-whether-the-erc20-contract-exists",
        "vulnerability": "Solmate\u2019s `SafeTransferLib` doesn\u2019t check whether the ERC20 contract exists"
    },
    {
        "name": "2022-12-caviar",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-12-caviar#g-05-public-functions-to-external",
        "vulnerability": "Public Functions To External"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-08-check-zero-denominator",
        "vulnerability": "Check zero denominator"
    },
    {
        "name": "2022-09-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-09-canto#l-01-large-number-of-observations-may-cause-out-of-gas-error",
        "vulnerability": "Large number of observations may cause out-of-gas error"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-09-missing-check-for-input-variables",
        "vulnerability": "Missing check for input variables"
    },
    {
        "name": "2022-09-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-09-canto#l-03-misleading-comment",
        "vulnerability": "Misleading comment"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-03-constants-may-be-used",
        "vulnerability": "Constants may be used"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-02-maximum-line-length-exceeded",
        "vulnerability": "Maximum line length exceeded"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-03-hackers-can-deploy-token-with-respective-name-as-the-stable-one-to-impersonate-the-stable-token",
        "vulnerability": "Hackers can deploy token with respective name as the stable one to impersonate the stable token"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-06-system-is-vulnerable-to-downtime-and-has-no-checks-for-it",
        "vulnerability": "System is Vulnerable to Downtime and has no Checks for it"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-05-getunderlyingprice-should-return-0-when-errored",
        "vulnerability": "`getUnderlyingPrice()` should return `0` when errored"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-04-inconsistent-comment-spacing-and-location",
        "vulnerability": "Inconsistent comment spacing and location"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-02-calculated-token0tvl-may-be-zero-under-certain-scenarios",
        "vulnerability": "Calculated `token0TVL` may be zero under certain scenarios"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-05-loop-parameter-may-be-changed-for-clarity",
        "vulnerability": "Loop parameter may be changed for clarity"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-01-order-of-functions",
        "vulnerability": "Order of Functions"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-01-unbounded-loop-length-dos",
        "vulnerability": "unbounded loop length dos"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-07-require-statement-may-be-placed-before-allocating-memory-for-arrays",
        "vulnerability": "Require statement may be placed before allocating memory for arrays"
    },
    {
        "name": "2022-09-canto",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-09-canto#n-06-functions-without-comments",
        "vulnerability": "Functions without comments"
    },
    {
        "name": "2022-09-canto",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-09-canto#l-02-incorrect-comment",
        "vulnerability": "Incorrect comment"
    },
    {
        "name": "2022-09-canto",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-canto#m-04-period-size-not-updated-on-creating-new-pair",
        "vulnerability": "Period Size not updated on creating new Pair"
    },
    {
        "name": "2022-09-canto",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-canto#h-01-hardcoded-usd-pegs-can-be-broken",
        "vulnerability": "Hardcoded USD pegs can be broken"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-19-minipoolmanager-recordstakingerror-function-does-not-decrease-minipoolcount-leading-to-too-high-ggp-rewards-for-staker",
        "vulnerability": "MinipoolManager: `recordStakingError` function does not decrease `minipoolCount` leading to too high GGP rewards for staker"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-06-inflation-rate-can-be-reduced-by-half-at-most-if-it-gets-called-every-199-interval",
        "vulnerability": "Inflation rate can be reduced by half at most if it gets called every 1.99 interval"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-13-slashing-fails-when-node-operator-doesnt-have-enough-staked-ggp",
        "vulnerability": "Slashing fails when node operator doesn\u2019t have enough staked `GGP`"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-01-rewardspoolsol--it-is-safe-to-have-the-startrewardscycle-with-whennotpaused-modifier",
        "vulnerability": "`RewardsPool.sol` : It is safe to have the `startRewardsCycle` with `WhenNotPaused` modifier"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-03-node-operator-is-getting-slashed-for-full-duration-even-though-rewards-are-distributed-based-on-a-14-day-cycle",
        "vulnerability": "Node operator is getting slashed for full duration even though rewards are distributed based on a 14 day cycle"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-17-nodeop-can-get-rewards-even-if-there-was-an-error-in-registering-the-node-as-a-validator",
        "vulnerability": "NodeOp can get rewards even if there was an error in registering the node as a validator"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-03-nodeop-funds-may-be-trapped-by-a-invalid-state-transition",
        "vulnerability": "NodeOp funds may be trapped by a invalid state transition"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-05-inflation-of-ggavax-share-price-by-first-depositor",
        "vulnerability": "Inflation of ggAVAX share price by first depositor"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-07-rialto-may-not-be-able-to-cancel-minipools-created-by-contracts-that-cannot-receive-avax",
        "vulnerability": "Rialto may not be able to cancel minipools created by contracts that cannot receive AVAX"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-21-division-by-zero-error-can-block-rewardspoolstartrewardcycle-if-all-multisig-wallet-are-disabled",
        "vulnerability": "Division by zero error can block `RewardsPool#startRewardCycle` if all multisig wallet are disabled"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-06-minipoolmanager-node-operator-can-avoid-being-slashed",
        "vulnerability": "MinipoolManager: node operator can avoid being slashed"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-14-any-duration-can-be-passed-by-node-operator",
        "vulnerability": "Any duration can be passed by node operator"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-16-maxwithdraw-and-maxredeem-doesnt-return-correct-value-which-can-make-other-contracts-fail-while-working-with-protocol",
        "vulnerability": "`maxWithdraw()` and `maxRedeem()` doesn\u2019t return correct value which can make other contracts fail while working with protocol"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-02-protocoldao-lacks-a-method-to-take-out-ggp",
        "vulnerability": "ProtocolDAO lacks a method to take out GGP"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-11-multisigmanager-may-not-be-able-to-add-a-valid-multisig",
        "vulnerability": "MultisigManager may not be able to add a valid Multisig"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-08-recreated-pools-receive-a-wrong-avax-amount-due-to-miscalculated-compounded-liquid-staker-amount",
        "vulnerability": "Recreated pools receive a wrong AVAX amount due to miscalculated compounded liquid staker amount"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-09-state-transition-minipools-can-be-created-using-other-operators-avax-deposit-via-recreateminipool",
        "vulnerability": "State Transition: Minipools can be created using other operator\u2019s AVAX deposit via recreateMinipool"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-10-functions-cancelminipool-doesnt-reset-the-value-of-the-rewardsstarttime-for-user-when-users-minipoolcount-is-zero",
        "vulnerability": "Functions `cancelMinipool()` doesn\u2019t reset the value of the `RewardsStartTime` for user when user\u2019s `minipoolcount` is zero"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-01-avax-assigned-high-water-is-updated-incorrectly",
        "vulnerability": "AVAX Assigned High Water is updated incorrectly"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-22-inaccurate-estimation-of-validation-rewards-from-function-expectedrewardava-in-minipoolmanagersol",
        "vulnerability": "Inaccurate estimation of validation rewards from function `ExpectedRewardAVA` in `MiniPoolManager.sol`"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-12-gogopool#h-04-hijacking-of-node-operators-minipool-causes-loss-of-staked-funds",
        "vulnerability": "Hijacking of node operators minipool causes loss of staked funds"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-12-cancellation-of-minipool-may-skip-minipoolcancelmoratoriumseconds-checking-if-it-was-cancelled-before",
        "vulnerability": "Cancellation of minipool may skip `MinipoolCancelMoratoriumSeconds` checking if it was cancelled before"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-02-coding-logic-of-the-contract-upgrading-renders-upgrading-contracts-impractical",
        "vulnerability": "Coding logic of the contract upgrading renders upgrading contracts impractical"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-05-bypass-whennotpaused-modifier",
        "vulnerability": "Bypass `whenNotPaused` modifier"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-15-wrong-reward-distribution-between-early-and-late-depositors-because-of-the-late-syncrewards-call-in-the-cycle--syncreward-logic-should-be-executed-in-each-withdraw-or-deposits-without-reverting",
        "vulnerability": "Wrong reward distribution between early and late depositors because of the late `syncRewards()` call in the cycle, `syncReward()` logic should be executed in each withdraw or deposits (without reverting)"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-20-tokenggavax-maxdeposit-and-maxmint-return-wrong-value-when-contract-is-paused",
        "vulnerability": "TokenggAVAX: maxDeposit and maxMint return wrong value when contract is paused"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-04-requirenextactivemultisig-will-always-return-the-first-enabled-multisig-which-increases-the-probability-of-stuck-minipools",
        "vulnerability": "`requireNextActiveMultisig` will always return the first enabled multisig which increases the probability of stuck minipools"
    },
    {
        "name": "2022-12-gogopool",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-12-gogopool#m-18-users-may-not-be-able-to-redeem-their-shares-due-to-underflow",
        "vulnerability": "Users may not be able to redeem their shares due to underflow"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-08-constructor-parameters-should-be-avoided-when-possible",
        "vulnerability": "Constructor parameters should be avoided when possible"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-09-vaulttracker-has-the-wrong-admin",
        "vulnerability": "VaultTracker has the wrong admin"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-07-constants-can-be-private",
        "vulnerability": "Constants can be private"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-09-event-fields-are-redundant",
        "vulnerability": "Event fields are redundant"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-05-function-order",
        "vulnerability": "Function order"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-04-caching-mapping-accesses-in-local-variables-to-save-gas",
        "vulnerability": "Caching mapping accesses in local variables to save gas"
    },
    {
        "name": "2022-07-swivel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-swivel#l-02-immutable-addresses-lack-zero-address-check",
        "vulnerability": "Immutable addresses lack zero-address check"
    },
    {
        "name": "2022-07-swivel",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-07-swivel#h-01-mismatch-in-withdraw-between-yearn-and-other-protocols-can-prevent-users-from-redeeming-zctokens-and-permanently-lock-funds",
        "vulnerability": "Mismatch in `withdraw()` between Yearn and other protocols can prevent Users from redeeming zcTokens and permanently lock funds"
    },
    {
        "name": "2022-07-swivel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-swivel#l-01-contracts-should-inherit-their-interfaces",
        "vulnerability": "Contracts should inherit their interfaces"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-05-should-use->=-instead-of->",
        "vulnerability": "Should use >= instead of >"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-07-erc20-incorrect-check-on-returnedaddress-in-permit-results-in-unlimited-approval-of-zero-address",
        "vulnerability": "ERC20 Incorrect check on returnedAddress in permit() results in unlimited approval of zero address"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-12-tautological-code",
        "vulnerability": "Tautological code"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-11-immutable-variables-save-storage",
        "vulnerability": "Immutable variables save storage"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-17-use-assembly-for-simple-setters",
        "vulnerability": "use Assembly for simple setters"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-10-functions-with-access-control-cheaper-if-payable",
        "vulnerability": "Functions with access control cheaper if payable"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-12-interface-definition-error",
        "vulnerability": "Interface definition error"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-15-unnecessary-computation",
        "vulnerability": "Unnecessary computation"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-02-bytes-constant-are-cheaper-than-string-constants",
        "vulnerability": "Bytes constant are cheaper than string constants"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-02-constants-instead-of-magic-numbers",
        "vulnerability": "Constants instead of magic numbers"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-05-calldata-instead-of-memory-for-ro-function-parameters",
        "vulnerability": "Calldata instead of memory for RO function parameters"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-03-events-indexing",
        "vulnerability": "Events indexing"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-01-address-mappings-can-be-combined-in-a-single-mapping",
        "vulnerability": "Address mappings can be combined in a single mapping"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-06-clones-for-cheap-contract-deployment",
        "vulnerability": "Clones for cheap contract deployment"
    },
    {
        "name": "2022-07-swivel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-swivel#l-03-safesol-does-not-check-contract-existence",
        "vulnerability": "Safe.sol does not check contract existence"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-12-prefix-increments",
        "vulnerability": "Prefix increments"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-10-unpausedp-modifier-missing-in-authredeem-function",
        "vulnerability": "unpaused(p) modifier missing in authRedeem function"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-06-yearn-vault-integration-is-broken",
        "vulnerability": "Yearn vault integration is broken"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-04-vaulttracker-miscalculates-compounding-interest",
        "vulnerability": "VaultTracker miscalculates compounding interest"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-09-non-library-files-should-use-the-same-compiler-version",
        "vulnerability": "Non-library files should use the same compiler version"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-07-natspec",
        "vulnerability": "Natspec"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-18-writing-zero-wastes-gas",
        "vulnerability": "Writing zero wastes gas"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-16-upgrade-solidity-compiler-version",
        "vulnerability": "Upgrade Solidity compiler version"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-08-zctokenwithdraw-will-send-user-0-tokens-if-called-after-maturity-deadline-but-before-market-is-set-mature",
        "vulnerability": "ZcToken.withdraw will send user 0 tokens if called after maturity deadline but before market is set mature"
    },
    {
        "name": "2022-07-swivel",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-07-swivel#l-04-setters-should-check-the-input-value",
        "vulnerability": "Setters should check the input value"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-11-public-functions-can-be-external",
        "vulnerability": "Public functions can be external"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-04-event-should-be-emitted-in-setters",
        "vulnerability": "Event should be emitted in setters"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-06-long-lines",
        "vulnerability": "Long lines"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-01-with-most-functions-in-vaulttrackersol--users-can-call-them-only-once-after-maturity-has-been-reached",
        "vulnerability": "With most functions in VaultTracker.sol, users can call them only once after maturity has been reached."
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-03-error-in-allowance-logic",
        "vulnerability": "Error in allowance logic"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-02-swivelsetfee-is-implemented-wrongly",
        "vulnerability": "Swivel.setFee() is implemented wrongly."
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-10-open-todos",
        "vulnerability": "Open TODOs"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-03-caching-storage-variables-in-local-variables-to-save-gas",
        "vulnerability": "Caching storage variables in local variables to save gas"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-01-2**256---1-can-be-re-written",
        "vulnerability": "`2**256 - 1` can be re-written"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-14-unchecked-arithmetic",
        "vulnerability": "Unchecked arithmetic"
    },
    {
        "name": "2022-07-swivel",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-07-swivel#g-13-storage-cheaper-than-memory",
        "vulnerability": "Storage cheaper than memory"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-08-non-library-files-should-use-fixed-compiler-versions",
        "vulnerability": "Non-library files should use fixed compiler versions"
    },
    {
        "name": "2022-07-swivel",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-07-swivel#n-13-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-07-swivel",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-07-swivel#m-11-loss-of-funds-in-an-underlying-protocol-would-cause-catostrophic-loss-of-funds-for-swivel",
        "vulnerability": "Loss of funds in an underlying protocol would cause catostrophic loss of funds for swivel"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-14-use-a-2-step-ownership-transfer-pattern",
        "vulnerability": "Use a 2-step ownership transfer pattern"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-15-a-magic-number-should-be-documented-and-explained-use-a-constant-instead",
        "vulnerability": "A magic number should be documented and explained. Use a `constant` instead"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-10-upgradeable-contract-is-missing-a-gap[50]-storage-variable-to-allow-for-new-storage-variables-in-later-versions",
        "vulnerability": "Upgradeable contract is missing a `__gap[50]` storage variable to allow for new storage variables in later versions"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-14-single-error-within-sponsorvault-contract-could-cause-entire-cross-chain-communication-to-break-down",
        "vulnerability": "Single Error Within `SponsorVault` Contract Could Cause Entire Cross-Chain Communication To Break Down"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-31-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-07-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache",
        "vulnerability": "Multiple accesses of a mapping/array should use a local variable cache"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-12-use-the-same-revert-string-for-consistency-when-testing-the-same-condition",
        "vulnerability": "Use the same revert string for consistency when testing the same condition"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-05-did-not-approve-to-zero-first-causing-certain-token-transfer-to-fail",
        "vulnerability": "Did Not Approve To Zero First Causing Certain Token Transfer To Fail"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-20-in-reimburseliquidityfees-of-sponservault-contract-swaps-tokens-without-slippage-limit-so-its-possible-to-perform-sandwich-attack-and-it-create-mev",
        "vulnerability": "In `reimburseLiquidityFees()` of `SponserVault` contract swaps tokens without slippage limit so its possible to perform sandwich attack and it create MEV"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-20-++i-costs-less-gas-than-i++--especially-when-its-used-in-for-loops---ii---too",
        "vulnerability": "`++i` costs less gas than `i++`, especially when it\u2019s used in `for`-loops (`--i`/`i--` too)"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-04-libdiamonddiamondcut-should-check-diamondstorageacceptancetimes[keccak256abiencodediamondcut]-!=-0",
        "vulnerability": "`LibDiamond.diamondCut()` should check `diamondStorage().acceptanceTimes[keccak256(abi.encode(_diamondCut))] != 0`"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-14-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-02-state-variables-only-set-in-the-constructor-should-be-declared-immutable",
        "vulnerability": "State variables only set in the constructor should be declared `immutable`"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-06-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-05-deprecated-safeapprove-function",
        "vulnerability": "Deprecated safeApprove() function"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-07-misleading-comment",
        "vulnerability": "Misleading comment"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-12-incorrect-adopted-mapping-on-updating-wrapper-token",
        "vulnerability": "Incorrect Adopted mapping on updating wrapper token"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-02-wrong-implementation-of-withdrawadminfees-can-cause-the-adminfees-to-be-charged-multiple-times-and-therefore-cause-users-fund-loss",
        "vulnerability": "Wrong implementation of `withdrawAdminFees()` can cause the `adminFees` to be charged multiple times and therefore cause users\u2019 fund loss"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-16-lack-of-event-emission-for-operation-changing-the-state",
        "vulnerability": "Lack of event emission for operation changing the state"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-03-structs-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "Structs can be packed into fewer storage slots"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-04-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas",
        "vulnerability": "Using `calldata` instead of `memory` for read-only arguments in `external` functions saves gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-01-portcalfacetrepayaaveportal-can-trigger-an-underflow-of-routerbalances",
        "vulnerability": "`PortcalFacet.repayAavePortal()` can trigger an underflow of `routerBalances`"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-16-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-29-superfluous-event-fields",
        "vulnerability": "Superfluous event fields"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-19-internal-functions-not-called-by-the-contract-should-be-removed-to-save-deployment-gas",
        "vulnerability": "`internal` functions not called by the contract should be removed to save deployment gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-09-abiencodepacked-should-not-be-used-with-dynamic-types-when-passing-the-result-to-a-hash-function-such-as-keccak256",
        "vulnerability": "`abi.encodePacked()` should not be used with dynamic types when passing the result to a hash function such as `keccak256()`"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-02-add-constructor-initializers",
        "vulnerability": "Add constructor initializers"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-10-<array>length-should-not-be-looked-up-in-every-loop-of-a-for-loop",
        "vulnerability": "`<array>.length` should not be looked up in every loop of a `for`-loop"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-04-uninitialized-upgradeable-contract",
        "vulnerability": "Uninitialized Upgradeable contract"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-03-unsafe-casting-may-overflow",
        "vulnerability": "Unsafe casting may overflow"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-05-routers-are-not-enforced-to-repay-aave-portal-loan",
        "vulnerability": "Routers are not Enforced to Repay AAVE Portal Loan"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-28-empty-blocks-should-be-removed-or-emit-something",
        "vulnerability": "Empty blocks should be removed or emit something"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-08-add-a-timelock-to-critical-functions",
        "vulnerability": "Add a timelock to critical functions"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-22-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead",
        "vulnerability": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-11-++ii++-should-be-unchecked{++i}unchecked{i++}-when-it-is-not-possible-for-them-to-overflow--as-is-the-case-when-used-in-for\\--and-while-loops",
        "vulnerability": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`\\- and `while`-loops"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-04-in-execute-the-amount-routers-pay-is-what-user-signed--but-in-reconcile-the-amount-routers-get-is-what-nomad-sends-and-these-two-amounts-are-not-necessary-equal-because-of-slippage-in-original-domain",
        "vulnerability": "In `execute()` the amount routers pay is what user signed, but in `_reconcile()` the amount routers get is what nomad sends and these two amounts are not necessary equal because of slippage in original domain"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-05-using-storage-instead-of-memory-for-structsarrays-saves-gas",
        "vulnerability": "Using `storage` instead of `memory` for structs/arrays saves gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-01-relayer-will-not-receive-any-fee-if-execute-reverts",
        "vulnerability": "Relayer Will Not Receive Any Fee If `execute` Reverts"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-24-dont-use-safemath-once-the-solidity-version-is-080-or-greater",
        "vulnerability": "Don\u2019t use `SafeMath` once the solidity version is 0.8.0 or greater"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-04-deprecated-library-used-for-solidity->=-08--safemath",
        "vulnerability": "Deprecated library used for Solidity `>= 0.8` : SafeMath"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-01-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct--where-appropriate",
        "vulnerability": "Multiple `address` mappings can be combined into a single `mapping` of an `address` to a `struct`, where appropriate"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-10-router-owner-could-be-rugged-by-admin",
        "vulnerability": "Router Owner Could Be Rugged By Admin"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-21-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-09-add-unchecked-{}-for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require-or-if-statement",
        "vulnerability": "Add `unchecked {}` for subtractions where the operands cannot underflow because of a previous `require()` or `if`-statement"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-09-malicious-relayers-could-favor-their-routers",
        "vulnerability": "Malicious Relayers Could Favor Their Routers"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-08-non-libraryinterface-files-should-use-fixed-compiler-versions--not-floating-ones",
        "vulnerability": "Non-library/interface files should use fixed compiler versions, not floating ones"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-30-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-19-attacker-can-perform-griefing-for-process-in-promiserouter-by-reverting-calls-to-callback-in-callbackaddress",
        "vulnerability": "Attacker can perform griefing for `process()` in `PromiseRouter` by reverting calls to `callback()` in `callbackAddress`"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-09-missing-natspec",
        "vulnerability": "Missing NatSpec"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-18-repaying-aave-loan-in-local-rather-than-adopted-asset",
        "vulnerability": "Repaying AAVE Loan in `_local` rather than `adopted` asset"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-06-adding-a-return-statement-when-the-function-defines-a-named-return-variable--is-redundant",
        "vulnerability": "Adding a `return` statement when the function defines a named return variable, is redundant"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-15-bridgefacets-executeportaltransfer-ignores-underlying-token-amount-withdrawn-from-aave-pool",
        "vulnerability": "BridgeFacet\u2019s `_executePortalTransfer` ignores underlying token amount withdrawn from Aave pool"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-25-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function",
        "vulnerability": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-06-handleexecutetransaction-may-not-working-correctly-on-fee-on-transfer-tokens-moreover--if-it-is-failed--fund-may-be-locked-forever",
        "vulnerability": "_`handleExecuteTransaction` may not working correctly on fee-on-transfer tokens. Moreover, if it is failed, fund may be locked forever."
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-12-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-08-malicious-relayer-could-cause-a-router-to-provide-more-liquidity-than-it-should",
        "vulnerability": "Malicious Relayer Could Cause A Router To Provide More Liquidity Than It Should"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-07-current-implementation-of-arbitrary-call-execute-failure-handler-may-break-some-use-case-for-example-nft-bridge",
        "vulnerability": "Current implementation of arbitrary call execute failure handler may break some use case for example NFT bridge."
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-27-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-03-router-owner-could-steal-all-the-funds-within-sponsorvault",
        "vulnerability": "Router Owner Could Steal All The Funds Within `SponsorVault`"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-13-use-a-constant-instead-of-duplicating-the-same-string",
        "vulnerability": "Use a `constant` instead of duplicating the same string"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-11-all-initialize-functions-are-front-runnable-in-the-solution",
        "vulnerability": "All `initialize()` functions are front-runnable in the solution"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-13-missing-whennotpaused-modifier",
        "vulnerability": "Missing `whenNotPaused` modifier"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-01-al--fee-and-adminfee-cannot-be-set-the-their-maximum-value",
        "vulnerability": "`al`, `fee` and `adminFee` cannot be set the their maximum value"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-05-open-todos",
        "vulnerability": "Open TODOS"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-01-its-better-to-emit-after-all-processing-is-done",
        "vulnerability": "It\u2019s better to emit after all processing is done"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-02-the-nonreentrant-modifier-should-occur-before-all-other-modifiers",
        "vulnerability": "The `nonReentrant` `modifier` should occur before all other modifiers"
    },
    {
        "name": "2022-06-connext",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-06-connext#h-06-malicious-relayer-can-replay-execute-calldata-on-different-chains-causing-double-spend-issue",
        "vulnerability": "Malicious Relayer can Replay Execute Calldata on Different Chains Causing Double-Spend Issue"
    },
    {
        "name": "2022-06-connext",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-06-connext#l-06-missing-address0-checks",
        "vulnerability": "Missing address(0) checks"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-15-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-16-division-rounding-error-in-handleexecuteliquidity-and-reconcile-make-routerbalances-and-contract-fund-balance-to-get-out-of-sync-and-cause-fund-lose",
        "vulnerability": "division rounding error in `_handleExecuteLiquidity()` and `_reconcile()` make `routerBalances` and contract fund balance to get out of sync and cause fund lose"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-26-multiple-if-statements-with-mutually-exclusive-conditions-should-be-changed-to-if-else-statements",
        "vulnerability": "Multiple `if`-statements with mutually-exclusive conditions should be changed to `if`-`else` statements"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-03-malicious-relayer-could-exploit-sponsor-vaults",
        "vulnerability": "Malicious relayer could exploit sponsor vaults"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-23-using-private-rather-than-public-for-constants--saves-gas",
        "vulnerability": "Using `private` rather than `public` for constants, saves gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-11-tokens-with-decimals-larger-than-18-are-not-supported",
        "vulnerability": "Tokens with `decimals` larger than `18` are not supported"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-18-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied",
        "vulnerability": "It costs more gas to initialize non-`constant`/non-`immutable` variables to zero than to let the default of zero be applied"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-07-the-pragmas-used-are-not-the-same-everywhere",
        "vulnerability": "The pragmas used are not the same everywhere"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-02-diamond-upgrade-proposition-can-be-falsified",
        "vulnerability": "Diamond upgrade proposition can be falsified"
    },
    {
        "name": "2022-06-connext",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-06-connext#m-17-swaps-done-internally-will-be-not-be-possible",
        "vulnerability": "Swaps done internally will be not be possible"
    },
    {
        "name": "2022-06-connext",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-06-connext#n-03-typos",
        "vulnerability": "Typos"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-13-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-17->=-costs-less-gas-than->",
        "vulnerability": "`>=` costs less gas than `>`"
    },
    {
        "name": "2022-06-connext",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-06-connext#g-08-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-03-possible-dos-on-vestingrecipients-due-to-lack-of-disposal-mechanism",
        "vulnerability": "Possible DoS on `vestingRecipients` due to lack of disposal mechanism"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-04-not-able-to-create-claim",
        "vulnerability": "not able to create claim"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-02-basevestedamount-and-vestedamount-return-incorrect-historical-values",
        "vulnerability": "`_baseVestedAmount()` and `vestedAmount()` Return Incorrect Historical Values"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-09-releaseintervalsecs-is-not-validated",
        "vulnerability": "`_releaseIntervalSecs` is not validated"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-07-vesting-schedule-start-and-end-time-can-be-set-in-the-past",
        "vulnerability": "Vesting Schedule Start and End Time can be Set in the Past"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-01-supply-cap-of-variablesupplyerc20token-is-not-properly-enforced",
        "vulnerability": "Supply cap of `VariableSupplyERC20Token` is not properly enforced"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-06-variable-balance-token-causing-fund-lock-and-loss",
        "vulnerability": "Variable balance token causing fund lock and loss"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-vtvl#h-02-permanent-freeze-of-vested-tokens-due-to-overflow-in-basevestedamount",
        "vulnerability": "Permanent freeze of vested tokens due to overflow in `_baseVestedAmount`"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-08-two-address-tokens-can-be-withdrawn-by-the-admin-even-if-they-are-vested",
        "vulnerability": "Two address tokens can be withdrawn by the admin even if they are vested"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-10-reentrancy-may-allow-an-admin-to-steal-funds",
        "vulnerability": "Reentrancy may allow an admin to steal funds"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-09-vtvl#h-01-loss-of-vested-amounts",
        "vulnerability": "Loss of vested amounts"
    },
    {
        "name": "2022-09-vtvl",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-09-vtvl#m-05-tokens-with-lower-number-of-decimals-can-result-in-postponed-linear-vesting-for-user",
        "vulnerability": "Tokens with lower number of decimals can result in postponed linear vesting for user"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-07-changing-enginenft-contract-breaks-vaults",
        "vulnerability": "Changing engine.nft contract breaks vaults"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-12-anyone-can-create-a-vault-by-directly-calling-the-factory",
        "vulnerability": "anyone can create a vault by directly calling the factory"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-04-registerasset-can-overwrite-assetclass-value",
        "vulnerability": "`registerAsset()` can `overwrite _assetClass` value"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-15-mochitreasuryv0sol-is-unusable-in-its-current-state",
        "vulnerability": "`MochiTreasuryV0.sol` Is Unusable In Its Current State"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-03-a-malicious-user-can-potentially-escape-liquidation-by-creating-a-dust-amount-position-and-trigger-the-liquidation-by-themself",
        "vulnerability": "A malicious user can potentially escape liquidation by creating a dust amount position and trigger the liquidation by themself"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-13-improper-validation-of-create2-return-value",
        "vulnerability": "Improper Validation Of `create2` Return Value"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-02-regerralfeepool-is-vulnerable-to-mev-searcher",
        "vulnerability": "`regerralFeePool` is vulnerable to MEV searcher"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-05-chainlinks-latestrounddata-might-return-stale-or-incorrect-results",
        "vulnerability": "Chainlink\u2019s `latestRoundData` might return stale or incorrect results"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-06-debt-accrual-is-path-dependant-and-inaccurate",
        "vulnerability": "Debt accrual is path-dependant and inaccurate"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-14-mochitreasuryv0withdrawlock-is-callable-when-locking-has-been-toggled",
        "vulnerability": "`MochiTreasuryV0.withdrawLock()` Is Callable When Locking Has Been Toggled"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-12-feepool-is-vulnerable-to-sandwich-attack",
        "vulnerability": "feePool is vulnerable to sandwich attack."
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-01-vault-fails-to-track-debt-correctly-that-leads-to-bad-debt",
        "vulnerability": "Vault fails to track debt correctly that leads to bad debt"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-04-unchecked-erc20-transfer-calls",
        "vulnerability": "Unchecked ERC20 transfer calls"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-10-griefing-attack-to-block-withdraws",
        "vulnerability": "griefing attack to block withdraws"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-13-tokens-can-be-stolen-by-frontrunning-vestedrewardpoolvest-and-vestedrewardpoollock",
        "vulnerability": "Tokens Can Be Stolen By Frontrunning `VestedRewardPool.vest()` and `VestedRewardPool.lock()`"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-08-uniswapv2sushiwaplpadapter-update-the-wrong-token",
        "vulnerability": "`UniswapV2/SushiwapLPAdapter` update the wrong token"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-06-referrer-can-drain-referralfeepoolv0",
        "vulnerability": "Referrer can drain `ReferralFeePoolV0`"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-09-treasury-is-vulnerable-to-sandwich-attack",
        "vulnerability": "treasury is vulnerable to sandwich attack"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-11-treasuryshare-is-overwritten-in-feepoolv0sharemochi",
        "vulnerability": "`treasuryShare` is Overwritten in `FeePoolV0._shareMochi()`"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-09-uniswapv2tokenadapter-does-not-support-sushiswap-only-assets",
        "vulnerability": "`UniswapV2TokenAdapter` does not support Sushiswap-only assets"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-07-liquidation-will-never-work-with-non-zero-discounts",
        "vulnerability": "Liquidation will never work with non-zero discounts"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-02-feepoolv0soldistributemochi-will-unexpectedly-flush-treasuryshare--causing-the-protocol-fee-cannot-be-properly-accounted-for-and-collected",
        "vulnerability": "`FeePoolV0.sol#distributeMochi()` will unexpectedly flush `treasuryShare`, causing the protocol fee cannot be properly accounted for and collected"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-11-borrow-function-will-borrow-max-cf-when-trying-to-borrow->-cf",
        "vulnerability": "borrow function will borrow max cf when trying to borrow > cf"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-08-anyone-can-extend-withdraw-wait-period-by-depositing-zero-collateral",
        "vulnerability": "Anyone can extend withdraw wait period by depositing zero collateral"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-05-debts-calculation-is-not-accurate",
        "vulnerability": "`debts` calculation is not accurate"
    },
    {
        "name": "2021-10-mochi",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-mochi#m-01-liquidation-factor-<-collateral-factor-for-sigma-type",
        "vulnerability": "liquidation factor < collateral factor for Sigma type"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-10-changing-nft-contract-in-the-mochiengine-would-break-the-protocol",
        "vulnerability": "Changing NFT contract in the `MochiEngine` would break the protocol"
    },
    {
        "name": "2021-10-mochi",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-mochi#h-03-referralfeepoolv0solclaimrewardasmochi-array-out-of-bound-exception",
        "vulnerability": "`ReferralFeePoolV0.sol#claimRewardAsMochi()` Array out of bound exception"
    },
    {
        "name": "2022-02-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-nested#m-01-destroy-can-avoid-the-bulk-of-fees",
        "vulnerability": "Destroy can avoid the bulk of fees"
    },
    {
        "name": "2022-02-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-nested#m-02-nestedfactory-does-not-track-operators-properly",
        "vulnerability": "`NestedFactory` does not track operators properly"
    },
    {
        "name": "2022-02-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-nested#m-04-nestedfactory-user-can-utilise-accidentally-sent-eth-funds-via-processoutputorders--processinputandoutputorders",
        "vulnerability": "`NestedFactory`: User can utilise accidentally sent ETH funds via `processOutputOrders()` / `processInputAndOutputOrders()`"
    },
    {
        "name": "2022-02-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-nested#m-05-wrong-logic-around-areoperatorsimported",
        "vulnerability": "Wrong logic around `areOperatorsImported`"
    },
    {
        "name": "2022-02-nested",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-nested#m-03-undesired-behavior",
        "vulnerability": "Undesired behavior"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-sherlock#h-02-[bug]-a-critical-bug-in-bps-function",
        "vulnerability": "[Bug] A critical bug in `bps` function"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-sherlock#m-04-yield-distribution-after-large-payout-seems-unfair",
        "vulnerability": "Yield distribution after large payout seems unfair"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-07-sherlock#h-01-single-under-funded-protocol-can-break-paying-off-debt",
        "vulnerability": "Single under-funded protocol can break paying off debt"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-sherlock#m-01-incorrect-internal-balance-bookkeeping",
        "vulnerability": "Incorrect internal balance bookkeeping"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-sherlock#m-03-reputation-risks-with-updatesolution",
        "vulnerability": "reputation risks with `updateSolution`"
    },
    {
        "name": "2021-07-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-07-sherlock#m-02-dosherx-optimistically-assumes-premiums-will-be-paid",
        "vulnerability": "`_doSherX` optimistically assumes premiums will be paid"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-04-unsponsor--claimyield-and-withdraw-might-fail-unexpectedly",
        "vulnerability": "unsponsor, claimYield and withdraw might fail unexpectedly"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-15-check-to-is-not-empty",
        "vulnerability": "Check _to is not empty"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sandclock#h-02-withdrawers-can-get-more-value-returned-than-expected-with-reentrant-call",
        "vulnerability": "Withdrawers can get more value returned than expected with reentrant call"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-13-incompatibility-with-rebasingdeflationaryinflationary-tokens",
        "vulnerability": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sandclock#h-04-deposit-function-is-open-to-reentrancy-attacks",
        "vulnerability": "deposit() function is open to reentrancy attacks"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-01-late-users-will-take-more-losses-than-expected-when-the-underlying-contract-ethanchor-suffers-investment-losses",
        "vulnerability": "Late users will take more losses than expected when the underlying contract (`EthAnchor`) suffers investment losses"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-05-add-a-timelock-to-basestrategysetperffeepct",
        "vulnerability": "Add a timelock to `BaseStrategy:setPerfFeePct`"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-03-centralization-risk-funds-can-be-frozen-when-critical-key-holders-lose-access-to-their-keys",
        "vulnerability": "Centralization Risk: Funds can be frozen when critical key holders lose access to their keys"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-09-no-use-of-safemint-as-safe-guard-for-users",
        "vulnerability": "no use of safeMint() as safe guard for users"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sandclock#h-03-vaults-with-non-ust-underlying-asset-vulnerable-to-flash-loan-attack-on-curve-pool",
        "vulnerability": "Vaults with non-UST underlying asset vulnerable to flash loan attack on curve pool"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sandclock#h-05-sponsor-function-in-open-to-reentrancy-attacks",
        "vulnerability": "sponsor() function in open to reentrancy attacks"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-08-medium-consider-alternative-price-feed-+-ensure-minlockperiod->-0-to-prevent-flash-loan-attacks",
        "vulnerability": "Medium: Consider alternative price feed + ensure _minLockPeriod > 0 to prevent flash loan attacks"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-14-a-single-malicious-trusted-account-can-takeover-parent-contract",
        "vulnerability": "A Single Malicious Trusted Account Can Takeover Parent Contract"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-06-totalunderlyingminussponsored-may-revert-on-underflow-and-malfunction-the-contract",
        "vulnerability": "`totalUnderlyingMinusSponsored()` may revert on underflow and malfunction the contract"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-12-investedassets-does-not-take-into-consideration-the-performance-fee-charged-on-strategy-withdrawals",
        "vulnerability": "`investedAssets()` Does Not Take Into Consideration The Performance Fee Charged On Strategy Withdrawals"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-07-vault-cant-receive-deposits-if-underlying-token-charges-fees-on-transfer",
        "vulnerability": "Vault can\u2019t receive deposits if underlying token charges fees on transfer"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-02-nonuststrategysol-improper-handling-of-swap-fees-allows-attacker-to-steal-funds-from-other-users",
        "vulnerability": "`NonUSTStrategy.sol` Improper handling of swap fees allows attacker to steal funds from other users"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-11-changing-a-strategy-can-be-bricked",
        "vulnerability": "Changing a strategy can be bricked"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sandclock#m-10-no-setter-for-exchangeratefeeder--whose-address-might-change-in-future",
        "vulnerability": "No setter for exchangeRateFeeder, whose address might change in future"
    },
    {
        "name": "2022-01-sandclock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sandclock#h-01-forceunsponsor-may-open-a-window-for-attackers-to-manipulate-the-totalshares-and-freeze-users-funds-at-a-certain-deposit-amount",
        "vulnerability": "`forceUnsponsor()` may open a window for attackers to manipulate the `_totalShares` and freeze users\u2019 funds at a certain deposit amount"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-05-qtokens-with-the-same-symbol-will-lead-to-mistakes",
        "vulnerability": "QTokens with the same symbol will lead to mistakes"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-10-admin-of-the-upgradeable-proxy-contract-of-controllersol-can-rug-users",
        "vulnerability": "Admin of the upgradeable proxy contract of `Controller.sol` can rug users"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-09-spreads-can-be-minted-with-a-deactivated-oracle",
        "vulnerability": "Spreads can be minted with a deactivated oracle"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-07-low-level-transfer-via-call-can-fail-silently",
        "vulnerability": "Low-level transfer via `call()` can fail silently"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-02-collateralminterrole-can-be-granted-by-the-deployer-of-quantconfig-and-mint-arbitrary-amount-of-tokens",
        "vulnerability": "`COLLATERAL_MINTER_ROLE` can be granted by the deployer of `QuantConfig` and mint arbitrary amount of tokens"
    },
    {
        "name": "2022-03-rolla",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-rolla#h-01-incorrect-strike-price-displayed-in-namesymbol-of-qtoken",
        "vulnerability": "Incorrect strike price displayed in name/symbol of qToken"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-03-usage-of-deprecated-chainlink-functions",
        "vulnerability": "Usage of deprecated Chainlink functions"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-06-operateproxycallfunction-should-check-if-the-callee-is-a-contract",
        "vulnerability": "`OperateProxy.callFunction()` should check if the `callee` is a contract"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-01-no-use-of-upgradeable-safeerc20-contract-in-controllersol",
        "vulnerability": "No use of upgradeable SafeERC20 contract in `Controller.sol`"
    },
    {
        "name": "2022-03-rolla",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-rolla#h-02-mint-spread-collateral-less-and-conjuring-collateral-claims-out-of-thin-air-with-implicit-arithmetic-rounding-and-flawed-int-to-uint-conversion",
        "vulnerability": "Mint spread collateral-less and conjuring collateral claims out of thin air with implicit arithmetic rounding and flawed int to uint conversion"
    },
    {
        "name": "2022-03-rolla",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-rolla#h-04-eip712metatransactionexecutemetatransaction-failed-txs-are-open-to-replay-attacks",
        "vulnerability": "`EIP712MetaTransaction.executeMetaTransaction()` failed txs are open to replay attacks"
    },
    {
        "name": "2022-03-rolla",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-03-rolla#h-03-wrong-implementation-of-eip712metatransaction",
        "vulnerability": "Wrong implementation of `EIP712MetaTransaction`"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-08-arbitrary-code-can-be-run-with-controller-as-msgsender",
        "vulnerability": "Arbitrary code can be run with Controller as msg.sender"
    },
    {
        "name": "2022-03-rolla",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-03-rolla#m-04-configtimelockcontroller-will-put-quantconfig-in-a-stalemate-rendering-it-unusable",
        "vulnerability": "`ConfigTimeLockController` will put `QuantConfig` in a stalemate (rendering it unusable)"
    },
    {
        "name": "2021-10-ambire",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-ambire#h-02-quickaccmanagersolcancel-wrong-hashtx-makes-it-impossible-to-cancel-a-scheduled-transaction",
        "vulnerability": "`QuickAccManager.sol#cancel()` Wrong `hashTx` makes it impossible to cancel a scheduled transaction"
    },
    {
        "name": "2021-10-ambire",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-ambire#h-03-signature-replay-attacks-for-different-identities-nonce-on-wrong-party",
        "vulnerability": "Signature replay attacks for different identities (nonce on wrong party)"
    },
    {
        "name": "2021-10-ambire",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-ambire#h-04-quickaccmanager-smart-contract-signature-verification-can-be-exploited",
        "vulnerability": "`QuickAccManager` Smart Contract signature verification can be exploited"
    },
    {
        "name": "2021-10-ambire",
        "severity": "H",
        "link": "https://code4rena.com/reports/2021-10-ambire#h-01-prevent-execution-with-invalid-signatures",
        "vulnerability": "Prevent execution with invalid signatures"
    },
    {
        "name": "2022-01-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sherlock#m-02-tokenbalanceofaddress-of-nftowner-becomes-permanently-incorrect-after-arbrestake",
        "vulnerability": "`tokenBalanceOfAddress` of `nftOwner` becomes permanently incorrect after `arbRestake`"
    },
    {
        "name": "2022-01-sherlock",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-01-sherlock#h-01-first-user-can-steal-everyone-elses-tokens",
        "vulnerability": "first user can steal everyone else\u2019s tokens"
    },
    {
        "name": "2022-01-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sherlock#m-03-updateyieldstrategy-will-freeze-some-funds-with-the-old-strategy-if-yieldstrategy-fails-to-withdraw-all-the-funds-because-of-liquidity-issues",
        "vulnerability": "`updateYieldStrategy` will freeze some funds with the old Strategy if `yieldStrategy` fails to withdraw all the funds because of liquidity issues"
    },
    {
        "name": "2022-01-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sherlock#m-04-reenterancy-in-sendsherrewardstoowner",
        "vulnerability": "Reenterancy in `_sendSherRewardsToOwner()`"
    },
    {
        "name": "2022-01-sherlock",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-01-sherlock#m-01-sherlockclaimmanager-incorrect-amounts-needed-and-paid-for-escalated-claims",
        "vulnerability": "`SherlockClaimManager`: Incorrect amounts needed and paid for escalated claims"
    },
    {
        "name": "2022-02-pooltogether",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-pooltogether#m-01-permitandmulticall-may-be-used-to-steal-funds-or-as-a-denial-of-service-if-from-is-not-the-message-sender",
        "vulnerability": "`permitAndMulticall()` May Be Used to Steal Funds Or as a Denial Of Service if `_from` Is Not The Message Sender"
    },
    {
        "name": "2022-02-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-pooltogether#g-02-inline-all-these-little-functions",
        "vulnerability": "Inline all these little functions"
    },
    {
        "name": "2022-02-pooltogether",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-pooltogether#g-01-loop-in-delegation-and-permitandmulticall-contracts",
        "vulnerability": "Loop in `Delegation` and `PermitAndMulticall` contracts"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-06-simple-interest-calculation-is-not-exact",
        "vulnerability": "Simple interest calculation is not exact"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-12-staking-tokens-can-be-stolen",
        "vulnerability": "Staking tokens can be stolen"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-05-community-contract--execute-function",
        "vulnerability": "community contract :: execute function"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-10-possible-wrong-basset-rewardsborrow-limits-calculation",
        "vulnerability": "Possible Wrong bAsset Rewards/Borrow limits Calculation"
    },
    {
        "name": "2022-02-anchor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-anchor#h-03-missing-access-control-for-fabricatemirclaim-and-fabricateancclaim",
        "vulnerability": "Missing Access Control for `FabricateMIRClaim` and `FabricateANCClaim`"
    },
    {
        "name": "2022-02-anchor",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-anchor#n-02-incorrect-description-of-safe-ratio-in-documentation",
        "vulnerability": "Incorrect description of `Safe Ratio` in documentation"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-04-sandwich-attack-on-astroport-sweep",
        "vulnerability": "Sandwich attack on astroport sweep"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-01-anchorbassethub-contract--executeregistervalidator-function",
        "vulnerability": "anchor_basset_hub contract :: execute_register_validator function"
    },
    {
        "name": "2022-02-anchor",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-anchor#l-04-duplicate-vesting-schedules-can-be-added",
        "vulnerability": "Duplicate vesting schedules can be added"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-05-anchorbassetreward-pending-yields-can-be-stolen",
        "vulnerability": "`anchor_basset_reward` pending yields can be stolen"
    },
    {
        "name": "2022-02-anchor",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-anchor#l-02-incorrect-opcode-specification-documentation",
        "vulnerability": "Incorrect opcode specification documentation"
    },
    {
        "name": "2022-02-anchor",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-anchor#l-01-crossanchorbridge-decide-if-whitelisting-feature-is-to-be-kept-or-removed",
        "vulnerability": "CrossAnchorBridge: Decide if whitelisting feature is to be kept or removed"
    },
    {
        "name": "2022-02-anchor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-anchor#h-02-money-market-contractsoraclefeedprices-delayed-transaction-may-disrupt-price-feeds",
        "vulnerability": "`money-market-contracts/oracle#feed_prices()` delayed transaction may disrupt price feeds"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-02-beth-rewards-may-be-depleted-by-flashloans-or-whales",
        "vulnerability": "`bEth` Rewards May Be Depleted By Flashloans or Whales"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-02-gov-contract--withdrawvotingtokens-function",
        "vulnerability": "gov contract :: withdraw_voting_tokens function"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-09-potential-lock-of-rewards-in-the-custody-contracts",
        "vulnerability": "Potential lock of rewards in the custody contracts"
    },
    {
        "name": "2022-02-anchor",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-anchor#n-01-money-market-contracts-market-maxborrowfactor-is-not-capped",
        "vulnerability": "money-market-contracts: Market max_borrow_factor is not capped"
    },
    {
        "name": "2022-02-anchor",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-anchor#h-01-spend-limit-on-owner-can-be-bypassed",
        "vulnerability": "Spend limit on owner can be bypassed"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-07-updating-the-hubs-token-contract-address-may-lead-to-incorrect-undelegation-amount",
        "vulnerability": "Updating the hub\u2019s token contract address may lead to incorrect undelegation amount"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-01-when-transferring-tokens-not-in-whitelist-on-ethereum-to-terra-with-crossanchorbridgedepositstable--the-funds-may-get-frozen",
        "vulnerability": "When transferring tokens not in `whitelist` on Ethereum to Terra with `CrossAnchorBridge.depositStable()`, the funds may get frozen"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-03-governance-voting-dis-proportionally-favours-users-who-stake-and-vote-after-a-poll-has-been-created-and-had-its-snapshot-taken",
        "vulnerability": "Governance Voting Dis-proportionally Favours Users Who Stake And Vote After A Poll Has Been Created And Had Its Snapshot Taken"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-11-money-market-contractscontractsmarket-claimrewards-may-revert-due-to-spendlimit-set-on-distributor",
        "vulnerability": "`money-market-contracts/contracts/market` `claim_rewards` may revert due to `spend_limit` set on `distributor`"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-04-gov-contract--castvote",
        "vulnerability": "gov contract :: cast_vote"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-03-gov-contract--createpoll-function",
        "vulnerability": "gov contract :: create_poll function"
    },
    {
        "name": "2022-02-anchor",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-anchor#m-08-unbonding-validator-random-selection-can-be-predicted",
        "vulnerability": "Unbonding validator random selection can be predicted"
    },
    {
        "name": "2022-02-anchor",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-anchor#n-04-outstanding-todo",
        "vulnerability": "Outstanding TODO"
    },
    {
        "name": "2022-02-anchor",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-anchor#l-03-slightly-imprecise-tax-calculation",
        "vulnerability": "Slightly imprecise tax calculation"
    },
    {
        "name": "2022-02-anchor",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-anchor#n-03-typos--grammar",
        "vulnerability": "Typos / Grammar"
    },
    {
        "name": "2022-02-anchor",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-anchor#g-06-anchorbassetreward--executeincreasebalanceexecutedecreasebalance",
        "vulnerability": "anchor_basset_reward :: execute_increase_balance/execute_decrease_balance"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-04-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of Solidity"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-13-dont-compare-boolean-expressions-to-boolean-literals",
        "vulnerability": "Don\u2019t compare boolean expressions to boolean literals"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-thegraph#l-02-avoid-shadowing-inherited-state-variables",
        "vulnerability": "Avoid _shadowing_ `inherited state variables`"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-09-implement-some-type-of-version-counter-that-will-be-incremented-automatically-for-contract-upgrades",
        "vulnerability": "Implement some type of version counter that will be incremented automatically for contract upgrades"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-11-omissions-in-events",
        "vulnerability": "Omissions in Events"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-16-use-custom-errors-rather-than-revertrequire-strings-to-save-gas",
        "vulnerability": "Use custom errors rather than `revert()`/`require()` strings to save gas"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-thegraph#l-01-using-vulnerable-version-of-openzeppelin",
        "vulnerability": "Using Vulnerable Version of Openzeppelin"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-02-include-return-parameters-in-natspec-comments",
        "vulnerability": "Include `return parameters` in _NatSpec comments_"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-13-floating-pragma",
        "vulnerability": "Floating pragma"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-05-require-revert-cause-should-be-known",
        "vulnerability": "Require revert cause should be known"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-03-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage",
        "vulnerability": "State variables should be cached in stack variables rather than re-reading them from storage"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-17-add-to-blacklist-function",
        "vulnerability": "Add to `_blacklist function_`"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-12-constant-values-such-as-a-call-to-keccak256--should-used-to-immutable-rather-than-constant",
        "vulnerability": "Constant values such as a call to `keccak256()`, should used to immutable rather than constant"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-15-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function",
        "vulnerability": "`require()` or `revert()` statements that check input arguments should be at the top of the function"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-01-state-variables-can-be-packed-into-fewer-storage-slots",
        "vulnerability": "State variables can be packed into fewer storage slots"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-05-requirerevert-strings-longer-than-32-bytes-cost-extra-gas",
        "vulnerability": "`require()`/`revert()` strings longer than 32 bytes cost extra gas"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-06-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once",
        "vulnerability": "`keccak256()` should only need to be called on a specific string literal once"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-10-natspec-is-missing",
        "vulnerability": "NatSpec is Missing"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-07-for-modern-and-more-readable-code;-update-import-usages",
        "vulnerability": "For modern and more readable code; update import usages"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-thegraph#m-04-after-proposed-080-upgrade-kicks-in--l2-finalizeinboundtransfer-might-not-work",
        "vulnerability": "After proposed 0.8.0 upgrade kicks in, L2 `finalizeInboundTransfer` might not work"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-11-using->-0-costs-more-gas-than-!=-0-when-used-on-a-uint-in-a-require-statement",
        "vulnerability": "Using `> 0` costs more gas than `!= 0` when used on a `uint` in a `require()` statement"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-16-for-functions--follow-solidity-standard-naming-conventions",
        "vulnerability": "For functions, follow Solidity standard naming conventions"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-03-0-address-check",
        "vulnerability": "`0 address` check"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-14-inconsistent-solidity-versions",
        "vulnerability": "Inconsistent Solidity Versions"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-07-optimize-names-to-save-gas",
        "vulnerability": "Optimize names to save gas"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-09-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-04-internal-functions-only-called-once-can-be-inlined-to-save-gas",
        "vulnerability": "`internal` functions only called once can be inlined to save gas"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-10-use-a-more-recent-version-of-solidity",
        "vulnerability": "Use a more recent version of solidity"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-01-testing-all-functions-is-best-practice",
        "vulnerability": "Testing all functions is best practice"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-08-using-bools-for-storage-incurs-overhead",
        "vulnerability": "Using `bool`s for storage incurs overhead"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-thegraph#m-02-if-l1graphtokengateways-outboundtransfer-is-called-by-a-contract--the-entire-msgvalue-is-blackholed--whether-the-ticket-got-redeemed-or-not",
        "vulnerability": "If L1GraphTokenGateway\u2019s `outboundTransfer` is called by a contract, the entire `msg.value` is blackholed, whether the ticket got redeemed or not"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-thegraph#m-03-governor-can-rug-pull-the-escrow",
        "vulnerability": "Governor can rug pull the escrow"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-10-thegraph#m-01-initialize-function-in-l2graphtokensol--bridgeescrowsol--l2graphtokengatewaysol--l1graphtokengatewaysol-can-be-invoked-multiple-times-from-the-implementation-contract",
        "vulnerability": "Initialize function in `L2GraphToken.sol`, `BridgeEscrow.sol`, `L2GraphTokenGateway.sol`, `L1GraphTokenGateway.sol` can be invoked multiple times from the implementation contract"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-08-function-writing-that-does-not-comply-with-the-solidity-style-guide",
        "vulnerability": "`Function writing` that does not comply with the `Solidity Style Guide`"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-12-splitting-require-statements-that-use-&&-saves-gas",
        "vulnerability": "Splitting `require()` statements that use `&&` saves gas"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-06-use-require-instead-of-assert",
        "vulnerability": "Use `require` instead of `assert`"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-10-thegraph#n-15-for-extended-\u201cusing-for\u201d-usage--use-the-latest-pragma-version",
        "vulnerability": "For extended \u201cusing-for\u201d usage, use the latest pragma version"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-14-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once",
        "vulnerability": "Stack variable used as a cheaper cache for a state variable is only used once"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-02-avoid-contract-existence-checks-by-using-low-level-calls",
        "vulnerability": "Avoid contract existence checks by using low level calls"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-10-thegraph#g-17-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable",
        "vulnerability": "Functions guaranteed to revert when called by normal users can be marked `payable`"
    },
    {
        "name": "2022-10-thegraph",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-10-thegraph#l-03-natspec-comments-should-be-increased-in-contracts",
        "vulnerability": "NatSpec comments should be increased in contracts"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#g-01-slurp-sload-gas-optimization",
        "vulnerability": "`slurp` SLOAD Gas Optimization"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#l-01-missing-checks-on-new-boost-cap",
        "vulnerability": "Missing checks on new Boost Cap"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#m-01-erc4626routerbasewithdraw-should-use-a-**max**-shares-out-check",
        "vulnerability": "`ERC4626RouterBase.withdraw` should use a **max** shares out check"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#m-03-slurp-can-be-frontrun-with-fee-increase",
        "vulnerability": "Slurp can be frontrun with fee increase"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#h-01-erc4626-mint-uses-wrong-amount",
        "vulnerability": "ERC4626 mint uses wrong `amount`"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#m-05-gibber-can-take-any-amount-from-safes",
        "vulnerability": "Gibber can take any amount from safes"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "N",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#n-01-emit-function-called-early",
        "vulnerability": "Emit function called early"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#m-04-erc4626-does-not-work-with-fee-on-transfer-tokens",
        "vulnerability": "ERC4626 does not work with fee-on-transfer tokens"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#h-02-turborouter-deposit--mint--createsafeanddeposit-and-createsafeanddepositandboost-functions-do-not-work",
        "vulnerability": "TurboRouter: `deposit()`, `mint()`, `createSafeAndDeposit()` and `createSafeAndDepositAndBoost()` functions do not work"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#l-02-more-funds-extracted-than-required---lose-interest",
        "vulnerability": "More funds extracted than required - Lose Interest"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "G",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#g-02-save-sload-gas-optimization",
        "vulnerability": "`save` SLOAD Gas Optimization"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#m-02-wrong-implementation-of-turbosafesolless-may-cause-boosted-record-value-in-turbomaster-bigger-than-actual-lead-to-boostcapforvault-and-boostcapforcollateral-to-be-permanently-occupied",
        "vulnerability": "Wrong implementation of `TurboSafe.sol#less()` may cause boosted record value in TurboMaster bigger than actual lead to `BoostCapForVault` and `BoostCapForCollateral` to be permanently occupied"
    },
    {
        "name": "2022-02-tribe-turbo",
        "severity": "L",
        "link": "https://code4rena.com/reports/2022-02-tribe-turbo#l-03-missing-zero-address-checks",
        "vulnerability": "Missing zero address checks"
    },
    {
        "name": "2021-10-slingshot",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-slingshot#m-01-initialbalance-for-native-token-is-wrong",
        "vulnerability": "`initialBalance` for native token is wrong"
    },
    {
        "name": "2021-10-slingshot",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-slingshot#m-02-trades-where-totoken-is-feeontransfertoken-might-send-user-less-tokens-than-finalamountmin",
        "vulnerability": "Trades where toToken is feeOnTransferToken might send user less tokens than finalAmountMin"
    },
    {
        "name": "2022-08-nounsdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-nounsdao#m-02-user-a-cannot-cancel-user-bs-proposal-when-user-bs-prior-number-of-votes-at-relevant-block-is-same-as-proposal-threshold--which-contradicts-the-fact-that-user-b-actually-cannot-create-the-proposal-when-the-prior-number-of-votes-is-same-as-proposal-threshold",
        "vulnerability": "User A cannot cancel User B\u2019s proposal when User B\u2019s prior number of votes at relevant block is same as proposal threshold, which contradicts the fact that User B actually cannot create the proposal when the prior number of votes is same as proposal threshold"
    },
    {
        "name": "2022-08-nounsdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-nounsdao#m-03-loss-of-veto-power-can-lead-to-51%-attack",
        "vulnerability": "Loss of Veto Power can Lead to 51% Attack"
    },
    {
        "name": "2022-08-nounsdao",
        "severity": "M",
        "link": "https://code4rena.com/reports/2022-08-nounsdao#m-01-voters-can-burn-large-amounts-of-ether-by-submitting-votes-with-long-reason-strings",
        "vulnerability": "Voters can burn large amounts of Ether by submitting votes with long reason strings"
    },
    {
        "name": "2022-08-nounsdao",
        "severity": "H",
        "link": "https://code4rena.com/reports/2022-08-nounsdao#h-01-erc721checkpointable-delegatebysig-allows-the-user-to-vote-to-address-0--which-causes-the-user-to-permanently-lose-his-vote-and-cannot-transfer-his-nft",
        "vulnerability": "ERC721Checkpointable: delegateBySig allows the user to vote to address 0, which causes the user to permanently lose his vote and cannot transfer his NFT."
    },
    {
        "name": "2021-10-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tracer#m-03-uncommit-sends-tokens-to-the-wrong-user",
        "vulnerability": "`uncommit` sends tokens to the wrong user"
    },
    {
        "name": "2021-10-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tracer#m-01-wrong-keeper-reward-computation",
        "vulnerability": "Wrong keeper reward computation"
    },
    {
        "name": "2021-10-tracer",
        "severity": "M",
        "link": "https://code4rena.com/reports/2021-10-tracer#m-02-deposits-dont-work-with-fee-on-transfer-tokens",
        "vulnerability": "Deposits don\u2019t work with fee-on transfer tokens"
    }
]